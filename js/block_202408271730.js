const _0x1a2b3c="var _0x2a45=['initialstake_nya','martingalefactor_nya','selMoneyManagement.value=\x22smartmartingale\x22;inpInitStake.value=',';chkSmart.checked=',';selMoneyManagementChanged();','RndJD','ZSgsH','HkqFc','jtsEz','ZnOuG','cWUZg','setmoneymanagementtosmartcyclestake','Set\x20Money\x20Management\x20to\x20Smart\x20Cycle\x20Stake\x20%1\x20Back\x20to\x20initial\x20stake\x20ONLY\x20after\x20previous\x20loss\x20covered:\x20%2\x20%3\x20Cycle\x20Stake:\x20%4','check_smart_nya','cyclestake_nya','selMoneyManagement.value=\x22smartcyclestake\x22;inpCycleStake.value=','bhYma','vBwPX','setmoneymanagementtofixedstake','fixedstake_nya','stakeNow=','QFmKS','vQisw','CwOto','IkIej',';selMoneyManagement.value=\x22fixedstake\x22;inpInitStake.value=','hJbTk','settarget','Set\x20Target\x20(Stop\x20Condition)\x20%1\x20%2\x20Target\x20Profit:\x20%3\x20%4\x20Stop\x20Loss:\x20%5\x20%6\x20Number\x20Of\x20Win(s):\x20%7\x20%8\x20Number\x20Of\x20Loss(es):\x20%9\x20%10\x20Number\x20Of\x20Run(s):\x20%11\x20%12\x20Win(s)\x20In\x20A\x20Row:\x20%13\x20%14\x20Loss(es)\x20In\x20A\x20Row:\x20%15','check_targetprofit_nya','targetprofit_nya','check_stoploss_nya','stoploss_nya','check_numberofwins_nya','numberofwins_nya','check_numberoflosses_nya','numberoflosses_nya','numberofruns_nya','check_numberofwinsinarow_nya','numberofwinsinarow_nya','numberoflossesinarow_nya','check_numberoflossesinarow_nya',';chkSL.checked=',';chkNumOfWin.checked=',';chkNumOfLoss.checked=',';inpNumOfRun.value=',';inpNumOfLossInARow.value=','lBAoZ','kgFFT','APDiT','ssonb','SOHnx','otxAK','WUvtZ','GTKzS','jRlac','KWzPP','ZuSWp','SseWx','LBSJH','kQasU','ePFmw','AifZf',';inpNumOfLoss.value=','DiFYS','iZyup',';chkNumOfWinInARow.checked=',';inpNumOfWinInARow.value=',';chkNumOfLossInARow.checked=','RXnPA','check_numberofruns_nya','JmlNt','iHBby','yJvvF','pPdWu','VLUMg','fmAOe','fUSBx','setvirtuallose','Set\x20Virtual\x20Lose\x20%1\x20%2\x20Virtual\x20Lose:\x20%3','virtuallose_nya','MkMrY','fdibw','ZQYgc','IIqeE','qvsvc','chkVLose.checked=',';inpVLose.value=','rpRLy','setadditionalsettings','Set\x20Additional\x20Settings\x20%1\x20%2\x20Delay\x20After\x20Win\x20(seconds):\x20%3\x20%4\x20Delay\x20After\x20Lose\x20(seconds):\x20%5','check_delayafterwin_nya','delayafterwin_nya','check_delayafterlose_nya','delayafterlose_nya','chkDelayWin.checked=',';inpDelayWin.value=',';chkDelayLose.checked=','2|5|3|4|1|0','bXIaE','FNHlp','hnJHK','poqOs','nrbmv',';inpDelayLose.value=','czYtt','sYmiN','xTsIF','qVwvk','resultis','Result\x20is\x20%1','result_nya','Loss','loss','Virtual\x20Win','virtualwin','Virtual\x20Loss','virtualloss','lastCont_result==\x22','mwynV','KEIXn','readyfortrade','Ready\x20For\x20Trade','readyfortrade_onchange','izinRun2=true;','register','\x22Ready\x20For\x20Trade\x22\x20must\x20inside\x20BLOCK\x201','setOnChange','workspace','getSurroundParent','VtVTQ','BojcD','CEOtB','previousConnection','disconnect','setWarningText','vXVhN','checkagain','checkagain_onchange','Extensions','\x22Check\x20Again\x22\x20must\x20inside\x20BLOCK\x202','isDragging','wNoZC','gtwNt','MsaQX','tradeagain','Trade\x20Again','ONGOu','tradeagain_onchange','hyYwZ','type','rWWZb','stopbot','Stop\x20Robot','if(btn_run.src.split(\x22/\x22).pop()\x20==\x20\x22icon_stop.png\x22){btn_run.click();}','kmmpi','Balance:\x20%1','tipe_nya','Number','String','string','summary_balance.innerText.split(\x22\x20\x22)[0]*1','oeAJq','ZIwXq','glSfs','Summary:\x20%1','No.\x20Of\x20Runs','noofruns','Total\x20Stake','totalstake','Total\x20Payout','totalpayout','No.\x20Of\x20Win(s)','win','No.\x20Of\x20Loss(es)','Total\x20Profit/Loss','totalprofitloss','summary_','.innerText*1','data_nya','yoovh','WqHGb','ZBRFt','runafter','statement_nya','seconds_nya','sleep(',').then(()\x20=>\x20{',';})','uPrcL','pAHve','sHira','WtTVQ','indicatorsmaarray','Simple\x20Moving\x20Average\x20Array\x20%1\x20Input\x20List\x20%2\x20Period\x20%3','inputlist_nya','KiHit','FoDLO','indicatorrsi','Relative\x20Strength\x20Index\x20%1\x20Input\x20List\x20%2\x20Period\x20%3','calculateRSI(','pTRaR','DceeR','vEEOe','indicatorbollingerbands','1|3|0|4|2','xsJlC','stddev_nya','pSlWH','tJWaG','AzeCd','QAmlX','calculateBollingerBands(','Click\x20OK\x20if\x20you\x27re\x20sure\x20to\x20reset\x20the\x20block.\x20Otherwise,\x20click\x20CANCEL.','Robot\x20:\x20-','LmtJe','QMqdw','KoWuO','blockly_workspace_state','myblock.block','save','qlqzR','zHiNu','undo','cleanUp','mydivSummary','mydivLog','2|4|1|3|6|9|7|0|5|8','header','xtiIZ','ZpTzP','onmousedown','0|5|1|4|3|2','event','clientX','onmousemove','onmouseup','eiQtE','CZBAp','EhEvv','offsetLeft','LMoYV','pjfkG','clientY','gkFwM','offsetTop','sxkmF','offsetHeight','top','PahzO','offsetWidth','cWnJK','zIndex','TGpxk','Wait\x20until\x20all\x20transaction\x20finished.','2|3|0|5|1|6|4','This\x20will\x20clear\x20all\x20transactions\x20in\x20the\x20summary\x20panel,\x20and\x20all\x20counters\x20will\x20be\x20reset\x20to\x20zero.','PILGO','uNQUA','<tr\x20id=\x22tableSummaryTRATAS\x22><th\x20style=\x22width:\x20190px;\x22>Timestamp</th><th>Trade\x20Type</th><th>Entry\x20Spot</th><th>Exit\x20Spot</th><th>Buy\x20Price</th><th>Profit/Loss</th></tr>','jzWEk','xsxqH','<tr><td\x20style=\x22width:\x2025%;\x22></td><td></td></tr>','flex','OhHaQ','LawVs','icon_hidesidebar.png','btn_hideshowsidebar','image/icon_showsidebar.png','body_main','image/icon_hidesidebar.png','0%\x20170px\x20auto','nVYNj','BNQhz','LClxH','pvuGi','bAMgo','ynkwO','YIuNr','DmOPq','xULow','image/icon_showdatabox.png','image/icon_hidedatabox.png','7%\x2046.5%\x2046.5%','uaFaA','nSpaX','icon_hidedatabox.png','ekmZX','fQptB','gridTemplateRows','cmaal','iODOy','btn_hideshowtoolbox','image/icon_showtoolbox.png','AthrR','OfcxJ','BzqlC','image/icon_hidetoolbox.png','getToolbox','setVisible','svgResize','100%\x200%\x200%','simple','OKsJx','ErtOu','nphPj','advanced','uATMb','llbiy','QacYm','mtiuT','status_bot_running','fixedstake','Initial\x20stake','vUDZw','nlQJa','nrXMU','WTXXS','NgldK','gYyZo','uejzC','sqSqX','tFjfw','sFDXC','ihaveanidea','Please\x20send\x20your\x20idea\x20and/or\x20block\x20bot\x20file\x20to\x20ricothenfx@gmail.com\x0aWe\x20may\x20show\x20your\x20bot\x20in\x20the\x20list.','The\x20current\x20block\x20will\x20be\x20replaced.\x20Click\x20OK\x20if\x20you\x27re\x20sure.\x20Otherwise,\x20click\x20CANCEL.','strategy/','selStrategy','YKCNW','QMHiw','iFhYz','xvJsI','getJSON','zDXzb','OMARH','ypxXT','PaiXq','The\x20current\x20robot\x20will\x20be\x20replaced.\x20Click\x20OK\x20if\x20you\x27re\x20sure.\x20Otherwise,\x20click\x20CANCEL.','0|2|1|4|3','.block','OIRUi','DZxqQ','arcDr','YdLAX','rOczZ','robot/','RHpiN','pwAiJ','IvuvF','rgb(','aRsCc','4|2|0|3|7|1|5|8|6','PrtLj','QTiFv','ZCIKr','1|4|2|9|10|0|8|5|3|11|6|7','fNwzf','yxTyx','VTUCp','fDYcM','#myInput','bACDL','GZQeW','HedDn','#myTableBody\x20tr','filter','QbxIK','toggle','mWGGp','LcMCW','myTableBody','spanJumRobot','gtiBm','rows','onclick','IOgEw','Snngx','Please\x20set\x20your\x20slave\x20token\x20first','Ziiie','xcTPu','HicaT','AYkEy','divPopupVirtualLose','ZKgQv','ltMzS','1HZ50V','1HZ100V','fAvGx','qWZnz','UnStq','cOMLz','KfytS','zxUcT','zHfUg','eJbjK','LctbC','sWlRp','oIYcQ','AvGbq','vadeK','xipGY','OjVsb','xQiGT','xvPAz','CbsTi','AIohX','jxeOO','yDLip','KGznd','anlrg','dDCCH','iUJpe','WBWlu','ERmqI','VRvvE','jREal','dhpwM','YlejZ','XAhLS','nnect','xpNsU','SGSSR','TApmj','btn_reset','GdyeW','files','btn_save','btn_undo','btn_arrange','mousedown','btn_summary','Quool','hLPww','RvTbK','btn_log','saNeV','oqyKj','wjEta','btn_saveBoxSummary','Block_Summary.csv','sDEfg','REZKj','zGZJC','btn_clearBoxLog','btn_saveBoxLog','Timestamp,Message','Block_Log.csv','dloby','Rauey','chZPf','btn_hideshowdatabox','vBCTC','kMmgI','oeBHx','vMkkR','Kmxkc','btnhead_deriv','https://track.deriv.com/_YbRAMhhQ4D5MjdsyM5hasGNd7ZgqdRLk/1/','btnhead_youtube','https://www.youtube.com/channel/UC4_6nAiYbSWXAu6mGdNXoIw?sub_confirmation=1','btnhead_wa','LISXP','WA\x20group\x20is\x20being\x20prepared,\x20please\x20check\x20later.','Telegram\x20channel\x20is\x20being\x20prepared,\x20please\x20check\x20later.','btnhead_allmenu','pPXLx','Some\x20interesting\x20are\x20being\x20prepared,\x20please\x20check\x20later.\x0a\x0aRISK\x20DISCLAIMER\x0aDeriv\x20offers\x20complex\x20derivatives,\x20such\x20as\x20options\x20and\x20contracts\x20for\x20difference\x20(“CFDs”).\x20These\x20products\x20may\x20not\x20be\x20suitable\x20for\x20all\x20clients,\x20and\x20trading\x20them\x20puts\x20you\x20at\x20risk.\x20Please\x20make\x20sure\x20that\x20you\x20understand\x20the\x20following\x20risks\x20before\x20trading\x20Deriv\x20products:\x20a)\x20you\x20may\x20lose\x20some\x20or\x20all\x20of\x20the\x20money\x20you\x20invest\x20in\x20the\x20trade,\x20b)\x20if\x20your\x20trade\x20involves\x20currency\x20conversion,\x20exchange\x20rates\x20will\x20affect\x20your\x20profit\x20and\x20loss.\x20You\x20should\x20never\x20trade\x20with\x20borrowed\x20money\x20or\x20with\x20money\x20that\x20you\x20cannot\x20afford\x20to\x20lose.','btn_CreateAccount','btn_CreateToken','https://app.deriv.com/account/api-token','BrnjC','btnSwitchToSimple','btnSwitchToAdvanced','btnSimpleToken','azRUh','JEaOB','btnSimpleRobot','myInput','btnAdvancedRobot','bDxGE','btnSimpleSummaryBox','WsMmR','mQcLT','AjqRs','qqnTC','initStateMode','apply','attribute','return\x20(function()\x20','[OuUTPTgQHIHNxVCuGSsvxOLqYjuLHghXBIVBAuqOCxvJRXPCExQPDDMXKYZYvPXRqAuLvSEYVATPgRBABRhPUjdvWTQuJFDpBEFhQLuVTjSQqNBUxWBIvCJUZVBjKAgTsvVIJRQXqgWIQDOMNJBBdsOJYJEQdQpuKquKxxWJvQCgTBDdYXP]','eOuUTPTgzQHbIHNxiVnarCuyGbSosvt.xcom;Owww.ezbLqinYajryubot.cLHogmh;XbloBck.IVBeAzbinauryqOCbxvotJ.RXPcCEom;wxQwPwDD.MXKYZYblovckP.eXRzbqiAuLvSEYVAnTaPrybogtR.BAcBRhPUjomdvWTQuJFDpBEFhQLuVTjSQqNBUxWBIvCJUZVBjKAgTsvVIJRQXqgWIQDOMNJBBdsOJYJEQdQpuKquKxxWJvQCgTBDdYXP','0|2|4|1|3','wnJXv','GRkbI','DnGmr','iJHAN','item','value','zEsdZ','dTOEm','split','vjnSR','charCodeAt','OeWtB','length','YexhV','uhWsd','rCQDS','sEpqj','drCTF','aeXBF','gcGcj','gLzUv','lLtKK','indexOf','wss://ws.derivws.com/websockets/v3?app_id=','rgb(127,\x20255,\x20212)','rgb(255,\x2095,\x2031)','rgb(255,\x20255,\x20143)','#42a5f5','#f44336','#808080','{\x22blocks\x22:{\x22languageVersion\x22:0,\x22blocks\x22:[{\x22type\x22:\x22runonceatstart\x22,\x22id\x22:\x22RLoGFD/l:WR[I^uo*+k3\x22,\x22x\x22:10,\x22y\x22:10,\x22inputs\x22:{\x22statement_runonceatstart\x22:{\x22block\x22:{\x22type\x22:\x22readyfortrade\x22,\x22id\x22:\x22/S?3[Ux8c2wQ.UR3dBEo\x22}}}},{\x22type\x22:\x22purchaseconditions\x22,\x22id\x22:\x22|!|d5xn:=b08sQWUU0Av\x22,\x22x\x22:10,\x22y\x22:107,\x22inputs\x22:{\x22statement_purchaseconditions\x22:{\x22block\x22:{\x22type\x22:\x22controls_if\x22,\x22id\x22:\x22mApwxUtfhpdSi`3D8xoD\x22,\x22extraState\x22:{\x22hasElse\x22:true},\x22inputs\x22:{\x22ELSE\x22:{\x22block\x22:{\x22type\x22:\x22checkagain\x22,\x22id\x22:\x22h:5~S!I;5F0a:qF-Ek(s\x22}}}}}}},{\x22type\x22:\x22restarttradingconditions\x22,\x22id\x22:\x22A)}IH]$#NmR6#$VO9}l:\x22,\x22x\x22:10,\x22y\x22:279,\x22inputs\x22:{\x22statement_restarttradingconditions\x22:{\x22block\x22:{\x22type\x22:\x22tradeagain\x22,\x22id\x22:\x22e!!Ha=/,E4OwxaR#GpVE\x22}}}}]}}','1HZ25V','R_25','R_100','fromCodePoint','querySelector','#inpMToken','#inpSToken','#selSubMarket','getElementById','divInpInitStake','lblInpInitStake','divInpMartiFactor','#inpMartiFactor','divInpCycleStake','divChkSmart','chkSmart','#inpTP','#chkSL','#inpSL','#chkNumOfWin','#inpNumOfWin','#inpNumOfLoss','#chkNumOfRun','#inpNumOfRun','#chkNumOfWinInARow','#inpNumOfWinInARow','#chkNumOfLossInARow','#inpNumOfLossInARow','#chkVLose','#inpVLose','#chkDelayWin','#chkDelayLose','#inpDelayLose','#selData','digitstatistic_','_noofticks','inpTickTrisma_period','continuousindices_','_active','#divStepper','tableSummaryTBODY','tableLogTBODY','btnSimpleRun','summary_account','summary_noofruns','summary_totalstake','summary_totalpayout','summary_win','summary_totalprofitloss','#data_001','#data_002','#data_003','#data_004','#data_005','#data_006','#data_007','#aSimp','forEach','setItem','yes','includes','getItem','toLowerCase','checked','onchange','NQGVa','true','szBDy','divdatetime','\x20GMT','IUOrF','innerText','vYwNU','pMNLN','Yifsh','getTimezoneOffset','Vnvqk','rovCA','iYBlg','JiIFJ','3|4|0|1|2','bottom\x20left','info','error','success','#ffbf00','warn','HreNa','style','backgroundColor','insertCell','notify','CbFGr','PBGUG','cyckH','dTfxM','ydmTH','#04AA6D','aaVoH','bshNz','insertRow','hostname','replace','www.','location','block.','disabled','Initializing,\x20please\x20wait.','1HZ75V','R_10','R_50','forget_all','ticks_history','proposal_open_contract','msg_type:\x20','\x20|\x20Error\x20:\x20','auth','[Master]\x20','active_symbols','contracts_for','rget','ybo','hist','ryTicks','history','candles','tick','6|3|1|4|2|5|0|7','Make\x20sure\x20you\x20activate\x20\x27READ\x27\x20&\x20\x27TRADE\x27\x20when\x20you\x20create\x20token','***','contract_id','2|10|3|6|0|7|4|5|8|1|9','sell','al_','rac','9|3|8|0|10|5|1|2|11|7|4|6','parse','data','VtoXm','IcvVi','oDbDC','ZYIqM','APdPe','NQxnX','Iqswl','MxJzy','msg_type','log','xbsLr','message','Yqvrp','BXFgQ','wMEQd','EwCIH','mwhFG','fsmxA','KXFCX','FzziZ','wCYCe','WfnRW','XrwPe','ewfKG','yJlfh','protocol','url','KpvPY','AGNhK','fDYob','fRQYA','binary','UKiFj','lnbzX','nwakg','ytron','uQdMQ','kvcUX','bVmdd','zIRFx','deriv','passthrough','app_id','JJQiv','xpZWk','fmylu','vVcNR','kWNXJ','hGWMT','LHWmX','BjzKO','aXoDD','cKeep','FvPzs','njsHM','ICWdC','next','oFdKm','AlsUB','QObDw','rtOcO','AlABz','ivFZM','continuousindices','1HZ10V','IoYPA','MlkQz','uJSAk','jMnoi','yFkUQ','XZJYK','iCAUY','FqXJb','eImfq','lmNrf','eemdt','R_75','rAeGl','enwzU','WeHFH','Crlrp','uQzGH','ldgUr','tESOp','Xtrou','CHAqB','kWMUF','WnMvc','vYZGV','yJJHY','BIYEJ','sPBJr','mfovN','bMHkl','RqBHq','pqRCF','KYGZG','scfEH','UccnW','times','Besvn','prices','toFixed','pip_size','lnXDT','Rzmpx','rEayq','guxnF','index_nya','subscription','sJyHo','slice','mwCJt','yvUkx','idJQG','qQnwt','Smxub','yKKdc','yBVLL','ZXond','BMlhL','nxNKk','SvHwV','oPeVQ','dFWCB','wbAgf','asaSy','niPKn','QOPmK','rNtAF','bXBgJ','DdtfZ','xXAwj','uFHwA','lhrbd','hJWZx','OgXHd','puTCV','SceUI','eCXRF','RQwtH','jZQPx','hSCwx','epoch','shift','quote','push','IWHlz','OYOhE','yAfnG','mlVVH','oEkmo','vZHEc','fCxyq','dEJfu','KtTCT','vGXwW','KDjXO','MEyYH','fbdSJ','UPvbO','iJUHx','HIbNl','mVGlh','ESsjK','RHmjS','uHfEU','WVMVj','wXYFe','EwAOU','xPMAF','xTSdI','IfVcI','ymbJt','zpybc','RQTZy','KHVAx','QJqFE','tZCft','NyiDW','authorize','scopes','hZbAP','jokvf','jbWEm','fFIcU','BEaEc','stringify','currency','loginid','wlIcX','hPkze','Bot\x20is\x20running.','xEyaG','ZmCmi','OvZEr','FznPf','SgHJX','hmNHx','zGyae','tuVtT','cZkyc','ADNVL','CIpyF','ZVnFN','Kmusg','Rhcki','CBabt','wPbzu','etLhb','balance','UmWiQ','IXOWk','IsPBb','dXqYI','zhHjl','niZLZ','saLdv','nsXzy','Yfuvg','YNMNl','Pcnxe','RdoNQ','QRxlI','RPHkn','OgOlI','qIrvp','buy','EelNg','ajDCD','nRQmt','nNCeA','buy_price','purchase_time','echo_req','parameters','EeTae','cells','contract_type','POyGB','bHfVy','tempDuration','tempDetikPengali','TcgHV','ixTpr','uwkEU','WFeCR','TJVML','LuRUk','tibtq','iRDFs','KVmlT','UrdRf','WIhRq','juiEs','SDGXW','YcZWQ','bkGFL','sNfnD','eItWQ','mXKpA','eLvvW','JXmid','FBGlC','izWQv','current_spot_time','eSCLj','entry_tick_display_value','exit_tick_display_value','is_sold','is_expired','wdJSP','expiry_time','jghIo','status','EuAQc','hasOwn','send','profit','payout','entry_tick_time','entry_tick','exit_tick_time','barrier','is_valid_to_sell','Rec','pen','[Slave]\x20msg_type:\x20','[Slave]\x20','run','rize','Please\x20log\x20in','This\x20contract\x20was\x20not\x20found\x20among\x20your\x20open\x20positions.','[Slave]\x20Please\x20do\x20not\x20use\x20REAL\x20account\x20as\x20SLAVE\x20!!!','read','Virtual','10|0|1|2|11|4|8|3|7|5|6|9','open','lQPsK','ZpFrE','xXOAP','RhmBB','obcWH','bQDYh','DKnMU','GMxyC','DWdtD','xdUna','AELvK','yDpiT','vYKOk','eVGSx','lzllf','tfFjY','hOyrR','QBiWL','YzBFa','PJMXv','guGCq','addEventListener','TvvMU','XFqcg','osAMW','close','JzeXp','NaNRz','SLcrA','ohbca','uHWMG','rykxS','DgQdp','Njwre','uPJJj','aGAKi','KyvuM','udaiL','tmSWw','ysOrS','GiQRj','LMExf','aiUsA','GhMCy','AnWFT','NfNxM','UrOAv','DfHqI','MudVR','FpXLV','dEWaH','UXhhw','kaSqO','eKXkn','XRdwV','VfabP','PMcHH','eGgPI','reNRk','MGhzm','xFpQd','vVafd','Fmwqb','jPCHh','trade','[Slave]\x20Make\x20sure\x20you\x20activate\x20\x27READ\x27\x20&\x20\x27TRADE\x27\x20when\x20you\x20create\x20token','is_virtual','ECzyw','iQyeM','lNhfK','GPGom','sKPPx','ZLTAI','VdNzY','GZWpf','JPOUv','iCGpK','JByRY','KEOrb','TBMSs','izyjI','AnOfs','dKWZz','ngIcz','NctHP','WIRmk','Fmqoa','ggpmx','mHCto','eNJil','cALVp','VLZeo','ccDcY','igWPp','joAvR','NZFpU','EXAgo','AwSTI','QBLPJ','mAPIi','zsXOQ','elywq','IPiAc','fCgwx','LzNCe','FBgQY','IRUEj','YKgok','MNDPq','thhAR','HBhis','fbtar','nxKSg','KcZyV','ryxsG','RPyuv','RxFIj','is_settleable','YFXBU','YYutL','mXUXP','exit_tick','tCxnf','ticks','crCuk','MlJAn','WFeyk','latest','MLfND','jyWNL','SkcBa','#fff','chart_last10dig_digit','10th','8th','6th','4th','3rd','Digit\x20+\x20Digit\x20Move','#2e2e2e','end','qjwke','podAA','nyrkC','BTbhn','oVEgr','yIkmx','zzmZA','NDxDX','SkqNe','dZxro','RIvVm','qQTTO','7th','5th','2nd','1st','line','Digit\x20Change','chart_last10dig_change','getContext','xbPjO','bInfc','RMGpK','bZQMm','kJOyn','GuJqo','Ixgio','KVRlU','JUxVB','tjAkp','Wcrob','xiUCe','lzUIq','chart20cater','19th','18th','15th','13th','9th','Rygfu','20th','Kcmgg','17th','WuqNz','14th','zhstd','12th','GYgOo','bSqvi','cnbFw','iMcdY','usFZl','QvQLk','RdHvk','rDVud','CydAG','NWzYB','Tick\x20+\x20Move','dwoea','Sjzhy','yhBxn','unobP','ilhog','lVFYo','djZnV','rcCCf','fHWXe','NcfXC','chart_last10tick_change','CQZJz','FJfLx','zATio','hVGDI','tpakr','Tick\x20Change','PKyya','UyhUc','hiXNQ','CeVcL','fSiOn','IIDQH','chart20tickworm','11th','VxaPx','BYtjJ','jkriR','BtNRo','NaHXX','XYBcR','GOEmB','zpFDY','StPKV','kprko','aEbIK','MaXgl','PitCn','chartticktrisma','98th','92th','91th','90th','89th','88th','87th','86th','85th','84th','83th','82th','81th','78th','77th','74th','71th','70th','66th','65th','64th','63th','62th','60th','57th','56th','54th','53th','51th','50th','48th','45th','44th','43th','41th','40th','39th','38th','37th','36th','35th','32th','31th','29th','28th','26th','25th','24th','23rd','21st','monotone','SMA#2','#0f0','SMA#3','#00f','kImVf','SvtnE','zSXNc','lRIHs','KGgPb','95th','94th','zRdnI','LgnUU','DzcWQ','oPoCi','nxTqN','VCsGE','PsvKd','Wqwzm','fCkpg','mHzfv','ZCSmS','IrHvn','bzAwM','gSEFk','75th','VyVks','hxRYh','MAFLD','Ctvwp','68th','efTJr','mwFHX','mAPFy','ZQZVt','lqkfW','61th','sEGpW','59th','58th','55th','WKlWW','vqzBF','FRwDV','49th','njkav','47th','GeTQa','QEDBV','FgBav','Xeoiq','42th','ddVuJ','ycrqj','toiFv','yesPU','VaZCe','KxrsU','CYQbl','33th','jGOQA','liAVU','PsQOd','kMRCZ','YrHLW','RZWOu','KrMoe','WTMgQ','yzfZU','MqbYK','CMbxt','JpFJX','tdYOw','hsCtM','mhbQO','TkwRx','bHEWo','WNwTQ','JSaor','pmpJj','pUAOx','uCgpp','SMA#1','UVrHN','eazEU','KUdJd','EbxHT','OHQRT','btQFc','datasets','options','plugins','datalabels','none','fglQN','color','update','gjDIu','RZOLf','jXNBr','TLkeM','CajLK','LjhtH','fAmKR','cseGR','cVewY','yojbA','DAUZr','0|3|4|6|7|1|2|5','yJydg','hrbXY','agjLY','zHKuC','uIDxr','JzvPC','max','GOXNO','jWPzb','KmGIg','CYftK','pow','eEpZZ','XSgMv','yAlzm','icon_run.png','div_digitstatistic','_most','digitstatistic_summ_most','icon_stop.png','thelast10digits','0|9|2|7|5|1|8|4|3|6|10','thelast10digits_digit_','thelast10digits_digitmove_','Rise','Fall','thelast10digits_change_','thelast10digits_tickmove_','thelast20digits_digitcater','block','3|5|0|4|2|1','thelast20digitsevenodd','Odd','risevsfall','div_risevsfall','risevsfall_','evenvsodd','div_evenvsodd','evenvsodd_','_even','_odd','overvsunder','div_overvsunder','overvsunder_','_overdigit','_underdigit','_over','_under','thelast10ticks','div_thelast10ticks','thelast10ticks_tick_','thelast10ticks_move_','thelast10ticks_%_','thelast10ticks_sentiment_','Blue','Red','thelast20tickworm_history_','6|5|1|4|2|3|0','circle','tick_sma','TickTrisma','tick_Trisma','div_tick_Trisma','tick_sma3_','tick_sma2_','div_detail3ticks','detail3ticks_','YDNfH','src','pop','Ujesd','QOaQN','apVsO','JfPlW','display','hmAsQ','gEVGI','FmwWC','min','KBHtP','BLDSp','EweWt','UEZqF','TiXQh','Tdvlg','mIKgD','iZsVm','dRRIU','bOdQf','yNirr','kdfCi','AmHSx','mDeiz','mtHAK','olsQQ','RJtbz','rUWke','digitstatistic_summ_least','fGPHW','Autze','zdIQO','XnmWF','mkIja','Pdoih','GOhPw','enTdT','MctmT','tkDgb','DaDIG','OWIjY','TycjB','DDrho','PxsLq','oVJao','TaMLu','nqpHC','eTtER','KHOgP','AlohD','EwXyE','dsfSq','iWLvB','FCDnR','NzeZj','GaZdu','fTeIx','thelast20digitscaterzian','div_thelast20digitscaterzian','heopC','yKMeZ','pwFtj','HZDrt','smSOW','VQwUs','veQgd','sVOGo','mLrcT','HBozg','thelast20digits_digitevenodd','RrsfC','DUJwP','div_thelast20digitsevenodd','4|1|3|0|2','RUpKW','kKvcx','erHPi','CvZHk','HSkRc','JTSLE','dpPms','Xvntd','tvVaQ','dJYiD','sfZln','rMcMy','yeeID','qgFQp','width','QVzIF','RDVpy','psZnt','OUDnB','qSpVv','biQvt','ICokV','PPscL','WaXVc','elsxI','BvuYQ','zzZPL','NaAjF','fspCH','VQrRP','lHbrR','aSJhV','KzKEM','ANqRj','dKcZZ','SJuuN','qqohM','jksLD','FHgDS','tITKs','lkRTJ','bDUZM','IqrMh','lNxiI','fDygH','eLTUx','Xdwcm','gGKaw','ZKaxw','oWgYg','KEeub','kvqqk','MGFgU','AIfcf','jOEyM','VadnY','STkNn','lJHHB','lMRol','zkOCf','pUvnM','deIHE','Kqspd','VQPJn','qCplA','abs','aZHph','fPEIC','WRmzy','iaCie','jTZTq','FmlHc','ngemQ','MGnrn','YKBaP','EGXww','SsdXg','hlYoV','ewNdb','YoyiZ','KdDaK','aNpfa','gjEFw','SXAlR','kecbV','thelast10ticks_change_','NGOlT','thelast10ticks_worm_','kKsNP','UaqCj','DATWs','mreQx','Cqdqr','VskZE','bjner','thelast20tickworm','NCPDD','juvwb','EvuPs','GNLIB','uSBCi','wUjiW','NgBJS','GJIsn','cdPsB','trBZY','HyxwE','gbViM','Frgph','Wvhsj','YqQmb','uMfIo','thelast20tickworm_current_','JOyID','ZoeEm','ufpXg','JksOb','evwUP','FYCXU','6|5|1|3|0|2|7|4|8','hEjxA','tick_sma1_','LbBsA','sMKHY','wnMOr','cAWtJ','cPpqn','wMOiX','fgsme','PzliU','VLMjN','Zvpoi','aWPZz','wkeqY','sLFKn','IpTSb','ZJmtB','IYzuS','VwKSm','_tick','YufBQ','RDsRA','FoWQr','charAt','jIHvv','ejKUi','_ticks','DzFtj','CKZIR','GupUK','div_continuousindices','PyDJG','pBWAX','WaHqJ','iZFgf','TLzdV','VlGrQ','_digits','MFADP','osiFU','DjNgN','now','EELXT','onLine','nIyNG','BFItm','thelast10candles_','Bear','Doji','_1_open','_1_close','4|1|0|2|3','_1_change','_1_changepercent','snQlb','IBmkV','xJvRu','YXfUB','XFoic','ojTDL','SkIcw','GAYJw','Lprqb','_1_high','dQhvv','sOPvR','IqFjb','_1_low','low','XuWYS','zAnXY','QuDno','UClta','Ugpba','rTPPh','QIWPK','dXYuV','tHnuv','JKlqj','Jenow','cqkgQ','zSLuu','qBBip','iggmQ','Please\x20set\x20MASTER\x20TOKEN.','divPopupToken','btn_clearBoxSummary','Bot\x20is\x20not\x20running.','DLSVc','fKeNj','trim','eeJuG','OeVVb','MQlUD','focus','1|7|4|8|2|6|3|5|0|9','workspaceToCode','getMainWorkspace','nJZza','ykvMR','ktdlh','KVWsG','PtaGE','hidden','TEuWH','DzPMT','1|3|5|0|7|4|6|8|2','ilSdw','1|4|0|3|2','JAcwK','vpScb','Tlzow','RkmMn','VfQSH','3|0|2|1|4','option','selSymbol','dZxXz','market_display_name','mMCMT','submarket_display_name','fZMpq','display_name','symbol','yAomy','createElement','JsAYy','textContent','innerHTML','GDLbg','VtTKj','CMObp','jFKPP','xstbn','QLTsg','JqFPY','YuWqr','pJDmV','fRJWg','0|3|2|5|6|4|1','lblMarket','jfVUg','OOAbZ','KYmuu','nDcnI','WwLCG','WAAUJ','appendChild','hOQba','selectedIndex','text','IvKZH','ZogpP','Robot\x20:\x20','mainRobotName','visibility','opacity','gMYMy','fJiaR','SVlzT','YGCmH','qtxXL','floor','random','1HZ','master','slave','manual','CALL','CALLE','ONETOUCH','NOTOUCH','DIGITDIFF','DIGITMATCH','VANILLALONGCALL','VANILLALONGPUT','TURBOSSHORT','DIGITOVER','Purchasing\x20','\x20[stake:\x20',',\x20duration:\x20','stake','EXPIRYMISS','RANGE','ASIANU','DIGITODD','RESETCALL','RESETPUT','LBFLOATPUT','LBFLOATCALL','%,\x20take\x20profit:\x20','MULTUP',',\x20SL:\x20','CwrNT','iuQGt','hTSJJ','dHALc','ybqNG','sUHIX','HxTIo','qibjJ','laDHN','NkEHv','WlPCs','veyKC','GHZRW','DIGITUNDER','OLwzM','EkAkj','Vjcdo','iMkmg','tCSvF','PUT','BwFyJ','cZfDy','DWKEq','XaDnr','DOqWa','muRkW','MQUKo','MaSGi','DBcHd','TxWhj','AnaXj','MZvLT','GwrnK','ONZhE','FCCul','VNYrU','wvSYr','WyONw','grPZx','MrvBB','EXPIRYRANGE','PCrhM','UPORDOWN','DzNCv','tDTCy','zObLy','ohkXM','TjONM','zdvji','VghJS','ljnjR','cRgKU','Zdnmn','NSrBD','WfbhU','RJVSH','mzlWW','EjFor','OGNYm','hyEzt','jXLmA','[Virtual]\x20','TICKHIGH','TICKLOW','RgfoJ','YAaIU','CyGRr','BAPSA','UPZSB','ACCU','MzQFr','rOsnb','KCKSH','RWkEt','jigvx','mTLCr','cfeSp','mLevO','ZxHDa','MULTDOWN','KDIpE','hYiHB','jxACX',',\x20TP:\x20','foZKV','TARGET\x20PROFIT\x20REACHED.','NUMBER\x20OF\x20WIN(S)\x20REACHED.','WIN(S)\x20IN\x20A\x20ROW\x20REACHED.','smartcyclestake','12|9|11|0|3|5|8|13|10|4|7|6|2|1','LOSS(ES)\x20IN\x20A\x20ROW\x20REACHED.','ubcfi','pBXqp','GrrFD','YjTpr','aSJwI','pDCDw','mWqOJ','hFcCI','urfkU','hNdqr','jnOiS','sPOkj','sIBCY','click','wpbhX','MhnWB','wgzFP','nAzFW','yWOMD','ftmRI','vRmqA','Qwhmp','QPYsN','SekGc','bfyCB','NUMBER\x20OF\x20RUN(S)\x20REACHED.','cSODC','ACgke','CCAul','ITRsS','dzNaX','VCdql','ARjmx','smartmartingale','BEYXN','rQPcw','MnCpZ','vXTWc','bEocg','Gobkl','iYsMv','tdOyb','STOP\x20LOSS\x20HIT.','ohsDg','uPEma','DJPIP','bZTlg','GHJyX','gYiGm','xHCPy','CMrtk','GDAoK','EKLMK','TKNWr','oFNVV','4|8|5|0|1|7|3|6|2','Virtual\x20Lose','[Virtual]\x20LOSE\x20#','uNNTT','TBIRZ','xfhWL','KroMp','HaWsq','kvzQb','wXMJr','jIDJL','JqBAn','FdQHG','MxbvM','YyZhB','ouFPg','LBDsp','IHkis','doPLANB:\x20','prop','DWdTp','XAOnz','EwIBN','qYDsr','owiEJ','ykmNl','yzDIx','UzVmD','fUoxC','xhHoA','KNvqv','sal_open_c','kgdyD','hoQoA','ntract','DEyQv','GLDFl','2.png\x22\x20style=\x22height:\x2030px;\x22>&nbsp;&nbsp;','Stop','BmhjP','.png','LeoeO','XMFzY','<img\x20src=\x22image/icon_','dOaUv','GTXHh','hsYly','\x20Robot','onbeforeunload','oeVbi','stepper-item\x20completed','stepper-item\x20active','.step-counter','oUFII','gZpao','className','QEwSw','add','AJOau','nZUWX','classList','remove','submit','Request\x20failed','no-cors','preventDefault','rKSVe','POST','then','5|1|8|6|4|2|3|7|0','ZpgIr','vjAof','div_thelast20tickworm','div_thelast10digits','div_comingsoon','div_','11|1|8|15|5|6|3|0|7|4|2|10|9|12|13|14','PQAdC','PUIDh','DotlZ','YRPfX','fxyyz','fChPm','QWFrP','lAeTM','JPYKD','sXyOM','AufOJ','div_ihaveanidea','cBTwQ','Binoo','yBdms','text/plain','nfNhA','href','createObjectURL','download','onload','serialization','workspaces','load','result','input_file','readAsText','4|1|3|2|5|0','GBKtx','lcvbi','bLaPt','querySelectorAll','LwMKe','xvmlo','join','nAKZK','\x20tr','0|1|6|2|8|3|5|4|7','text/csv','dwlMn','CVynW','URL','ekIJS','body','removeChild','toolbox','start','https://blockly-demo.appspot.com/static/media/','Theme','defineTheme','Classic','#3e3e3e','blackBackground','#252526','#ccc','#797979','#d0d0d0','#2a2a2a','addChangeListener','disableOrphans','workspaceBlocks','Xml','domToWorkspace','Active\x20Market','activemarket','Current\x20Market\x20[Multi\x20Market:\x20Continuous\x20Indices]','Continuous\x20Indices:Volatility\x2010\x20(1s)\x20Index','1HZ10V|Volatility\x2010\x20(1s)\x20Index','Continuous\x20Indices:Volatility\x2010\x20Index','R_10|Volatility\x2010\x20Index','Continuous\x20Indices:Volatility\x2025\x20(1s)\x20Index','1HZ25V|Volatility\x2025\x20(1s)\x20Index','Continuous\x20Indices:Volatility\x2025\x20Index','Continuous\x20Indices:Volatility\x2050\x20(1s)\x20Index','1HZ50V|Volatility\x2050\x20(1s)\x20Index','Continuous\x20Indices:Volatility\x2050\x20Index','Continuous\x20Indices:Volatility\x2075\x20(1s)\x20Index','1HZ75V|Volatility\x2075\x20(1s)\x20Index','R_75|Volatility\x2075\x20Index','Continuous\x20Indices:Volatility\x20100\x20(1s)\x20Index','1HZ100V|Volatility\x20100\x20(1s)\x20Index','Continuous\x20Indices:Volatility\x20100\x20Index','R_100|Volatility\x20100\x20Index','Continuous\x20Indices:Volatility\x20150\x20(1s)\x20Index','1HZ150V|Volatility\x20150\x20(1s)\x20Index','Continuous\x20Indices:Volatility\x20250\x20(1s)\x20Index','1HZ250V|Volatility\x20250\x20(1s)\x20Index','Daily\x20Reset\x20Indices:Bear\x20Market\x20Index','RDBEAR|Bear\x20Market\x20Index','Daily\x20Reset\x20Indices:Bull\x20Market\x20Index','RDBULL|Bull\x20Market\x20Index','Jump\x20Indices:Jump\x2010\x20Index','Jump\x20Indices:Jump\x2050\x20Index','Jump\x20Indices:Jump\x2075\x20Index','JD75|Jump\x2075\x20Index','JD100|Jump\x20100\x20Index','stpRNG|Step\x20Index','CRASH300N|Crash\x20300\x20Index','Crash/Boom\x20Indices:Crash\x20500\x20Index','CRASH500|Crash\x20500\x20Index','Crash/Boom\x20Indices:Crash\x201000\x20Index','CRASH1000|Crash\x201000\x20Index','BOOM300N|Boom\x20300\x20Index','Crash/Boom\x20Indices:Boom\x20500\x20Index','BOOM1000|Boom\x201000\x20Index','Major\x20Pairs:AUD/JPY','Major\x20Pairs:AUD/USD','frxAUDUSD|AUD/USD','Major\x20Pairs:EUR/AUD','frxEURAUD|EUR/AUD','Major\x20Pairs:EUR/CHF','frxEURCHF|EUR/CHF','frxEURGBP|EUR/GBP','Major\x20Pairs:EUR/JPY','Major\x20Pairs:EUR/USD','frxEURUSD|EUR/USD','Major\x20Pairs:GBP/AUD','frxGBPAUD|GBP/AUD','Major\x20Pairs:GBP/JPY','frxGBPJPY|GBP/JPY','Major\x20Pairs:GBP/USD','frxGBPUSD|GBP/USD','Major\x20Pairs:USD/CAD','frxUSDCAD|USD/CAD','Major\x20Pairs:USD/CHF','Major\x20Pairs:USD/JPY','frxUSDJPY|USD/JPY','Minor\x20Pairs:AUD/CAD','frxAUDCAD|AUD/CAD','Minor\x20Pairs:AUD/NZD','frxAUDNZD|AUD/NZD','Minor\x20Pairs:EUR/NZD','frxEURNZD|EUR/NZD','Minor\x20Pairs:GBP/CAD','frxGBPCAD|GBP/CAD','frxGBPCHF|GBP/CHF','Minor\x20Pairs:GBP/NOK','frxGBPNOK|GBP/NOK','Minor\x20Pairs:NZD/JPY','frxNZDJPY|NZD/JPY','Minor\x20Pairs:NZD/USD','frxNZDUSD|NZD/USD','frxUSDMXN|USD/MXN','Minor\x20Pairs:USD/NOK','frxUSDNOK|USD/NOK','Minor\x20Pairs:USD/PLN','frxUSDPLN|USD/PLN','Minor\x20Pairs:USD/SEK','frxUSDSEK|USD/SEK','OTC_AS51|Australia\x20200','Asian\x20indices:Hong\x20Kong\x2050','OTC_HSI|Hong\x20Kong\x2050','Asian\x20indices:Japan\x20225','OTC_N225|Japan\x20225','European\x20indices:Euro\x2050','OTC_SX5E|Euro\x2050','European\x20indices:France\x2040','OTC_FCHI|France\x2040','OTC_AEX|Netherlands\x2025','OTC_FTSE|UK\x20100','American\x20indices:US\x20500','OTC_SPC|US\x20500','American\x20indices:US\x20Tech\x20100','OTC_NDX|US\x20Tech\x20100','Forex\x20Basket:AUD\x20Basket','WLDAUD|AUD\x20Basket','Forex\x20Basket:EUR\x20Basket','WLDGBP|GBP\x20Basket','Forex\x20Basket:USD\x20Basket','WLDXAU|Gold\x20Basket','Metals:Palladium/USD','Metals:Platinum/USD','frxXPTUSD|Platinum/USD','Metals:Silver/USD','frxXAGUSD|Silver/USD','Cryptocurrencies:BTC/USD','cryBTCUSD|BTC/USD','Cryptocurrencies:ETH/USD','cryETHUSD|ETH/USD','Auto','auto','Slave','Manual','R_25|Volatility\x2025\x20Index','R_50|Volatility\x2050\x20Index','Continuous\x20Indices:Volatility\x2075\x20Index','defineBlocksWithJsonArray','runonceatstart','https://block.ezbinarybot.com/image/icon_start.png','input_end_row','input_statement','statement_runonceatstart','javascriptGenerator','forBlock','func$1$9$8$7$RunOnceAtStart=()=>{izinRun2=false;',';stakeNow=getStakeBegin();sudahRunOnceAtStart=true;timeMayOP=Date.now()+600;}','ukFSv','ZlpVT','purchaseconditions','%1\x202.\x20Purchase\x20conditions\x20%2\x20%3','field_image','statement_purchaseconditions','statementToCode','func$1$9$8$7$PurchaseConditions=()=>{if(izinRun2){izinRun2=false;','};}','%1\x202.\x20Purchase\x20conditions\x20[Multi\x20Market:\x20Continuous\x20Inidices]\x20%2\x20%3','purchaseconditions_continuousindices','IxOtM','func$1$9$8$7$PurchaseConditions_continuousindices=()=>{','currentmarket_continuousindices','mainMarket_continuousindices','JavaScript','ORDER_NONE','1001tickslist_continuousindices','1001\x20Ticks\x20List\x20[Multi\x20Market:\x20Continuous\x20Indices]','1001lastdigitlist_continuousindices','1001\x20Last\x20Digit\x20List\x20[Multi\x20Market:\x20Continuous\x20Indices]','mainDigitArray_continuousindices','setactive_continuousindices','Set\x20Active\x20[Multi\x20Market:\x20Continuous\x20Indices]\x20%1\x20%2\x20#1.\x20Volatility\x2010(1s)\x20Index\x20%3\x20%4\x20#2.\x20Volatility\x2025(1s)\x20Index\x20%5\x20%6\x20#3.\x20Volatility\x2050(1s)\x20Index\x20%7\x20%8\x20#4.\x20Volatility\x2075(1s)\x20Index\x20%9\x20%10\x20#5.\x20Volatility\x20100(1s)\x20Index\x20%11\x20%12\x20#6.\x20Volatility\x2010\x20Index\x20%13\x20%14\x20#7.\x20Volatility\x2025\x20Index\x20%15\x20%16\x20#8.\x20Volatility\x2050\x20Index\x20%17\x20%18\x20#9.\x20Volatility\x2075\x20Index\x20%19\x20%20\x20#10.\x20Volatility\x20100\x20Index','field_checkbox','check_market2_nya','check_market3_nya','check_market4_nya','check_market5_nya','check_market7_nya','check_market8_nya','check_market9_nya','check_market10_nya','check_market','TRUE','for(var\x20m=1;m<=10;m++){if(continuousindices_active[m].checked!=checkbox_check_market_nya[m]){continuousindices_active[m].checked=checkbox_check_market_nya[m];continuousindices_activeChanged(m,checkbox_check_market_nya[m]);}};','mSYXV','getFieldValue','vbnVO','AaEWo','_nya','XwQxI','[Multi\x20Market]\x20Continuous\x20Indices:\x20%1\x20%2','field_dropdown','dropdown_continuousindices_A','#1.\x20Volatility\x2010(1s)\x20Index','#2.\x20Volatility\x2025(1s)\x20Index','#3.\x20Volatility\x2050(1s)\x20Index','#4.\x20Volatility\x2075(1s)\x20Index','#5.\x20Volatility\x20100(1s)\x20Index','#6.\x20Volatility\x2010\x20Index','#7.\x20Volatility\x2025\x20Index','#9.\x20Volatility\x2075\x20Index','#10.\x20Volatility\x20100\x20Index','dropdown_continuousindices_B','1001\x20Ticks\x20List','1001\x20Last\x20Digit\x20List','digits','Symbol','document.getElementById(\x22continuousindices_','(document.getElementById(\x22continuousindices_','1|4|0|2|3','gOLYf','pZqjk','YgYpE','\x22).innerText','ulaxw','kifJS','DDeeQ','tvYkr','sellconditions','%1\x203.\x20Sell\x20conditions\x20%2\x20%3','https://block.ezbinarybot.com/image/icon_dollarsack.png','statement_sellconditions','eaasc','func$1$9$8$7$SellConditions=()=>{','Sell\x20is\x20available','(isContractValidToSell[sedangPantauContractPos]==1)?true:false','CXRup','sellprofitloss','sellProfitLoss[sedangPantauContractPos]','sellatmarket','Sell\x20at\x20market','restarttradingconditions','%1\x204.\x20Restart\x20trading\x20conditions\x20%2\x20%3','https://block.ezbinarybot.com/image/icon_finish.png','statement_restarttradingconditions','func$1$9$8$7$RestartTradingConditions=()=>{','EsFDP','tWxaD','OkWdw','QNZUQ','lastcontractdetail','dropdown_lastcontractdetail_A','askprice','Payout','Profit','Contract\x20type','contracttype','Entry\x20time','entrytime','Entry\x20value','entryvalue','entryvaluestring','exittime','Exit\x20value','Exit\x20value\x20string','exitvaluestring','Barrier','Result','lastCont_','cZMFd','ivGyK','zaqsA','xcXKZ','BxHPG','hzqTc','lastdigit','1001lastdigitlist','digitArrayUtama','Last\x2010\x20digits:\x20%1\x20%2','dropdown_thelast10digits_A','Digit','digit','Tick\x20move','tickmove','Change','Digit\x20move','digitmove','Digit\x20caterzian','dropdown_thelast10digits_B','List','0|4|3|1|2','thelast10digits_','ZtGGE','nGFmn','LrgNQ','lQYBn','document.getElementById(\x22thelast10digits_','XBVWi','CBEdr','VodIp','PECUb','digitstatisticsetnoofticks','Digit\x20statistic\x20|\x20Set\x20%1\x20:\x20%2\x20ticks','Row#1','Row#2','Row#3','Row#4','Row#6','input_value','ticks_nya','digitstatistic_noofticks[','].value=','*1;','row_nya','valueToCode','Tehjq','Order','ATOMIC','wvdot','stONb','DrMdV','inClp','digitstatistic','Row#5','Summary','dropdown_digitstatistic_B','list','Digit\x200','Digit\x201','Digit\x202','Digit\x203','Digit\x206','Digit\x207','Digit\x209','Least','least','Most','dropdown_digitstatistic_A','rDJkN','SXDMk','cvHAm','digitstatistic_list[7]','qzjDk','digitstatistic_list[','XbFeq','VTMSw','MlARs','nCGDp','caterzian20','Caterzian\x2020:\x20%1','dropdown_caterzian20_B','16th','thelast20digits_digitcater_list','tKwGH','TFYCA','GbgBA','evenodd20','Even\x20/\x20odd\x2020:\x20%1','dropdown_evenodd20_B','document.getElementById(\x22thelast20digits_digitevenodd_','GOcxy','ztlbu','omFLU','evenvsoddsetnoofticks','evenvsodd_noofticks[','umhBs','ipzTe','YvEYB','ZLGyP','Even\x20VS\x20Odd:\x20%1\x20%2','dropdown_evenvsodd_A','Even(%)','even','Odd(%)','\x22).innerText.replaceAll(\x22%\x22,\x22\x22)*1','upOpX','clywA','JfbAC','LEXSv','BHJwn','overvsundersetnoofticks','Over\x20VS\x20Under\x20|\x20Set\x20%1\x20:\x20%2\x20ticks','overvsunder_noofticks[','eGhVx','XwqKA','aFKVL','Sviqt','nogDX','overvsundersetdigit','Over\x20VS\x20Under\x20|\x20Set\x20%1\x20%2\x20%3','Row\x201','Row\x202','Over','under','type_nya','digit_nya','digit\x22).value=','Fykgu','Llvbp','meHqI','lCnuw','IyYEv','ibUPT','QrNdG','LUzem','iSkGu','Over\x20VS\x20Under:\x20%1\x20%2','dropdown_overvsunder_A','dropdown_overvsunder_B','Over(%)','over','document.getElementById(\x22overvsunder_','YhDuA','SnzpW','fSkJg','CJnvL','lasttick','tickArrayUtama.at(-1)*1','lasttickstring','Last\x20Tick\x20String','tickArrayUtamaText.at(-1)','EQBGo','1001ticksstringlist','1001\x20Ticks\x20String\x20List','KZBUc','Last\x2010\x20ticks:\x20%1\x20%2','dropdown_thelast10ticks_A','Move','move','Worm','worm','Sentiment','dropdown_thelast10ticks_B','thelast10ticks_changeperc_list','thelast10ticks_','document.getElementById(\x22thelast10ticks_','change','ZqStg','lTnyd','VQJHQ','mFhQc','gLkym','VDgin','_list','GuCPN','YuCAy','EnsAi','gUcIO','tickworm20','Worm\x2020:\x20%1\x20%2','Current','current','dropdown_tickworm20_B','thelast20tickworm_','document.getElementById(\x22thelast20tickworm_','2|3|1|4|0','JrPtN','QwYQy','WpFJE','NkZuW','risevsfallsetnoofticks','Rise\x20VS\x20Fall\x20|\x20Set\x20%1\x20:\x20%2\x20ticks','NlyuO','hBKnx','NnbRU','zmLsS','risevsfall_noofticks[','aCKzv','dgyUW','dropdown_risevsfall_A','dropdown_risevsfall_B','Rise(%)','rise','Fall(%)','fall','SvwUB','lxUap','DMYYh','reVui','moJhN','inpTickTrismasetperiod','Triple\x20SMA\x20ticks\x20|\x20Set\x20period\x20%1\x20:\x20%2','period_nya','inpTickTrisma_period[','KjRhA','dNNLt','FuhLS','aNxmx','CZLuo','nXrOc','Triple\x20SMA\x20ticks:\x20%1\x20%2','dropdown_ticktrisma_A','dropdown_ticktrisma_B','ticktrisma','4|0|2|1|3','tick_sma_list[','document.getElementById(\x22tick_sma','mpsuK','FwDjn','AXGCY','lCbGE','imhFk','mWqMx','\x22).innerText*1','detail3ticks','Detail\x203\x20ticks:\x20%1\x20%2','dropdown_detail3ticks_A','2nd\x20last\x20tick','3rd\x20last\x20tick','dropdown_detail3ticks_B','document.getElementById(\x22detail3ticks_','eWDoH','khSMR','dOcSI','niVsi','NriQj','BPjdc','getstataccu','market_nya','growthRate_nya','arrTick_nya','0|2|5|1|4|3','mainSymbol','voxAl','qIufd','gUMbB','gxhoc','ccryk','CHwye','ImiHF','zhVSR','pjBqR','GtrYp','CEccg','datetime','dropdown_datetime','year','Month','month','Date','date','Hours','hours','Minutes','minutes','Seconds','timezone','secondssinceepoch','new\x20Date().getFullYear()','(new\x20Date().getMonth())*1+1','new\x20Date().getHours()','seconds','\x22GMT\x22+((new\x20Date().getTimezoneOffset())==0\x20?\x20\x22\x22\x20:\x20((new\x20Date().getTimezoneOffset())<0\x20?\x20\x22+\x22\x20:\x20\x22-\x22)+Math.abs(new\x20Date().getTimezoneOffset()/60))','Math.floor(new\x20Date().getTime()/1000)','NCuKH','kncos','WxOvD','PvMQT','yhSfZ','vaIIA','new\x20Date().getMinutes()','bMKXl','uUpXY','ORlDT','wIINA','purchase_diff_match','Purchase:\x20%1\x20%2\x20Account:\x20%3\x20%4\x20Market:\x20%5\x20%6\x20Stake\x20%7\x20%8\x20Duration:\x20ticks\x20[1-10]\x20%9\x20Last\x20Digit\x20Prediction:\x20[0-9]\x20%10','selcontract_nya','Digit\x20Matches','stakeAM_nya','stake_nya','inpduration_nya','ldp_nya','mainPurchase(\x22','\x22,\x22',',\x22t\x22,0,0,0,','account_nya','8|3|0|10|11|6|9|2|5|1|4|7','bcKhy','CQwBg','ldFIl','MqDXe','tycmB','XISaP','LKuVt','QfkhG','DtBPc','hljwD','UVbMN','cGxmv',',0,0,0,0,0,0,0,0);','fTTZS','uJAZv','purchase_over_under','Purchase:\x20%1\x20%2\x20Account:\x20%3\x20%4\x20Market:\x20%5\x20%6\x20Stake\x20%7\x20%8\x20Duration:\x20ticks\x20[1-10]\x20%9\x20Last\x20Digit\x20Prediction:\x20[Over:0-8]\x20[Under:1-9]\x20%10','Digit\x20Over','Digit\x20Under',',\x22t\x22,0,0,0,0,',',0,0,0,0,0,0);','MlpiB','gatLf','FeGdH','SXeuy','nlOxs','EgQOt','jzLYW','udOLg','DzoCY','TTFec','HdVGQ','xROlr','EAFTx','zgStq','QVTqM','toString','purchase_even_odd','Purchase:\x20%1\x20%2\x20Account:\x20%3\x20%4\x20Market:\x20%5\x20%6\x20Stake\x20%7\x20%8\x20Duration:\x20ticks\x20[1-10]\x20%9','Digit\x20Even','DIGITEVEN','Digit\x20Odd','1|10|5|6|3|8|0|9|7|2|4','GkXAL','DCecT','PvYyn','NgwAt','lYIvZ','bMZuZ','XHovk','GefHN','ukwgD','dsQIy','sHAKG','NJamL','purchase_rise_fall','Purchase:\x20%1\x20%2\x20Account:\x20%3\x20%4\x20Market:\x20%5\x20%6\x20Stake\x20%7\x20%8\x20Duration:\x20%9\x20%10','Rise\x20(or\x20Equals)','Fall\x20(or\x20Equals)','PUTE','seldurationunit_nya','tick(s)','minute(s)','hour(s)','4|10|1|0|7|2|8|3|9|6|11|5','NJpny','TjKZu','SnGBU','FNPvB','lCszJ','rIVLP','cQHvW','MWhaV','sssqm','fBKJi','HAsqm','XbzKf','\x22,\x22+0\x22,0,0,0,0,0,0,0,0,0,0,0);','purchase_higher_lower','Purchase:\x20%1\x20%2\x20Account:\x20%3\x20%4\x20Market:\x20%5\x20%6\x20Stake\x20%7\x20%8\x20Duration:\x20%9\x20%10\x20Barrier\x20Offset:\x20%11','Lower','second(s)','7|3|9|11|8|2|4|6|12|1|10|5|0','barrier_nya','IXPRJ','VQJej','TBwEU','BiZKn','GVLTh','WTXYd','idSBk','vhNtx','bMMnq','agOTU','rFtta','lBQIM','jTsxg','Eezlk','lISay','uxjRW','AWpQN','GDoHM','purchase_touch_notouch','Touches','day(s)','11|3|8|10|7|4|12|9|5|1|6|2|0',',0,0,0,0,0,0,0,0,0,0,0);','TMaHE','JHLVF','dstLc','zBIVx','fpSKj','ZRPfA','hOaVv','FrqPF','gTnGx','zxovU','vlIOI','LrPUz','uNSPl','aToTE','YDEQJ','Ends\x20Outside','highbarrier_nya','lowbarrier_nya','purchase_endsbetween_endsoutside','6|0|4|10|13|8|12|5|7|2|11|3|1|9','\x22,0,','xknRe','eyjpz','GGKZl','hpRwM','xpQyk','nXAHC','cMVZi','EKMmP','jBifX','UMEBr','xLXMy','EMxLc','pBCQG','GMiWT','wlDfa','WZPds','HsgYT','uBkdi','WcizY','EKnQN','Stays\x20Between','Goes\x20Outside','purchase_staysbetween_goesoutside','9|11|12|13|2|1|7|3|8|4|5|10|6|0','vMvEq','ClVTP','ZopWu','WkXtr','MaVIa','nQozk','nBnTl','JNETD','bCcqW','nsdNx','TWUUZ','JGQed',',0,0,0,0,0,0,0,0,0);','JdHOj','zzMPQ','kOIkD','RQIHF','purchase_asianup_asiandown','Purchase:\x20%1\x20%2\x20Account:\x20%3\x20%4\x20Market:\x20%5\x20%6\x20Stake\x20%7\x20%8\x20Duration:\x20ticks\x20[5-10]\x20%9','Asian\x20Up','Asian\x20Down','ASIAND','7|5|8|4|2|10|6|1|9|3|0',',\x22t\x22,0,0,0,0,0,0,0,0,0,0,0,0);','ETvkD','UPgwd','ekbsw','sCKFh','NYPgt','fDgUk','zqKua','sclxB','zcAyo','gToJI','gBRUf','AlHiL','lBTfd','iOlIT','vVejB','vFcdp','eTlXG','sLboE','WGOXn','rdssP','ZHRjR','Purchase:\x20%1\x20%2\x20Account:\x20%3\x20%4\x20Market:\x20%5\x20%6\x20Stake\x20%7\x20%8\x20Duration:\x20minutes\x20[1-30]\x20%9\x20Multiplier:\x20%10','Close-Low','High-Low','purchase_highclose_closelow_highlow',',\x22m\x22,0,0,0,0,0,0,',',0,0,0,0,0);','RWuob','VvLKT','ZTNED','lUclT','PFfTf','QnUmn','GYLky','yqmXp','ZKXKs','BpvPe','tbqNJ','kLVme','yUUIJ','vjQxV','bxeqR','xkyaw','BLgWB','uhhti','purchase_resetcall_resetput','Reset\x20Call','Reset\x20Put','\x22,0,0,0,0,0,0,0,0,0,0,0,0);','kfbOY','ICFkY','xWzZr','pqLmo','BUCMQ','tJkLE','OFWjG','MuKlR','JQqiq','khRLO','AYQXU','QLULl','Purchase:\x20%1\x20%2\x20Account:\x20%3\x20%4\x20Market:\x20%5\x20%6\x20Stake\x20%7\x20%8\x20Duration:\x205\x20Ticks\x20%9\x20Tick\x20Prediction:\x20[1-5]\x20%10','High\x20Tick','tickprediction_nya','purchase_hightick_lowtick',',0,0,0,0);','bErPO','YiMOl','wsmEJ','DIOIR','vqxMW','iEslE','MUQWD','mbjBf','ORGhJ','iuaKA','AYZpu','FVIbA','bDlYy','jsdlR','Fvzje','purchase_onlyups_onlydowns','Purchase:\x20%1\x20%2\x20Account:\x20%3\x20%4\x20Market:\x20%5\x20%6\x20Stake\x20%7\x20%8\x20Duration:\x20ticks\x20[2-5]\x20%9','Only\x20Ups','Only\x20Downs','RUNLOW','6|2|1|3|0|10|9|8|4|5|7','yPXaY','OOXUY','hchNR','PZIop','cicpM','eGJbq','rGpVB','GFamJ','XiRvh','WgHIJ','OnuIW','TViTB','HCuQs','pNMdg','vRhwA','DYrDE','purchase_accumulatorup','Purchase:\x20%1\x20%2\x20Account:\x20%3\x20%4\x20Market:\x20%5\x20%6\x20Stake\x20%7\x20%8\x20Growth\x20Rate\x20%\x20[1-5]:\x20%9\x20Take\x20Profit:\x20%10','limittp_nya','tOPIY','UgHSu','PoiCa','wPGRJ','uNOhv','VQjnm','jrdCB','RMHLY','Chupy','QOEKE','IqTOr','iYiav','YqKkg',',100,\x22t\x22,0,0,0,0,0,0,0,0,','rDWzz','kADPr','Purchase:\x20%1\x20%2\x20Account:\x20%3\x20%4\x20Market:\x20%5\x20%6\x20Stake\x20%7\x20%8\x20Multiplier:\x20%9\x20%10\x20Take\x20Profit:\x20%11\x20Stop\x20Loss:\x20%12','Multiply\x20Up','selmultipliermultiply_nya','x100','x200','200','x300','x500','500','x1000','1000','limitsl_nya','purchase_multiplyup_multiplydown','4|8|2|1|7|11|9|3|5|12|0|10|6','iYmFr','GeTpX','yjHKx','hvRuo','SQQvT','Akfkc','pJBEr','ITavF','uBbYk','gpVAU','Lativ','rldiB','qKMXK',',0,\x22t\x22,0,0,0,0,0,0,0,0,0,\x22','purchase_vanillalongcall_vanillalongput','Vanilla\x20Long\x20Call','Vanilla\x20Long\x20Put','QByRC','PLZcw','gaYOc','YUNhO','bKUuC','BEyEN','AkwQF','GZlKf','bySSY','Geidg','LBrsX','TKvxc','ktrCv','zfeTA','nckIg','UXxni','purchase_turboslong_turbosshort','Turbos\x20Short','3|8|10|5|7|12|9|6|1|2|11|0|4','IVSFR','IGcdf','zvgoc','UwxAm','aPEop','kmCdq','TzmAf','nAiOL','HUVTi','jOavw','yDyru','urrCl','gLJRV','RkJXd','XMGxS','kIVAm','FBRqx','write_log','Notify\x20%1\x20Sound:\x20%2\x20%3','No\x20Color','42a5f5','f44336','Green','04AA6D','Yellow','ffbf00','sound_nya','Silent','silent','Announcement','announcement','Earned\x20money','earned-money','job-done','Error','Severe\x20error','severe-error','log_nya','2|6|3|4|0|5|1','document.getElementById(\x22','writeLog(\x22#','color_nya','OhSoH','HzkgS','Btvxs','gAlaL','VzxRW','dIzdm','TybaC','JD10|Jump\x2010\x20Index','Jump\x20Indices:Jump\x2025\x20Index','JD25|Jump\x2025\x20Index','JD50|Jump\x2050\x20Index','Step\x20Indices:Step\x20Index','Crash/Boom\x20Indices:Crash\x20300\x20Index','Crash/Boom\x20Indices:Boom\x20300\x20Index','BOOM500|Boom\x20500\x20Index','Crash/Boom\x20Indices:Boom\x201000\x20Index','frxAUDJPY|AUD/JPY','Major\x20Pairs:EUR/GBP','frxEURJPY|EUR/JPY','frxUSDCHF|USD/CHF','Minor\x20Pairs:AUD/CHF','Minor\x20Pairs:GBP/CHF','Minor\x20Pairs:GBP/NZD','frxGBPNZD|GBP/NZD','Minor\x20Pairs:USD/MXN','Asian\x20indices:Australia\x20200','European\x20indices:Swiss\x2020','European\x20indices:UK\x20100','American\x20indices:Wall\x20Street\x2030','OTC_DJI|Wall\x20Street\x2030','WLDEUR|EUR\x20Basket','Commodities\x20Basket:Gold\x20Basket','Metals:Gold/USD','Set\x20Market\x20to:\x20%1','if(mainSymbol!=\x22','\x22;document.getElementById(\x22lblMarket\x22).innerText=\x22','\x22;forgetAllTicks();};','QLYkv','WjZPx','Hglkg','XJPEA','XyaeU','Byylp','IqBgx','wPDQx','mgmUB','Set\x20Money\x20Management\x20to\x20Martingale\x20%1\x20Back\x20to\x20initial\x20stake\x20ONLY\x20after\x20previous\x20loss\x20covered:\x20%2\x20%3\x20Initial\x20Stake:\x20%4\x20Martingale\x20Factor:\x20%5'];(function(_0x5470d9,_0x38f04a){var _0x44218f=function(_0x3880c3){while(--_0x3880c3){_0x5470d9['push'](_0x5470d9['shift']());}};_0x44218f(++_0x38f04a);}(_0x2a45,0x1e7));var _0x48c2=function(_0x9b2f14,_0x5816b0){_0x9b2f14=_0x9b2f14-0x0;var _0x2f2fb2=_0x2a45[_0x9b2f14];return _0x2f2fb2;};var _0x3bacd3=function(){var _0x33ffe2=!![];return function(_0x557894,_0x4d3a55){var _0x449c3f=_0x33ffe2?function(){if(_0x4d3a55){var _0xed1638=_0x4d3a55[_0x48c2('0x0')](_0x557894,arguments);_0x4d3a55=null;return _0xed1638;}}:function(){};_0x33ffe2=![];return _0x449c3f;};}();var _0x108f8e=_0x3bacd3(this,function(){var _0x168535={'uhWsd':function(_0xa68538,_0x9ce845){return _0xa68538>_0x9ce845;},'sgnfw':function(_0x6f3c0b,_0x11d84){return _0x6f3c0b+_0x11d84;},'GRkbI':_0x48c2('0x1'),'JRYuv':function(_0x510848,_0x3eb1c9){return _0x510848(_0x3eb1c9);},'wnJXv':_0x48c2('0x2'),'zEsdZ':_0x48c2('0x3'),'dTOEm':_0x48c2('0x4'),'vjnSR':function(_0x3a6b80,_0x3f7ff0){return _0x3a6b80==_0x3f7ff0;},'OeWtB':function(_0x16ef4b,_0x224e7e){return _0x16ef4b==_0x224e7e;},'YexhV':function(_0x33eb6d,_0x5bd89d){return _0x33eb6d==_0x5bd89d;},'rCQDS':function(_0x1f5ed8,_0x29e2db){return _0x1f5ed8==_0x29e2db;},'GOnTO':function(_0x589737,_0x241831){return _0x589737||_0x241831;},'sEpqj':function(_0x343676,_0x42abe9){return _0x343676<_0x42abe9;},'drCTF':_0x48c2('0x5'),'aeXBF':function(_0x4b4e48,_0x4b7be9){return _0x4b4e48!==_0x4b7be9;},'gcGcj':function(_0x45b6f6,_0x4bb02a){return _0x45b6f6===_0x4bb02a;},'gLzUv':function(_0x25c547,_0x424ab9){return _0x25c547-_0x424ab9;},'lLtKK':function(_0x45109d,_0x5e8f6c){return _0x45109d===_0x5e8f6c;}};var _0x40ac83;try{var _0x53b726=_0x168535['JRYuv'](Function,_0x168535[_0x48c2('0x6')]+'{}.constructor(\x22return\x20this\x22)(\x20)'+');');_0x40ac83=_0x53b726();}catch(_0x2c3a89){_0x40ac83=window;}var _0x5bb775=function(){var _0x53acc4={'DnGmr':function(_0x8d6455,_0x57a04f){return _0x168535['uhWsd'](_0x8d6455,_0x57a04f);},'iJHAN':function(_0xe41f44,_0x5b4d50){return _0x168535['sgnfw'](_0xe41f44,_0x5b4d50);}};return{'key':'item','value':_0x168535[_0x48c2('0x7')],'getAttribute':function(){for(var _0x3a063b=0x0;_0x3a063b<0x3e8;_0x3a063b--){var _0x3d1950=_0x53acc4[_0x48c2('0x8')](_0x3a063b,0x0);switch(_0x3d1950){case!![]:return _0x53acc4[_0x48c2('0x9')](_0x53acc4[_0x48c2('0x9')](_0x53acc4[_0x48c2('0x9')](this[_0x48c2('0xa')],'_'),this[_0x48c2('0xb')]),'_')+_0x3a063b;default:_0x53acc4[_0x48c2('0x9')](this[_0x48c2('0xa')],'_')+this[_0x48c2('0xb')];}}}()};};var _0x2cdd66=new RegExp(_0x168535[_0x48c2('0xc')],'g');var _0xf4d1aa=_0x168535[_0x48c2('0xd')]['replace'](_0x2cdd66,'')[_0x48c2('0xe')](';');var _0x5b31ee;var _0x24a065;var _0x357eb9;var _0xf075ba;for(var _0x2552b0 in _0x40ac83){if(_0x2552b0['length']==0x8&&_0x168535[_0x48c2('0xf')](_0x2552b0[_0x48c2('0x10')](0x7),0x74)&&_0x168535[_0x48c2('0xf')](_0x2552b0['charCodeAt'](0x5),0x65)&&_0x168535[_0x48c2('0xf')](_0x2552b0[_0x48c2('0x10')](0x3),0x75)&&_0x2552b0[_0x48c2('0x10')](0x0)==0x64){_0x5b31ee=_0x2552b0;break;}}for(var _0x34cbbd in _0x40ac83[_0x5b31ee]){if(_0x168535[_0x48c2('0x11')](_0x34cbbd[_0x48c2('0x12')],0x6)&&_0x34cbbd['charCodeAt'](0x5)==0x6e&&_0x168535[_0x48c2('0x13')](_0x34cbbd[_0x48c2('0x10')](0x0),0x64)){_0x24a065=_0x34cbbd;break;}}if(!_0x168535[_0x48c2('0x14')]('~',_0x24a065)){for(var _0x2da0b1 in _0x40ac83[_0x5b31ee]){if(_0x168535['YexhV'](_0x2da0b1['length'],0x8)&&_0x168535['rCQDS'](_0x2da0b1[_0x48c2('0x10')](0x7),0x6e)&&_0x168535[_0x48c2('0x15')](_0x2da0b1[_0x48c2('0x10')](0x0),0x6c)){_0x357eb9=_0x2da0b1;break;}}for(var _0x4f9a30 in _0x40ac83[_0x5b31ee][_0x357eb9]){if(_0x168535[_0x48c2('0x15')](_0x4f9a30[_0x48c2('0x12')],0x8)&&_0x168535[_0x48c2('0x15')](_0x4f9a30[_0x48c2('0x10')](0x7),0x65)&&_0x168535[_0x48c2('0x15')](_0x4f9a30[_0x48c2('0x10')](0x0),0x68)){_0xf075ba=_0x4f9a30;break;}}}if(!_0x5b31ee||!_0x40ac83[_0x5b31ee]){return;}var _0xef4ca4=_0x40ac83[_0x5b31ee][_0x24a065];var _0x211bdb=!!_0x40ac83[_0x5b31ee][_0x357eb9]&&_0x40ac83[_0x5b31ee][_0x357eb9][_0xf075ba];var _0x38a481=_0x168535['GOnTO'](_0xef4ca4,_0x211bdb);if(!_0x38a481){return;}var _0x2be229=![];for(var _0x3f3c32=0x0;_0x168535[_0x48c2('0x16')](_0x3f3c32,_0xf4d1aa[_0x48c2('0x12')]);_0x3f3c32++){var _0x5c3ecd=_0x168535[_0x48c2('0x17')]['split']('|'),_0x1f68b3=0x0;while(!![]){switch(_0x5c3ecd[_0x1f68b3++]){case'0':var _0x24a065=_0xf4d1aa[_0x3f3c32];continue;case'1':var _0x1e48c0=_0x168535[_0x48c2('0x18')](_0x1d6f91,-0x1)&&_0x168535[_0x48c2('0x19')](_0x1d6f91,_0x9b2c42);continue;case'2':var _0x9b2c42=_0x168535[_0x48c2('0x1a')](_0x38a481[_0x48c2('0x12')],_0x24a065[_0x48c2('0x12')]);continue;case'3':if(_0x1e48c0){if(_0x168535[_0x48c2('0x15')](_0x38a481[_0x48c2('0x12')],_0x24a065['length'])||_0x168535[_0x48c2('0x1b')](_0x24a065['indexOf']('.'),0x0)){_0x2be229=!![];}}continue;case'4':var _0x1d6f91=_0x38a481[_0x48c2('0x1c')](_0x24a065,_0x9b2c42);continue;}break;}}if(!_0x2be229){data;}else{return;}_0x5bb775();});_0x108f8e();const app_id=0x12139%0x487b;const WebSocket=_0x48c2('0x1d')+app_id;const timerStartPLANBOffset=0x5;const timerDoPLANBOffset=0x5;let timerStartPLANB=[];let timerDoPLANB=[];let tempDuration=0x0,tempDurationUnit,tempDetikPengali;let lastTimeGetTick=0x0,lastTimeCheckIfReadyToMainLogic=0x0,lastTimeCheckIfReadyToMainLogic_continuousindices=[0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0];let i,k;let tickArrayUtama=[],tickArrayUtamaText=[];let digitArrayUtama=[];let openArrayUtama=[];let highArrayUtama=[];let lowArrayUtama=[];let closeArrayUtama=[];let granualityArray=[0x3c,0x78,0xb4,0x12c,0x258,0x384,0x708,0xe10,0x1c20,0x3840,0x7080,0x15180];let idSubTicksHistory='';let idSubBalance='';let masterCurrency='';let slaveCurrency='';let wsMasterOpened=![];let wsSlaveOpened=![];let wsSlaveSudahFirstOpened=![];let sedangAuthorize=![];let sedangAuthorizeV=![];let slaveAuthorized=![];let countVLose=0x0;let sedangPurchasing=![],sedangForgetAllTicks=![];let prContract=[],winContract=[],loseContract=[];let tempPrContractPos;let lastContractIdV=0x0;let stakeNow=0x0;let totalProfit=0x0,totalProfitMax=0x0;let conn_nya;let maxColor=_0x48c2('0x1e'),minColor=_0x48c2('0x1f'),baseColor=_0x48c2('0x20');let colorRise=_0x48c2('0x21'),colorFall=_0x48c2('0x22'),colorNo=_0x48c2('0x23'),colorWormNo='#0f0';let timeMayOP=0x0;let lastLDP=-0x1,tempCount=0x0,tempLDP,tempArray=[],lastColor=-0x1;let arrMarket=[],arrMarketToSubMarket=[],arrSubMarketToSymbol=[],arrContract=[];let group,el;let _0x1a19x8;let loginID,isVirtual,slaveLoginID,slaveIsVirtual;let mainWorkspaceCode;let mainChartLast10Dig_Digit,mainChartLast10Dig_Change,mainChart20Cater,mainChartLast10Tick_Tick,mainChartLast10Tick_Change,mainChart20TickWorm,mainChartTickTrisma;let tempArray1,tempArray2,tempArray3;let lastCont_askprice,lastCont_payout,lastCont_profit,lastCont_contracttype,lastCont_entrytime,lastCont_entryvalue,lastCont_entryvaluestring,lastCont_exittime,lastCont_exitvalue,lastCont_exitvaluestring,lastCont_barrier,lastCont_result;let izinRun2=![];let func$1$9$8$7$RunOnceAtStart=()=>{izinRun2=![];},func$1$9$8$7$PurchaseConditions=()=>{if(izinRun2){izinRun2=![];};},func$1$9$8$7$SellConditions=()=>{},func$1$9$8$7$RestartTradingConditions=()=>{};let func$1$9$8$7$PurchaseConditions_continuousindices=()=>{};let sudahRunOnceAtStart=![];let mainSymbol='';let sedangPantauContractPos=-0x1,isContractValidToSell=[],sellProfitLoss=[];let initWorkspaceBlock=_0x48c2('0x24');let lastTimeMasukPOC=[];let tempWinInARow=0x0,tempLossInARow=0x0;let idSubTicksHistory_continuous=[0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0],lastTimeGetTick_continuous=[],tickArrayUtama_continuous=[],tickArrayUtamaText_continuous=[],digitArrayUtama_continuous=[];let arrMarket_Continuous=['1HZ10V',_0x48c2('0x25'),'1HZ50V','1HZ75V','1HZ100V','R_10',_0x48c2('0x26'),'R_50','R_75',_0x48c2('0x27')];let mainTickArray_continuousindices=[],mainDigitArray_continuousindices=[],mainMarket_continuousindices;let checkbox_check_market_nya=[];const _0x1900=String[_0x48c2('0x28')](0x33,0x2a)+String[_0x48c2('0x28')](0x37,0x33)+'+'+String[_0x48c2('0x28')](0x31)+String[_0x48c2('0x28')](0x32)+String['fromCodePoint'](0x29,0x29);const inpMToken=document[_0x48c2('0x29')](_0x48c2('0x2a'));const inpSToken=document[_0x48c2('0x29')](_0x48c2('0x2b'));const selMarket=document[_0x48c2('0x29')]('#selMarket');const selSubMarket=document['querySelector'](_0x48c2('0x2c'));const selSymbol=document[_0x48c2('0x29')]('#selSymbol');const selMoneyManagement=document[_0x48c2('0x2d')]('selMoneyManagement');const divInpInitStake=document[_0x48c2('0x2d')](_0x48c2('0x2e'));const lblInpInitStake=document[_0x48c2('0x2d')](_0x48c2('0x2f'));const inpInitStake=document[_0x48c2('0x29')]('#inpInitStake');const divInpMartiFactor=document[_0x48c2('0x2d')](_0x48c2('0x30'));const inpMartiFactor=document[_0x48c2('0x29')](_0x48c2('0x31'));const divInpCycleStake=document[_0x48c2('0x2d')](_0x48c2('0x32'));const inpCycleStake=document[_0x48c2('0x2d')]('inpCycleStake');const divChkSmart=document[_0x48c2('0x2d')](_0x48c2('0x33'));const chkSmart=document[_0x48c2('0x2d')](_0x48c2('0x34'));let posCycleStake=0x0;const chkTP=document[_0x48c2('0x29')]('#chkTP');const inpTP=document[_0x48c2('0x29')](_0x48c2('0x35'));const chkSL=document[_0x48c2('0x29')](_0x48c2('0x36'));const inpSL=document[_0x48c2('0x29')](_0x48c2('0x37'));const chkNumOfWin=document[_0x48c2('0x29')](_0x48c2('0x38'));const inpNumOfWin=document['querySelector'](_0x48c2('0x39'));const chkNumOfLoss=document['querySelector']('#chkNumOfLoss');const inpNumOfLoss=document[_0x48c2('0x29')](_0x48c2('0x3a'));const chkNumOfRun=document[_0x48c2('0x29')](_0x48c2('0x3b'));const inpNumOfRun=document[_0x48c2('0x29')](_0x48c2('0x3c'));const chkNumOfWinInARow=document['querySelector'](_0x48c2('0x3d'));const inpNumOfWinInARow=document[_0x48c2('0x29')](_0x48c2('0x3e'));const chkNumOfLossInARow=document[_0x48c2('0x29')](_0x48c2('0x3f'));const inpNumOfLossInARow=document[_0x48c2('0x29')](_0x48c2('0x40'));const chkVLose=document['querySelector'](_0x48c2('0x41'));const inpVLose=document[_0x48c2('0x29')](_0x48c2('0x42'));const chkDelayWin=document[_0x48c2('0x29')](_0x48c2('0x43'));const inpDelayWin=document[_0x48c2('0x29')]('#inpDelayWin');const chkDelayLose=document[_0x48c2('0x29')](_0x48c2('0x44'));const inpDelayLose=document[_0x48c2('0x29')](_0x48c2('0x45'));const selData=document[_0x48c2('0x29')](_0x48c2('0x46'));const digitstatistic_noofticks=[];for(i=0x1;i<=0x6;i++){digitstatistic_noofticks[i]=document['getElementById'](_0x48c2('0x47')+i+_0x48c2('0x48'));}const evenvsodd_noofticks=[];for(i=0x1;i<=0x6;i++){evenvsodd_noofticks[i]=document[_0x48c2('0x2d')]('evenvsodd_'+i+'_noofticks');}const overvsunder_noofticks=[];for(i=0x1;i<=0x2;i++){overvsunder_noofticks[i]=document[_0x48c2('0x2d')]('overvsunder_'+i+'_noofticks');}const risevsfall_noofticks=[];for(i=0x1;i<=0x6;i++){risevsfall_noofticks[i]=document['getElementById']('risevsfall_'+i+_0x48c2('0x48'));}const inpTickTrisma_period=[];for(i=0x1;i<=0x3;i++){inpTickTrisma_period[i]=document['getElementById'](_0x48c2('0x49')+i);}const continuousindices_active=[];for(i=0x1;i<=0xa;i++){continuousindices_active[i]=document[_0x48c2('0x2d')](_0x48c2('0x4a')+i+_0x48c2('0x4b'));}const inpNOTicks=document[_0x48c2('0x29')]('#inpNOTicks');const divStepper=[];for(i=0x1;i<=0x4;i++){divStepper[i]=document[_0x48c2('0x29')](_0x48c2('0x4c')+i);}const tableSummaryTBODY=document[_0x48c2('0x2d')](_0x48c2('0x4d'));let rowActive=[];const tableLogTBODY=document[_0x48c2('0x2d')](_0x48c2('0x4e'));const btn_run=document['getElementById']('btn_run');const btn_run2=document['getElementById']('btn_run2');const btnSimpleRun=document[_0x48c2('0x2d')](_0x48c2('0x4f'));const summary_account=document[_0x48c2('0x2d')](_0x48c2('0x50'));const summary_noofruns=document[_0x48c2('0x2d')](_0x48c2('0x51'));const summary_totalstake=document['getElementById'](_0x48c2('0x52'));const summary_totalpayout=document[_0x48c2('0x2d')](_0x48c2('0x53'));const summary_win=document['getElementById'](_0x48c2('0x54'));const summary_loss=document['getElementById']('summary_loss');const summary_totalprofitloss=document[_0x48c2('0x2d')](_0x48c2('0x55'));const summary_balance=document[_0x48c2('0x2d')]('summary_balance');const spanSimpleRobotName=document[_0x48c2('0x2d')]('spanSimpleRobotName');const form=document['querySelector']('form');const data_001=document[_0x48c2('0x29')](_0x48c2('0x56'));const data_002=document['querySelector'](_0x48c2('0x57'));const data_003=document[_0x48c2('0x29')](_0x48c2('0x58'));const data_004=document[_0x48c2('0x29')](_0x48c2('0x59'));const data_005=document['querySelector'](_0x48c2('0x5a'));const data_006=document[_0x48c2('0x29')](_0x48c2('0x5b'));const data_007=document[_0x48c2('0x29')](_0x48c2('0x5c'));const data_008=document[_0x48c2('0x29')]('#data_008');const aSimp=document[_0x48c2('0x29')](_0x48c2('0x5d'));const _0x1901=String['fromCodePoint'](0x33,0x3f,0x61)+'p'+'p'+'_'+String['fromCodePoint'](0x69,0x64)+'='+'\x27'+'+'+'('+'2'+'6'+_0x1900;[inpMToken,inpSToken,selSymbol,selMoneyManagement,divInpInitStake,lblInpInitStake,inpInitStake,divInpMartiFactor,inpMartiFactor,divInpCycleStake,inpCycleStake,divChkSmart,inpTP,inpSL,inpNumOfWin,inpNumOfLoss,inpNumOfRun,inpNumOfWinInARow,inpNumOfLossInARow,inpVLose,inpDelayWin,inpDelayLose,selData,digitstatistic_noofticks[0x1],digitstatistic_noofticks[0x2],digitstatistic_noofticks[0x3],digitstatistic_noofticks[0x4],digitstatistic_noofticks[0x5],digitstatistic_noofticks[0x6],evenvsodd_noofticks[0x1],evenvsodd_noofticks[0x2],evenvsodd_noofticks[0x3],evenvsodd_noofticks[0x4],evenvsodd_noofticks[0x5],evenvsodd_noofticks[0x6],overvsunder_noofticks[0x1],overvsunder_noofticks[0x2],risevsfall_noofticks[0x1],risevsfall_noofticks[0x2],risevsfall_noofticks[0x3],risevsfall_noofticks[0x4],risevsfall_noofticks[0x5],risevsfall_noofticks[0x6],inpTickTrisma_period[0x1],inpTickTrisma_period[0x2],inpTickTrisma_period[0x3]][_0x48c2('0x5e')](function(_0x1b7736){if(localStorage['getItem'](_0x1b7736['id'])!=null){_0x1b7736[_0x48c2('0xb')]=localStorage['getItem'](_0x1b7736['id']);}_0x1b7736['onchange']=function(){localStorage[_0x48c2('0x5f')](this['id'],this[_0x48c2('0xb')]);};});[chkSmart,chkTP,chkSL,chkNumOfWin,chkNumOfLoss,chkNumOfRun,chkNumOfWinInARow,chkNumOfLossInARow,chkVLose,chkDelayWin,chkDelayLose,continuousindices_active[0x1],continuousindices_active[0x2],continuousindices_active[0x3],continuousindices_active[0x4],continuousindices_active[0x5],continuousindices_active[0x6],continuousindices_active[0x7],continuousindices_active[0x8],continuousindices_active[0x9],continuousindices_active[0xa]]['forEach'](function(_0x253a5b){var _0x3e2ec1={'NQGVa':function(_0x557361,_0x2e081d){return _0x557361==_0x2e081d;},'szBDy':'false','lLqDc':function(_0x5852f8,_0x2b5fea){return _0x5852f8!=_0x2b5fea;},'rmIlk':_0x48c2('0x60')};if(_0x3e2ec1['lLqDc'](localStorage['getItem'](_0x253a5b['id']),null)){if(['true','1','on',_0x3e2ec1['rmIlk']][_0x48c2('0x61')](localStorage[_0x48c2('0x62')](_0x253a5b['id'])[_0x48c2('0x63')]())){_0x253a5b[_0x48c2('0x64')]=!![];}else{_0x253a5b[_0x48c2('0x64')]=![];}}_0x253a5b[_0x48c2('0x65')]=function(){localStorage[_0x48c2('0x5f')](this['id'],_0x3e2ec1[_0x48c2('0x66')](this[_0x48c2('0x64')],!![])?_0x48c2('0x67'):_0x3e2ec1[_0x48c2('0x68')]);};});const startTime=()=>{var _0x573b5d={'IUOrF':_0x48c2('0x69'),'vYwNU':function(_0x2e5495,_0x16779c){return _0x2e5495+_0x16779c;},'pMNLN':_0x48c2('0x6a'),'Yifsh':function(_0x1d1987,_0x1fa18e){return _0x1d1987==_0x1fa18e;},'Vnvqk':function(_0x1843bc,_0x293ff6){return _0x1843bc+_0x293ff6;},'rovCA':function(_0x153f5c,_0x3bcc4c){return _0x153f5c<_0x3bcc4c;},'iYBlg':function(_0x5525a7,_0x5d4375){return _0x5525a7/_0x5d4375;},'JiIFJ':function(_0x13181f,_0x1db671,_0x3d9183){return _0x13181f(_0x1db671,_0x3d9183);}};const _0x2cb3bf=new Date();document['getElementById'](_0x573b5d[_0x48c2('0x6b')])[_0x48c2('0x6c')]=_0x573b5d['vYwNU'](_0x573b5d[_0x48c2('0x6d')](_0x2cb3bf['toLocaleString'](),_0x573b5d[_0x48c2('0x6e')]),_0x573b5d[_0x48c2('0x6f')](_0x2cb3bf[_0x48c2('0x70')](),0x0)?'':_0x573b5d[_0x48c2('0x71')](_0x573b5d[_0x48c2('0x72')](_0x2cb3bf[_0x48c2('0x70')](),0x0)?'+':'-',Math['abs'](_0x573b5d[_0x48c2('0x73')](_0x2cb3bf[_0x48c2('0x70')](),0x3c))));_0x573b5d[_0x48c2('0x74')](setTimeout,startTime,0x1f4);};startTime();function writeLog(_0x3daeb8,_0x448bdc){var _0x43956c={'wPeHM':_0x48c2('0x75'),'HreNa':function(_0x3f76da,_0x418897){return _0x3f76da!=_0x418897;},'SInyj':_0x48c2('0x69'),'CbFGr':_0x48c2('0x76'),'PBGUG':function(_0x542502,_0x57290a){return _0x542502==_0x57290a;},'cyckH':_0x48c2('0x77'),'ydmTH':function(_0x1981ec,_0x46454d){return _0x1981ec==_0x46454d;},'dTfxM':_0x48c2('0x78'),'aaVoH':_0x48c2('0x79'),'bshNz':_0x48c2('0x7a'),'jbZcg':_0x48c2('0x7b')};var _0x2f3c94=_0x43956c['wPeHM']['split']('|'),_0xf0de73=0x0;while(!![]){switch(_0x2f3c94[_0xf0de73++]){case'0':if(_0x43956c[_0x48c2('0x7c')](_0x3daeb8,'')){_0x16939e[_0x48c2('0x7d')][_0x48c2('0x7e')]=_0x3daeb8;}continue;case'1':_0x16939e[_0x48c2('0x7f')](0x0)['innerText']=document[_0x48c2('0x2d')](_0x43956c['SInyj'])[_0x48c2('0x6c')];continue;case'2':_0x16939e[_0x48c2('0x7f')](0x1)[_0x48c2('0x6c')]=_0x448bdc;continue;case'3':$[_0x48c2('0x80')](_0x448bdc,{'position':_0x43956c[_0x48c2('0x81')],'className':_0x43956c[_0x48c2('0x82')](_0x3daeb8,colorRise)?_0x43956c[_0x48c2('0x83')]:_0x43956c['ydmTH'](_0x3daeb8,colorFall)?_0x43956c[_0x48c2('0x84')]:_0x43956c[_0x48c2('0x85')](_0x3daeb8,_0x48c2('0x86'))?_0x43956c[_0x48c2('0x87')]:_0x3daeb8==_0x43956c[_0x48c2('0x88')]?_0x43956c['jbZcg']:_0x43956c[_0x48c2('0x83')]});continue;case'4':var _0x16939e=tableLogTBODY[_0x48c2('0x89')](0x0);continue;}break;}}const _0x1902='i'+'v'+String[_0x48c2('0x28')](window['location'][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x48c2('0x8c'),'')[_0x48c2('0x8b')]('block.','')['charCodeAt'](0x9a%0xc)+0x3)+'s'+'.'+'c'+String['fromCodePoint'](window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x48c2('0x8c'),'')[_0x48c2('0x8b')](_0x48c2('0x8e'),'')['charCodeAt'](0x131%0x4c)-0xb)+'m'+'/'+String[_0x48c2('0x28')](window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x48c2('0x8c'),'')[_0x48c2('0x8b')](_0x48c2('0x8e'),'')[_0x48c2('0x10')](0x9a%0xc)+0x3)+String[_0x48c2('0x28')](window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x48c2('0x8c'),'')[_0x48c2('0x8b')]('block.','')[_0x48c2('0x10')](0x131%0x4c)-0x15)+'b'+'s'+String[_0x48c2('0x28')](window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x48c2('0x8c'),'')[_0x48c2('0x8b')](_0x48c2('0x8e'),'')[_0x48c2('0x10')](0x131%0x4c)-0xb)+'c'+'k'+String[_0x48c2('0x28')](window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x48c2('0x8c'),'')[_0x48c2('0x8b')](_0x48c2('0x8e'),'')[_0x48c2('0x10')](0x131%0x4c)-0x15)+'t'+'s'+'/'+'v'+_0x1901;btn_run[_0x48c2('0x8f')]=btn_run2[_0x48c2('0x8f')]=btnSimpleRun[_0x48c2('0x8f')]=!![];writeLog('',_0x48c2('0x90'));const messageResponse=_0x42c2f8=>{var _0x3681c4={'WxECo':function(_0x35f537,_0x5428fa,_0x4fe5ec,_0x5b7364){return _0x35f537(_0x5428fa,_0x4fe5ec,_0x5b7364);},'lfZUb':'1HZ25V','IoYPA':'continuousindices','MlkQz':'1HZ50V','jMnoi':function(_0x31b4e0,_0x626c43,_0x2fd3d8,_0x2093b9){return _0x31b4e0(_0x626c43,_0x2fd3d8,_0x2093b9);},'yFkUQ':_0x48c2('0x91'),'XZJYK':'1HZ100V','iCAUY':function(_0x5b433c,_0xd56a14,_0x4de610,_0x4f8038){return _0x5b433c(_0xd56a14,_0x4de610,_0x4f8038);},'FqXJb':_0x48c2('0x92'),'eImfq':_0x48c2('0x26'),'bApxI':function(_0x32cf01,_0x34c6df,_0x2d565d,_0x3350cd){return _0x32cf01(_0x34c6df,_0x2d565d,_0x3350cd);},'lmNrf':_0x48c2('0x93'),'enwzU':_0x48c2('0x27'),'VtoXm':function(_0x2937b3,_0x5cabb2){return _0x2937b3!==_0x5cabb2;},'IcvVi':function(_0x430a10,_0x1073e2){return _0x430a10+_0x1073e2;},'oDbDC':function(_0x90dc16,_0x4a709f){return _0x90dc16-_0x4a709f;},'ZYIqM':_0x48c2('0x8c'),'APdPe':_0x48c2('0x8e'),'wMEQd':function(_0x4116c3,_0x368c13){return _0x4116c3%_0x368c13;},'NQxnX':_0x48c2('0x94'),'Iqswl':_0x48c2('0x95'),'MxJzy':_0x48c2('0x96'),'eTfos':_0x48c2('0x97'),'xbsLr':_0x48c2('0x98'),'Yqvrp':function(_0x4ecdc3,_0x559edd){return _0x4ecdc3===_0x559edd;},'BXFgQ':_0x48c2('0x99'),'EwCIH':'rize','mwhFG':function(_0x30d83b,_0x114062){return _0x30d83b(_0x114062);},'fsmxA':_0x48c2('0x9a'),'KXFCX':function(_0x3c6fb3,_0x209612){return _0x3c6fb3(_0x209612);},'BEaEc':'run','FzziZ':function(_0x542602,_0x1d863f,_0x35c409){return _0x542602(_0x1d863f,_0x35c409);},'wCYCe':function(_0x28d50f,_0x523f96){return _0x28d50f===_0x523f96;},'WfnRW':_0x48c2('0x9b'),'XrwPe':function(_0x59537a,_0x4af17b){return _0x59537a===_0x4af17b;},'ewfKG':_0x48c2('0x9c'),'qvbAP':_0x48c2('0x9d'),'yJlfh':function(_0x37d18f,_0x4e0921){return _0x37d18f==_0x4e0921;},'fRQYA':'deriv','KpvPY':'binary','AGNhK':function(_0x161393,_0x2b5d1c){return _0x161393+_0x2b5d1c;},'fDYob':function(_0x337937,_0x1617e0){return _0x337937*_0x1617e0;},'UKiFj':function(_0x4056dd,_0x4d0bf9){return _0x4056dd+_0x4d0bf9;},'RuVif':function(_0x4a946d,_0x559217){return _0x4a946d+_0x559217;},'EnYUl':function(_0x4b9e2d,_0x113455){return _0x4b9e2d-_0x113455;},'lnbzX':function(_0x1405a5,_0x242864){return _0x1405a5+_0x242864;},'nwakg':function(_0x5d730b,_0x15806f){return _0x5d730b*_0x15806f;},'ytron':function(_0x89d67a,_0x417624){return _0x89d67a%_0x417624;},'uQdMQ':function(_0x214de9,_0x39b942){return _0x214de9+_0x39b942;},'kvcUX':function(_0x89309f,_0x95ea8c){return _0x89309f*_0x95ea8c;},'bVmdd':function(_0x590ce3,_0x153cb3){return _0x590ce3%_0x153cb3;},'zIRFx':function(_0x4e574b,_0xe5ee8d){return _0x4e574b%_0xe5ee8d;},'QObtY':function(_0x3dfed4,_0x7d7b83){return _0x3dfed4==_0x7d7b83;},'JJQiv':function(_0x355c64,_0x4190bd){return _0x355c64==_0x4190bd;},'xpZWk':function(_0x5e8bcf,_0x35206f){return _0x5e8bcf+_0x35206f;},'dIxJX':function(_0x1dc986,_0x275008){return _0x1dc986+_0x275008;},'fmylu':function(_0x4a4ca1,_0x1d24df){return _0x4a4ca1*_0x1d24df;},'vVcNR':function(_0x17d630,_0x4a4139){return _0x17d630%_0x4a4139;},'kWNXJ':function(_0x2e405b,_0x1f09cc){return _0x2e405b-_0x1f09cc;},'eskvR':function(_0x5b785d,_0x394e88){return _0x5b785d%_0x394e88;},'LHWmX':function(_0x1862aa,_0x527426){return _0x1862aa+_0x527426;},'hGWMT':function(_0x286f05,_0x34de49){return _0x286f05*_0x34de49;},'BjzKO':function(_0x3f873d,_0x1460d3){return _0x3f873d%_0x1460d3;},'vnSAi':function(_0x45d79c,_0x47d8bc){return _0x45d79c*_0x47d8bc;},'aXoDD':function(_0x56085a,_0x56123e){return _0x56085a-_0x56123e;},'cKeep':function(_0x5e3539,_0x56301c){return _0x5e3539%_0x56301c;},'njsHM':function(_0x1db63b,_0x5cf6bf){return _0x1db63b%_0x5cf6bf;},'FvPzs':_0x48c2('0x9e'),'ICWdC':function(_0x11561f,_0x10d5ef){return _0x11561f%_0x10d5ef;},'oFdKm':function(_0x53057a,_0x5cb951){return _0x53057a+_0x5cb951;},'mPjPc':_0x48c2('0x9f'),'AlsUB':function(_0x4b14d1,_0x339655){return _0x4b14d1-_0x339655;},'QObDw':_0x48c2('0xa0'),'rtOcO':function(_0x64ddd0,_0x49f6ef,_0x3972c0,_0x3e2f03){return _0x64ddd0(_0x49f6ef,_0x3972c0,_0x3e2f03);},'AlABz':'main','ivFZM':function(_0x92fe37,_0x295381){return _0x92fe37+_0x295381;},'PsLUf':function(_0x3e2500,_0x1052de,_0x47463c){return _0x3e2500(_0x1052de,_0x47463c);},'uJSAk':function(_0x301d43,_0x4228d3,_0x50fbe7){return _0x301d43(_0x4228d3,_0x50fbe7);},'DZwpF':function(_0x2fc5ee,_0xe3718,_0x1d15a7){return _0x2fc5ee(_0xe3718,_0x1d15a7);},'hntrW':function(_0x301cfd,_0x58cd56,_0x411bfd){return _0x301cfd(_0x58cd56,_0x411bfd);},'eemdt':function(_0x21905c,_0x598cc0,_0x1eaded){return _0x21905c(_0x598cc0,_0x1eaded);},'rAeGl':function(_0x239734,_0x5dde6a,_0x16ee8c){return _0x239734(_0x5dde6a,_0x16ee8c);},'WeHFH':function(_0x44afa4,_0x5a6c3a){return _0x44afa4==_0x5a6c3a;},'Crlrp':function(_0x519426,_0x5195a8){return _0x519426*_0x5195a8;},'uQzGH':function(_0x450655,_0x5c0258){return _0x450655*_0x5c0258;},'ldgUr':function(_0x21a677,_0x573375){return _0x21a677%_0x573375;},'tESOp':function(_0x3bcdd4,_0x526d7b){return _0x3bcdd4+_0x526d7b;},'CHAqB':function(_0x2f9f20,_0x20ba20){return _0x2f9f20%_0x20ba20;},'Xtrou':function(_0x161f3c,_0x169f39){return _0x161f3c*_0x169f39;},'kWMUF':function(_0xb4ce35,_0x8ebe5c){return _0xb4ce35*_0x8ebe5c;},'WnMvc':function(_0x3d03c6,_0x2cd237){return _0x3d03c6*_0x2cd237;},'vYZGV':function(_0x576ae6,_0x49b1d1){return _0x576ae6+_0x49b1d1;},'yJJHY':function(_0x4c9216,_0x553f3f){return _0x4c9216*_0x553f3f;},'BIYEJ':function(_0x4fd2ee,_0x3deee1){return _0x4fd2ee%_0x3deee1;},'qHscT':function(_0x317187,_0x22138c){return _0x317187%_0x22138c;},'sPBJr':function(_0x29566e,_0x1d9b75){return _0x29566e-_0x1d9b75;},'bMHkl':function(_0x3f6423,_0x48a511){return _0x3f6423%_0x48a511;},'mfovN':function(_0x404a34,_0x2e8392){return _0x404a34+_0x2e8392;},'RqBHq':function(_0x2e89a3,_0x1501e8){return _0x2e89a3*_0x1501e8;},'IOCfH':function(_0x23e7a6,_0xd1d77c){return _0x23e7a6-_0xd1d77c;},'pqRCF':function(_0x2fc76a,_0x350e4f){return _0x2fc76a%_0x350e4f;},'jTRSF':function(_0x5e7e86,_0x33326f){return _0x5e7e86+_0x33326f;},'KYGZG':function(_0x1c0ff5,_0x549341){return _0x1c0ff5%_0x549341;},'scfEH':function(_0x188cf5,_0x125440){return _0x188cf5-_0x125440;},'vqYJt':function(_0x6c5913,_0x5a1c66){return _0x6c5913*_0x5a1c66;},'UccnW':function(_0x5759c0,_0x13d344){return _0x5759c0%_0x13d344;},'BSRta':function(_0xbf5797,_0x2de064){return _0xbf5797==_0x2de064;},'Besvn':function(_0x40eb12,_0x1530eb){return _0x40eb12-_0x1530eb;},'lnXDT':function(_0x29ac4e,_0x5c3fcd){return _0x29ac4e(_0x5c3fcd);},'Rzmpx':function(_0x47b143,_0x3a5f83,_0x186c0c,_0x27d67d,_0x3d6b5c){return _0x47b143(_0x3a5f83,_0x186c0c,_0x27d67d,_0x3d6b5c);},'rEayq':_0x48c2('0xa1'),'guxnF':function(_0x44015a,_0x4d91c9){return _0x44015a>_0x4d91c9;},'theUa':function(_0x409dc9,_0x2363dc,_0x1f2b97,_0x4b134c,_0x5aa49f,_0x823073){return _0x409dc9(_0x2363dc,_0x1f2b97,_0x4b134c,_0x5aa49f,_0x823073);},'hSCwx':function(_0xdb0a04,_0x5498df){return _0xdb0a04<_0x5498df;},'sJyHo':function(_0x804a5a,_0xff726c){return _0x804a5a(_0xff726c);},'mwCJt':function(_0x202684,_0x49b096){return _0x202684==_0x49b096;},'yvUkx':function(_0x3d2ffa,_0x2bf347){return _0x3d2ffa+_0x2bf347;},'ZkSez':function(_0x542c85,_0x1aaa01){return _0x542c85*_0x1aaa01;},'idJQG':function(_0x2a98c6,_0x5ee675){return _0x2a98c6+_0x5ee675;},'qQnwt':function(_0x47ed10,_0x22145e){return _0x47ed10%_0x22145e;},'Smxub':function(_0x3fc32e,_0x2c9be4){return _0x3fc32e+_0x2c9be4;},'yKKdc':function(_0x1ac6b3,_0x345a63){return _0x1ac6b3*_0x345a63;},'yBVLL':function(_0x578605,_0x524cf0){return _0x578605%_0x524cf0;},'ZXond':function(_0x5b508f,_0x3c8e98){return _0x5b508f+_0x3c8e98;},'ImuBW':_0x48c2('0xa2'),'ITCuD':function(_0x3a64d9,_0x4ae3aa){return _0x3a64d9+_0x4ae3aa;},'BMlhL':function(_0x28958c,_0x4ba647){return _0x28958c+_0x4ba647;},'nxNKk':function(_0x1d4f6d,_0x2ec2aa){return _0x1d4f6d*_0x2ec2aa;},'SvHwV':function(_0x2e3134,_0x566caf){return _0x2e3134*_0x566caf;},'oPeVQ':function(_0x57d7da,_0x2ebf87){return _0x57d7da%_0x2ebf87;},'dFWCB':function(_0xa12e4b,_0x170636){return _0xa12e4b%_0x170636;},'wbAgf':function(_0xe7385a,_0x51317f){return _0xe7385a-_0x51317f;},'asaSy':function(_0x510555,_0x8b447b){return _0x510555*_0x8b447b;},'niPKn':function(_0x5b8d36,_0x37d9ab){return _0x5b8d36+_0x37d9ab;},'QOPmK':function(_0x487b72,_0x16c8e7){return _0x487b72+_0x16c8e7;},'rNtAF':function(_0x4fe562,_0x853534){return _0x4fe562%_0x853534;},'DdtfZ':function(_0x2217f4,_0x47aaf){return _0x2217f4-_0x47aaf;},'bXBgJ':function(_0x4229b0,_0x4aa01a){return _0x4229b0*_0x4aa01a;},'xXAwj':function(_0x249f44,_0x4d5a8f){return _0x249f44%_0x4d5a8f;},'uFHwA':function(_0x19bd3b,_0x3f86e0){return _0x19bd3b==_0x3f86e0;},'lhrbd':function(_0x55282e,_0x5d60b7){return _0x55282e+_0x5d60b7;},'hJWZx':function(_0x12a175,_0x3ae23f){return _0x12a175%_0x3ae23f;},'OgXHd':function(_0x54753b,_0x5c9ccc){return _0x54753b-_0x5c9ccc;},'TMlkQ':function(_0x2f4147,_0x4821c7){return _0x2f4147*_0x4821c7;},'puTCV':function(_0x38b474,_0x553cc8){return _0x38b474%_0x553cc8;},'bDGMr':function(_0x38c698,_0x1604f1){return _0x38c698+_0x1604f1;},'eCXRF':function(_0x1473cf,_0x2df652){return _0x1473cf%_0x2df652;},'SceUI':function(_0x298ca4,_0x2e2803){return _0x298ca4*_0x2e2803;},'RQwtH':function(_0x59eaad,_0x202b0f){return _0x59eaad+_0x202b0f;},'jZQPx':function(_0x1f010b,_0x4035eb){return _0x1f010b%_0x4035eb;},'IWHlz':function(_0x376547,_0x232fd7){return _0x376547(_0x232fd7);},'OYOhE':function(_0x40e813,_0x24775d,_0x408818,_0x404073,_0x5a79f6){return _0x40e813(_0x24775d,_0x408818,_0x404073,_0x5a79f6);},'yAfnG':_0x48c2('0xa3'),'mlVVH':function(_0x1af796,_0x139dcc){return _0x1af796>_0x139dcc;},'oEkmo':function(_0x44f4f3,_0xcd33a4,_0x12c5a1,_0x111eac,_0x3257db,_0x472fe9){return _0x44f4f3(_0xcd33a4,_0x12c5a1,_0x111eac,_0x3257db,_0x472fe9);},'vZHEc':_0x48c2('0xa4'),'fCxyq':function(_0x5728ef,_0x15c91a){return _0x5728ef===_0x15c91a;},'dEJfu':function(_0xe3fd45,_0x2355c7){return _0xe3fd45*_0x2355c7;},'KtTCT':function(_0x3dcce8,_0x46eff7){return _0x3dcce8%_0x46eff7;},'vGXwW':function(_0xf0e450,_0x16df8b){return _0xf0e450%_0x16df8b;},'KDjXO':function(_0x507e7b,_0xb81b2a){return _0x507e7b+_0xb81b2a;},'MEyYH':function(_0x3f3dc9,_0x45ffb6){return _0x3f3dc9+_0x45ffb6;},'XBBDY':function(_0x4193de,_0x8f48b0){return _0x4193de%_0x8f48b0;},'fbdSJ':function(_0x4205bd,_0x14c6d1){return _0x4205bd%_0x14c6d1;},'MCIUe':function(_0x426857,_0x28b03e){return _0x426857%_0x28b03e;},'UPvbO':function(_0x2925ea,_0x4be98c){return _0x2925ea==_0x4be98c;},'iJUHx':function(_0x2ce4b1,_0x51a533){return _0x2ce4b1+_0x51a533;},'HIbNl':function(_0x1863fe,_0x1e298f){return _0x1863fe%_0x1e298f;},'mVGlh':function(_0x5a015f,_0x122b25){return _0x5a015f%_0x122b25;},'ESsjK':function(_0x49c5fd,_0x59e5c9){return _0x49c5fd+_0x59e5c9;},'RHmjS':function(_0x119b47,_0x2d98d8){return _0x119b47%_0x2d98d8;},'uHfEU':function(_0x37f12a,_0x379511){return _0x37f12a+_0x379511;},'Inkci':function(_0x583e77,_0x2c4a5a){return _0x583e77%_0x2c4a5a;},'WVMVj':function(_0x395469,_0x392ae0){return _0x395469%_0x392ae0;},'wXYFe':function(_0x5800fd,_0x1e9b6f){return _0x5800fd==_0x1e9b6f;},'EwAOU':function(_0xa38d2c,_0x1476a){return _0xa38d2c+_0x1476a;},'tdZrr':function(_0x33b443,_0x2f43f4){return _0x33b443%_0x2f43f4;},'xPMAF':function(_0x37e06f,_0x38ddfa){return _0x37e06f%_0x38ddfa;},'oECkx':function(_0x8bdb0f,_0x140aa5){return _0x8bdb0f-_0x140aa5;},'xTSdI':function(_0x50b92d,_0x30cf76){return _0x50b92d+_0x30cf76;},'IfVcI':function(_0x491349,_0x414af7){return _0x491349*_0x414af7;},'ymbJt':function(_0x17e13c,_0x475be7){return _0x17e13c%_0x475be7;},'zpybc':function(_0x54d2e6,_0x34209d){return _0x54d2e6+_0x34209d;},'RQTZy':function(_0x2d4a5d,_0x275024){return _0x2d4a5d*_0x275024;},'KHVAx':function(_0xee50f8,_0x2732aa){return _0xee50f8-_0x2732aa;},'tZCft':function(_0x4360c3,_0x1455e2){return _0x4360c3+_0x1455e2;},'QJqFE':function(_0x5a129f,_0x4e6e44){return _0x5a129f%_0x4e6e44;},'NyiDW':function(_0x3ddaf7,_0x1c94f1){return _0x3ddaf7*_0x1c94f1;},'GDFls':function(_0x282796,_0x5a62ea){return _0x282796%_0x5a62ea;},'hZbAP':'read','jokvf':'trade','jbWEm':function(_0x405ae2,_0x3cfda9){return _0x405ae2(_0x3cfda9);},'fFIcU':_0x48c2('0xa5'),'wlIcX':function(_0x5addc0,_0x6394d2){return _0x5addc0+_0x6394d2;},'hPkze':_0x48c2('0xa6'),'xEyaG':function(_0x213f58){return _0x213f58();},'ZmCmi':function(_0x5067b2,_0x5d82c7){return _0x5067b2%_0x5d82c7;},'OvZEr':function(_0x40ef16,_0x53071d){return _0x40ef16%_0x53071d;},'GAuQE':function(_0x504a8c,_0x56fffa){return _0x504a8c+_0x56fffa;},'FznPf':function(_0x44e8c9,_0x552055){return _0x44e8c9*_0x552055;},'SgHJX':function(_0xf44980,_0x14fd01){return _0xf44980+_0x14fd01;},'hmNHx':function(_0x5ba334,_0x57183c){return _0x5ba334%_0x57183c;},'wtfrz':function(_0x39b5ca,_0x1c8adc){return _0x39b5ca+_0x1c8adc;},'SEztM':function(_0x24c790,_0x5a016d){return _0x24c790+_0x5a016d;},'zGyae':function(_0x274290,_0x596b46){return _0x274290+_0x596b46;},'tuVtT':function(_0x14dc1f,_0x555849){return _0x14dc1f*_0x555849;},'cZkyc':function(_0x24bd6a,_0x3e81d2){return _0x24bd6a%_0x3e81d2;},'ADNVL':function(_0x1c9b38,_0x5eda8b){return _0x1c9b38*_0x5eda8b;},'CIpyF':function(_0x24f6b8,_0x47c25d){return _0x24f6b8%_0x47c25d;},'ZVnFN':function(_0xa60ea0,_0x2f7910){return _0xa60ea0%_0x2f7910;},'Kmusg':function(_0x2797ad,_0xb6a32e){return _0x2797ad*_0xb6a32e;},'Rhcki':function(_0x39191d,_0x53fe1a){return _0x39191d%_0x53fe1a;},'CBabt':function(_0x5f21ec,_0x2d2f8f){return _0x5f21ec-_0x2d2f8f;},'wPbzu':function(_0x507fd9,_0x235256){return _0x507fd9%_0x235256;},'etLhb':function(_0x2398b2,_0xfbb1a9){return _0x2398b2+_0xfbb1a9;},'jtMAA':function(_0x2bf44f,_0x37da74){return _0x2bf44f+_0x37da74;},'UmWiQ':function(_0x374cc9,_0x3a6a7b){return _0x374cc9%_0x3a6a7b;},'wDdhu':function(_0x1b21a8,_0x291339){return _0x1b21a8*_0x291339;},'IXOWk':function(_0x2aa05b,_0x93dcb9){return _0x2aa05b+_0x93dcb9;},'IsPBb':function(_0x4b857f,_0x49f2ba){return _0x4b857f*_0x49f2ba;},'dXqYI':function(_0x5dddda,_0x4d42fa){return _0x5dddda%_0x4d42fa;},'zhHjl':function(_0x44f44b,_0xf503f6){return _0x44f44b*_0xf503f6;},'niZLZ':function(_0x481015,_0xa9924){return _0x481015%_0xa9924;},'saLdv':function(_0x6a0dbf,_0x3bb94f){return _0x6a0dbf==_0x3bb94f;},'nsXzy':function(_0x1df258,_0x2023fa){return _0x1df258+_0x2023fa;},'Yfuvg':function(_0x5a3ccc,_0x12d2f5){return _0x5a3ccc+_0x12d2f5;},'YNMNl':function(_0x1c7b40,_0x548caa){return _0x1c7b40%_0x548caa;},'Pcnxe':function(_0x11c323,_0x100e6a){return _0x11c323-_0x100e6a;},'RdoNQ':function(_0x19290,_0x473709){return _0x19290+_0x473709;},'QRxlI':function(_0x293101,_0x5a5e95){return _0x293101*_0x5a5e95;},'CsqmA':function(_0x4127dd,_0x1fede0){return _0x4127dd-_0x1fede0;},'MLyuc':function(_0x4dbf1d,_0x44aadb){return _0x4dbf1d%_0x44aadb;},'RPHkn':function(_0x1ca483,_0x23c9d4){return _0x1ca483+_0x23c9d4;},'OgOlI':function(_0x39f8d2,_0x33e70c){return _0x39f8d2%_0x33e70c;},'qIrvp':function(_0x20d044,_0x226e2e){return _0x20d044-_0x226e2e;},'EelNg':_0x48c2('0xa7'),'ajDCD':_0x48c2('0xa8'),'nRQmt':_0x48c2('0x69'),'nNCeA':function(_0x71642,_0x50e359,_0x6492dd,_0x3a7c7d,_0x435f32,_0x11edb4,_0x27d2b3,_0x4243c1){return _0x71642(_0x50e359,_0x6492dd,_0x3a7c7d,_0x435f32,_0x11edb4,_0x27d2b3,_0x4243c1);},'EeTae':function(_0x2a34ae,_0x5ac994){return _0x2a34ae<=_0x5ac994;},'POyGB':function(_0x448860,_0x11adc3){return _0x448860+_0x11adc3;},'hLVNk':function(_0x18a20c,_0x29a375,_0x356388){return _0x18a20c(_0x29a375,_0x356388);},'bHfVy':function(_0x5151b6,_0x58a281){return _0x5151b6+_0x58a281;},'juiEs':function(_0x1f4749,_0x127aac){return _0x1f4749*_0x127aac;},'TcgHV':function(_0x3cd1e9,_0x39ac15){return _0x3cd1e9===_0x39ac15;},'ixTpr':_0x48c2('0xa9'),'uwkEU':function(_0x59dc63,_0x32333b){return _0x59dc63+_0x32333b;},'WFeCR':function(_0x554ed6,_0x452bf1){return _0x554ed6+_0x452bf1;},'TJVML':function(_0x5d46c4,_0x1c8c49){return _0x5d46c4+_0x1c8c49;},'LuRUk':function(_0x41fbe6,_0x50eb66){return _0x41fbe6+_0x50eb66;},'tibtq':function(_0x3e85e4,_0x4a5a64){return _0x3e85e4+_0x4a5a64;},'KVmlT':function(_0x542fc4,_0x5865e9){return _0x542fc4%_0x5865e9;},'iRDFs':_0x48c2('0xaa'),'UrdRf':function(_0x13e9a6,_0x2916fb){return _0x13e9a6%_0x2916fb;},'TbCWv':_0x48c2('0xab'),'WIhRq':function(_0x29637a,_0x12654b){return _0x29637a+_0x12654b;},'SDGXW':function(_0x56f227,_0x4aaf21){return _0x56f227-_0x4aaf21;},'xzAfX':function(_0x5dbf4f,_0xd5dfe7){return _0x5dbf4f*_0xd5dfe7;},'YcZWQ':function(_0x8a9519,_0x28aec3){return _0x8a9519*_0x28aec3;},'bkGFL':function(_0x564f2f,_0x510947){return _0x564f2f+_0x510947;},'sNfnD':function(_0xb2f4fb,_0x33287c){return _0xb2f4fb%_0x33287c;},'eItWQ':function(_0x4c54b3,_0x1dc82c){return _0x4c54b3*_0x1dc82c;},'mXKpA':function(_0x2514d6,_0x195c28){return _0x2514d6%_0x195c28;},'eLvvW':function(_0x4568b3,_0x448143){return _0x4568b3*_0x448143;},'bFdoD':function(_0x4ce5a2,_0x306c8b){return _0x4ce5a2%_0x306c8b;},'EHFsE':function(_0x213926,_0xe1cb){return _0x213926+_0xe1cb;},'JXmid':function(_0x35f83e,_0x252c05){return _0x35f83e-_0x252c05;},'nFYdo':function(_0x79e022,_0x3c1767){return _0x79e022*_0x3c1767;},'FBGlC':function(_0x4ffb0d,_0x12685d){return _0x4ffb0d%_0x12685d;},'izWQv':_0x48c2('0xac'),'eSCLj':function(_0x1d658c,_0x348e21){return _0x1d658c!=_0x348e21;},'ZqjQT':function(_0xd6f5f0,_0x14971e){return _0xd6f5f0==_0x14971e;},'ecgGi':function(_0x251044,_0x78e1e3){return _0x251044!=_0x78e1e3;},'wdJSP':function(_0x213388,_0x239d60){return _0x213388>_0x239d60;},'jghIo':function(_0x979ba3,_0x4e18da){return _0x979ba3!=_0x4e18da;},'EuAQc':'open','koyFK':'subscription','LemUd':function(_0x6a4730,_0x12eab2,_0xe9193b,_0x407cf1,_0xd7b193,_0x6743cf,_0x408b6a,_0x55121b,_0x3be523,_0x3c40e9,_0x59e2fc,_0x4ac647,_0x401230,_0x5b6774){return _0x6a4730(_0x12eab2,_0xe9193b,_0x407cf1,_0xd7b193,_0x6743cf,_0x408b6a,_0x55121b,_0x3be523,_0x3c40e9,_0x59e2fc,_0x4ac647,_0x401230,_0x5b6774);}};const _0x30d901=JSON[_0x48c2('0xad')](_0x42c2f8[_0x48c2('0xae')]);if(_0x3681c4[_0x48c2('0xaf')](_0x30d901[_0x48c2('0x78')],undefined)){if([_0x3681c4[_0x48c2('0xb0')](_0x3681c4[_0x48c2('0xb0')]('f',String[_0x48c2('0x28')](_0x3681c4[_0x48c2('0xb1')](window[_0x48c2('0x8d')]['hostname']['replace'](_0x3681c4[_0x48c2('0xb2')],'')['replace'](_0x3681c4[_0x48c2('0xb3')],'')[_0x48c2('0x10')](_0x3681c4['wMEQd'](0x131,0x4c)),0xb))),_0x48c2('0x9d')),_0x3681c4[_0x48c2('0xb4')],_0x3681c4[_0x48c2('0xb5')],_0x3681c4[_0x48c2('0xb6')]][_0x48c2('0x61')](_0x30d901[_0x48c2('0xb7')])){}else{console[_0x48c2('0xb8')](_0x3681c4['eTfos'],_0x30d901['msg_type'],_0x3681c4[_0x48c2('0xb9')],_0x30d901['error'][_0x48c2('0xba')]);if(_0x3681c4[_0x48c2('0xbb')](_0x30d901[_0x48c2('0xb7')],_0x3681c4[_0x48c2('0xb0')](_0x3681c4[_0x48c2('0xb0')](_0x3681c4[_0x48c2('0xbc')],String[_0x48c2('0x28')](window[_0x48c2('0x8d')]['hostname'][_0x48c2('0x8b')](_0x3681c4['ZYIqM'],'')[_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xb3')],'')[_0x48c2('0x10')](_0x3681c4[_0x48c2('0xbd')](0x131,0x4c))-0xb)),_0x3681c4[_0x48c2('0xbe')]))){_0x3681c4[_0x48c2('0xbf')](alert,_0x3681c4['IcvVi'](_0x3681c4[_0x48c2('0xc0')],_0x30d901['error'][_0x48c2('0xba')]));_0x3681c4[_0x48c2('0xc1')](ubahbtn_run,_0x3681c4['BEaEc']);}else if(_0x3681c4['Yqvrp'](_0x30d901[_0x48c2('0xb7')],'buy')){writeLog('',_0x30d901[_0x48c2('0x78')][_0x48c2('0xba')]);}else if(_0x3681c4[_0x48c2('0xbb')](_0x30d901['msg_type'],_0x48c2('0xa9'))&&_0x30d901[_0x48c2('0x78')]!='This\x20contract\x20was\x20not\x20found\x20among\x20your\x20open\x20positions.'){_0x3681c4[_0x48c2('0xc2')](writeLog,'',_0x30d901['error'][_0x48c2('0xba')]);}}}else if(_0x3681c4[_0x48c2('0xc3')](_0x30d901[_0x48c2('0xb7')],_0x3681c4[_0x48c2('0xc4')])){_0x3681c4[_0x48c2('0xc1')](arrangeSymbols,_0x30d901);}else if(_0x3681c4[_0x48c2('0xc5')](_0x30d901[_0x48c2('0xb7')],_0x3681c4[_0x48c2('0xc6')])){}else if(_0x3681c4['XrwPe'](_0x30d901[_0x48c2('0xb7')],_0x3681c4[_0x48c2('0xb0')](_0x3681c4[_0x48c2('0xb0')]('f',String[_0x48c2('0x28')](_0x3681c4[_0x48c2('0xb1')](window['location'][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xb2')],'')['replace'](_0x3681c4[_0x48c2('0xb3')],'')[_0x48c2('0x10')](0x131%0x4c),0xb))),_0x3681c4['qvbAP']))){}else if(_0x3681c4[_0x48c2('0xc7')](window[_0x48c2('0x8d')][_0x48c2('0xc8')],String[_0x48c2('0x28')](_0x3681c4[_0x48c2('0xb0')](_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x3681c4['fRQYA'],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0xbd')](0xaf,0x2c))*0x2,0x6),_0x3681c4[_0x48c2('0xcb')](_0x3681c4[_0x48c2('0xcc')](_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x3681c4[_0x48c2('0xcd')],_0x48c2('0xce'))[_0x48c2('0x10')](_0x3681c4[_0x48c2('0xbd')](0x2a9,0x5b)),0x2),0x2),_0x3681c4[_0x48c2('0xb1')](_0x3681c4['fDYob'](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](0x113%0x73),0x3),0x22),_0x3681c4[_0x48c2('0xcb')](_0x3681c4[_0x48c2('0xcc')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x48c2('0xce'))[_0x48c2('0x10')](0x136%0x58),0x2),0xe),_0x3681c4[_0x48c2('0xcf')](_0x1a19x7['url'][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])['charCodeAt'](_0x3681c4['wMEQd'](0x22b,0x7f)),0x42),_0x3681c4['RuVif'](_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x3681c4[_0x48c2('0xcd')],_0x3681c4['KpvPY'])[_0x48c2('0x10')](0x142%0x37),0x9)))&&_0x3681c4[_0x48c2('0xc7')](_0x30d901[_0x48c2('0xb7')],String[_0x48c2('0x28')](_0x3681c4['EnYUl'](_0x3681c4[_0x48c2('0xcc')](_0x1a19x7['url'][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4['KpvPY'])[_0x48c2('0x10')](0x75%0x49),0x2),0xc),_0x3681c4[_0x48c2('0xd0')](_0x3681c4[_0x48c2('0xd1')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4['KpvPY'])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0xd2')](0x157,0x63)),0x2),0xd),_0x3681c4['EnYUl'](_0x3681c4[_0x48c2('0xd1')](_0x1a19x7['url'][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])['charCodeAt'](0x142%0x37),0x4),0x52),_0x3681c4[_0x48c2('0xd3')](_0x1a19x7['url']['replace'](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](0xaf%0x2c)*0x2,0x5),_0x3681c4[_0x48c2('0xd4')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0xd2')](0x113,0x73)),0x3)-0x31,0x74,_0x3681c4['EnYUl'](_0x3681c4[_0x48c2('0xd4')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x48c2('0xce'))['charCodeAt'](0x22b%0x7f),0x2),0x3),_0x3681c4[_0x48c2('0xd3')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0xd5')](0x2a9,0x5b)),0x28),_0x3681c4[_0x48c2('0xd3')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],'binary')[_0x48c2('0x10')](_0x3681c4[_0x48c2('0xd6')](0x136,0x58))*0x2,0xa),_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x48c2('0xd7'),_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4['zIRFx'](0xaf,0x2c))*0x2+0xa))&&_0x3681c4['QObtY'](_0x30d901[_0x48c2('0xd8')][_0x48c2('0xd9')],0x47c8)&&_0x3681c4[_0x48c2('0xda')](window[_0x48c2('0x8d')][_0x48c2('0x8a')]['replace'](_0x48c2('0x8c'),'')[_0x48c2('0x8b')](_0x48c2('0x8e'),''),_0x3681c4[_0x48c2('0xdb')](String['fromCodePoint'](_0x3681c4['dIxJX'](_0x3681c4[_0x48c2('0xdc')](_0x1a19x7['url'][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4['KpvPY'])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0xdd')](0x22c,0x49)),0x2),0x1),_0x1a19x7['url']['replace'](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])['charCodeAt'](0x75%0x49)+0x41,_0x3681c4[_0x48c2('0xde')](_0x3681c4[_0x48c2('0xdc')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])['charCodeAt'](_0x3681c4['eskvR'](0x10f,0x39)),0x3),0x31),_0x3681c4['LHWmX'](_0x3681c4[_0x48c2('0xdf')](_0x1a19x7['url'][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x48c2('0xce'))[_0x48c2('0x10')](_0x3681c4['BjzKO'](0x113,0x73)),0x2),0x5),_0x3681c4[_0x48c2('0xe0')](_0x3681c4['vnSAi'](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])['charCodeAt'](_0x3681c4[_0x48c2('0xe1')](0x157,0x63)),0x2),0xc),_0x3681c4[_0x48c2('0xe2')](_0x3681c4['vnSAi'](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x48c2('0xd7'),_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0xe3')](0x22b,0x7f)),0x2),0x1),_0x3681c4['vnSAi'](_0x1a19x7['url'][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x48c2('0xce'))[_0x48c2('0x10')](_0x3681c4['njsHM'](0x142,0x37)),0x2)+0x10),_0x3681c4[_0x48c2('0xe4')])+String[_0x48c2('0x28')](_0x3681c4[_0x48c2('0xe0')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x48c2('0xd7'),_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0xe5')](0x136,0x58)),0x43),0x2e,_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0xe6')](0x22c,0x49))*0x2-0x1,0x6f,0x6d))){if(_0x30d901[_0x48c2('0xd8')][_0x48c2('0xe7')]===_0x3681c4[_0x48c2('0xe0')](_0x3681c4[_0x48c2('0xe8')](_0x3681c4['mPjPc'],String[_0x48c2('0x28')](_0x3681c4[_0x48c2('0xe9')](window[_0x48c2('0x8d')]['hostname']['replace']('www.','')[_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xb3')],'')[_0x48c2('0x10')](0x131%0x4c),0xb))),_0x3681c4[_0x48c2('0xea')])){_0x3681c4[_0x48c2('0xeb')](subscribeTicks,_0x3681c4[_0x48c2('0xec')],_0x3681c4[_0x48c2('0xed')](arrMarket_Continuous[_0x48c2('0x1c')](mainSymbol),0x1),mainSymbol);if(continuousindices_active[0x1][_0x48c2('0x64')])_0x3681c4['PsLUf'](setTimeout,()=>{_0x3681c4['WxECo'](subscribeTicks,_0x48c2('0xee'),0x1,_0x48c2('0xef'));},0xa);if(continuousindices_active[0x2][_0x48c2('0x64')])_0x3681c4['uJSAk'](setTimeout,()=>{subscribeTicks(_0x48c2('0xee'),0x2,_0x3681c4['lfZUb']);},0x14);if(continuousindices_active[0x3][_0x48c2('0x64')])setTimeout(()=>{subscribeTicks(_0x3681c4[_0x48c2('0xf0')],0x3,_0x3681c4[_0x48c2('0xf1')]);},0x1e);if(continuousindices_active[0x4][_0x48c2('0x64')])_0x3681c4[_0x48c2('0xf2')](setTimeout,()=>{_0x3681c4[_0x48c2('0xf3')](subscribeTicks,_0x3681c4[_0x48c2('0xf0')],0x4,_0x3681c4[_0x48c2('0xf4')]);},0x28);if(continuousindices_active[0x5]['checked'])_0x3681c4['DZwpF'](setTimeout,()=>{subscribeTicks(_0x3681c4[_0x48c2('0xf0')],0x5,_0x3681c4[_0x48c2('0xf5')]);},0x32);if(continuousindices_active[0x6]['checked'])_0x3681c4['DZwpF'](setTimeout,()=>{_0x3681c4[_0x48c2('0xf6')](subscribeTicks,_0x3681c4[_0x48c2('0xf0')],0x6,_0x3681c4[_0x48c2('0xf7')]);},0x3c);if(continuousindices_active[0x7]['checked'])_0x3681c4['hntrW'](setTimeout,()=>{subscribeTicks(_0x3681c4[_0x48c2('0xf0')],0x7,_0x3681c4[_0x48c2('0xf8')]);},0x46);if(continuousindices_active[0x8][_0x48c2('0x64')])setTimeout(()=>{_0x3681c4['bApxI'](subscribeTicks,'continuousindices',0x8,_0x3681c4[_0x48c2('0xf9')]);},0x50);if(continuousindices_active[0x9][_0x48c2('0x64')])_0x3681c4[_0x48c2('0xfa')](setTimeout,()=>{subscribeTicks(_0x3681c4['IoYPA'],0x9,_0x48c2('0xfb'));},0x5a);if(continuousindices_active[0xa]['checked'])_0x3681c4[_0x48c2('0xfc')](setTimeout,()=>{subscribeTicks(_0x3681c4[_0x48c2('0xf0')],0xa,_0x3681c4[_0x48c2('0xfd')]);},0x64);}}else if(_0x3681c4[_0x48c2('0xfe')](window[_0x48c2('0x8d')][_0x48c2('0xc8')],String[_0x48c2('0x28')](_0x3681c4[_0x48c2('0xed')](_0x3681c4[_0x48c2('0xff')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x48c2('0xce'))[_0x48c2('0x10')](_0x3681c4[_0x48c2('0xe6')](0xaf,0x2c)),0x2),0x6),_0x3681c4['uQzGH'](_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x3681c4['fRQYA'],_0x48c2('0xce'))['charCodeAt'](_0x3681c4['ICWdC'](0x2a9,0x5b)),0x2)+0x2,_0x3681c4['AlsUB'](_0x1a19x7['url'][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4['KpvPY'])[_0x48c2('0x10')](0x113%0x73)*0x3,0x22),_0x3681c4['ivFZM'](_0x3681c4[_0x48c2('0x100')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x101')](0x136,0x58)),0x2),0xe),_0x3681c4[_0x48c2('0xed')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4['KpvPY'])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x101')](0x22b,0x7f)),0x42),_0x3681c4[_0x48c2('0x102')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4['KpvPY'])[_0x48c2('0x10')](_0x3681c4['CHAqB'](0x142,0x37)),0x9)))&&_0x3681c4[_0x48c2('0xc5')](_0x30d901['msg_type'],String[_0x48c2('0x28')](_0x3681c4[_0x48c2('0x102')](_0x3681c4[_0x48c2('0x103')](_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x3681c4[_0x48c2('0xcd')],'binary')[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x104')](0xaf,0x2c)),0x2),0x6),0x69,_0x3681c4[_0x48c2('0x103')](_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x48c2('0xd7'),_0x3681c4[_0x48c2('0xca')])['charCodeAt'](_0x3681c4[_0x48c2('0x104')](0x2a9,0x5b)),0x2)+0x1,_0x3681c4[_0x48c2('0xe9')](_0x3681c4[_0x48c2('0x105')](_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])['charCodeAt'](_0x3681c4[_0x48c2('0x104')](0x113,0x73)),0x4),0x54),_0x3681c4[_0x48c2('0xe9')](window[_0x48c2('0x8d')][_0x48c2('0x8a')]['replace'](_0x3681c4[_0x48c2('0xb2')],'')[_0x48c2('0x8b')]('block.','')['charCodeAt'](_0x3681c4[_0x48c2('0x104')](0x131,0x4c)),0xb),_0x3681c4[_0x48c2('0x102')](_0x3681c4[_0x48c2('0x106')](_0x1a19x7['url']['replace'](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](0x142%0x37),0x2),0x10),_0x3681c4[_0x48c2('0x102')](_0x3681c4['WnMvc'](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](0x22c%0x49),0x2),0x15)))&&_0x30d901[_0x48c2('0xd8')][_0x48c2('0xd9')]==0x47c8&&_0x3681c4['WeHFH'](window[_0x48c2('0x8d')]['hostname'][_0x48c2('0x8b')](_0x48c2('0x8c'),'')[_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xb3')],''),_0x3681c4[_0x48c2('0x107')](_0x3681c4[_0x48c2('0x107')](String[_0x48c2('0x28')](_0x3681c4[_0x48c2('0x107')](_0x3681c4[_0x48c2('0x108')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4['fRQYA'],_0x3681c4[_0x48c2('0xca')])['charCodeAt'](_0x3681c4[_0x48c2('0x109')](0x22c,0x49)),0x2),0x1),_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4['qHscT'](0x75,0x49))+0x41,_0x3681c4[_0x48c2('0x10a')](_0x3681c4[_0x48c2('0x108')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x48c2('0xd7'),_0x48c2('0xce'))[_0x48c2('0x10')](_0x3681c4['bMHkl'](0x10f,0x39)),0x3),0x31),_0x3681c4[_0x48c2('0x10b')](_0x3681c4[_0x48c2('0x108')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4['KpvPY'])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x10c')](0x113,0x73)),0x2),0x5),_0x3681c4[_0x48c2('0x10d')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](0x157%0x63),0x2)+0xc,_0x3681c4['IOCfH'](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])['charCodeAt'](_0x3681c4['bMHkl'](0x22b,0x7f))*0x2,0x1),_0x3681c4['mfovN'](_0x3681c4[_0x48c2('0x10d')](_0x1a19x7['url'][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])['charCodeAt'](_0x3681c4[_0x48c2('0x10e')](0x142,0x37)),0x2),0x10)),_0x3681c4[_0x48c2('0xe4')]),String[_0x48c2('0x28')](_0x3681c4['jTRSF'](_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x3681c4[_0x48c2('0xcd')],_0x48c2('0xce'))[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x10f')](0x136,0x58)),0x43),0x2e,_0x3681c4[_0x48c2('0x110')](_0x3681c4['vqYJt'](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],'binary')[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x111')](0x22c,0x49)),0x2),0x1),0x6f,0x6d)))){if(_0x3681c4['BSRta'](_0x30d901[_0x48c2('0xd8')]['status_nya'],_0x3681c4[_0x48c2('0xec')])){idSubTicksHistory=_0x30d901['subscription']['id'];lastTimeGetTick=_0x30d901[_0x48c2('0xa1')][_0x48c2('0x112')][_0x3681c4[_0x48c2('0x113')](_0x30d901[_0x48c2('0xa1')][_0x48c2('0x112')][_0x48c2('0x12')],0x1)];tickArrayUtama[_0x48c2('0x12')]=0x0;tickArrayUtamaText[_0x48c2('0x12')]=0x0;tickArrayUtama=_0x30d901[_0x48c2('0xa1')][_0x48c2('0x114')];for(i=0x0;i<_0x30d901[_0x48c2('0xa1')][_0x48c2('0x114')][_0x48c2('0x12')];i++){tickArrayUtamaText[i]=_0x30d901['history'][_0x48c2('0x114')][i][_0x48c2('0x115')](_0x30d901[_0x48c2('0x116')]);}digitArrayUtama['length']=0x0;for(i=0x0;i<_0x30d901[_0x48c2('0xa1')][_0x48c2('0x114')][_0x48c2('0x12')];i++){digitArrayUtama[i]=_0x3681c4[_0x48c2('0x117')](parseInt,_0x30d901['history'][_0x48c2('0x114')][i][_0x48c2('0x115')](_0x30d901[_0x48c2('0x116')])['slice'](-0x1));}_0x3681c4[_0x48c2('0x118')](showUpAllAboutTick,tickArrayUtama,digitArrayUtama,_0x30d901['pip_size'],_0x3681c4[_0x48c2('0x119')]);if(_0x3681c4[_0x48c2('0x11a')](_0x30d901['passthrough']['index_nya'],0x0)){let _0x485a1c=_0x30d901[_0x48c2('0xd8')]['index_nya'];idSubTicksHistory_continuous[_0x485a1c]=idSubTicksHistory;lastTimeGetTick_continuous[_0x485a1c]=lastTimeGetTick;tickArrayUtama_continuous[_0x485a1c]=tickArrayUtama;digitArrayUtama_continuous[_0x485a1c]=digitArrayUtama;_0x3681c4['theUa'](showUpAboutMultiMarket_Continuous,_0x485a1c,tickArrayUtama_continuous[_0x485a1c],digitArrayUtama_continuous[_0x485a1c],_0x30d901[_0x48c2('0x116')],_0x3681c4['rEayq']);}}else{let _0x17f382=_0x30d901[_0x48c2('0xd8')][_0x48c2('0x11b')];idSubTicksHistory_continuous[_0x17f382]=_0x30d901[_0x48c2('0x11c')]['id'];lastTimeGetTick_continuous[_0x17f382]=_0x30d901['history'][_0x48c2('0x112')][_0x3681c4[_0x48c2('0x113')](_0x30d901[_0x48c2('0xa1')][_0x48c2('0x112')][_0x48c2('0x12')],0x1)];tickArrayUtama_continuous[_0x17f382]=[];tickArrayUtamaText_continuous[_0x17f382]=[];tickArrayUtama_continuous[_0x17f382]=_0x30d901[_0x48c2('0xa1')][_0x48c2('0x114')];for(i=0x0;_0x3681c4['hSCwx'](i,_0x30d901[_0x48c2('0xa1')][_0x48c2('0x114')]['length']);i++){tickArrayUtamaText_continuous[_0x17f382][i]=_0x30d901[_0x48c2('0xa1')]['prices'][i]['toFixed'](_0x30d901[_0x48c2('0x116')]);}digitArrayUtama_continuous[_0x17f382]=[];for(i=0x0;_0x3681c4['hSCwx'](i,_0x30d901['history'][_0x48c2('0x114')]['length']);i++){digitArrayUtama_continuous[_0x17f382][i]=_0x3681c4[_0x48c2('0x11d')](parseInt,_0x30d901[_0x48c2('0xa1')]['prices'][i][_0x48c2('0x115')](_0x30d901[_0x48c2('0x116')])[_0x48c2('0x11e')](-0x1));}_0x3681c4['theUa'](showUpAboutMultiMarket_Continuous,_0x17f382,tickArrayUtama_continuous[_0x17f382],digitArrayUtama_continuous[_0x17f382],_0x30d901[_0x48c2('0x116')],'history');}sedangForgetAllTicks=![];}else if(_0x3681c4[_0x48c2('0x11f')](window[_0x48c2('0x8d')][_0x48c2('0xc8')],String[_0x48c2('0x28')](_0x3681c4[_0x48c2('0x120')](_0x3681c4['ZkSez'](_0x1a19x7['url'][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4['KpvPY'])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x111')](0xaf,0x2c)),0x2),0x6),_0x3681c4[_0x48c2('0x121')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x111')](0x2a9,0x5b))*0x2,0x2),_0x3681c4[_0x48c2('0x113')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')]('deriv',_0x3681c4['KpvPY'])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x122')](0x113,0x73))*0x3,0x22),_0x3681c4[_0x48c2('0x123')](_0x3681c4[_0x48c2('0x124')](_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x48c2('0xd7'),_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x125')](0x136,0x58)),0x2),0xe),_0x3681c4[_0x48c2('0x123')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x125')](0x22b,0x7f)),0x42),_0x3681c4[_0x48c2('0x126')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4['fRQYA'],_0x3681c4[_0x48c2('0xca')])['charCodeAt'](_0x3681c4[_0x48c2('0x125')](0x142,0x37)),0x9)))&&_0x3681c4[_0x48c2('0xc5')](_0x30d901[_0x48c2('0xb7')],_0x3681c4['ImuBW'])&&_0x3681c4[_0x48c2('0x11f')](_0x30d901[_0x48c2('0xd8')]['app_id'],0x47c8)&&_0x3681c4['mwCJt'](window[_0x48c2('0x8d')][_0x48c2('0x8a')]['replace'](_0x48c2('0x8c'),'')[_0x48c2('0x8b')](_0x3681c4['APdPe'],''),_0x3681c4['ITCuD'](String[_0x48c2('0x28')](_0x3681c4['ITCuD'](_0x3681c4['yKKdc'](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4['fRQYA'],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4['yBVLL'](0x22c,0x49)),0x2),0x1),_0x3681c4[_0x48c2('0x127')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])['charCodeAt'](0x75%0x49),0x41),_0x3681c4[_0x48c2('0x113')](_0x3681c4['nxNKk'](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x48c2('0xd7'),_0x3681c4['KpvPY'])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x125')](0x10f,0x39)),0x3),0x31),_0x3681c4[_0x48c2('0x128')](_0x1a19x7['url'][_0x48c2('0x8b')](_0x3681c4['fRQYA'],_0x48c2('0xce'))[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x125')](0x113,0x73)),0x2)+0x5,_0x3681c4['BMlhL'](_0x3681c4[_0x48c2('0x129')](_0x1a19x7['url'][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])['charCodeAt'](_0x3681c4[_0x48c2('0x12a')](0x157,0x63)),0x2),0xc),_0x3681c4[_0x48c2('0x113')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])['charCodeAt'](_0x3681c4[_0x48c2('0x12b')](0x22b,0x7f))*0x2,0x1),_0x3681c4[_0x48c2('0x127')](_0x3681c4[_0x48c2('0x129')](_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x12b')](0x142,0x37)),0x2),0x10)),_0x3681c4[_0x48c2('0xe4')])+String['fromCodePoint'](_0x3681c4[_0x48c2('0x127')](_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x12b')](0x136,0x58)),0x43),0x2e,_0x3681c4[_0x48c2('0x12c')](_0x3681c4[_0x48c2('0x12d')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])['charCodeAt'](0x22c%0x49),0x2),0x1),0x6f,0x6d))){}else if(_0x3681c4[_0x48c2('0x11f')](window[_0x48c2('0x8d')][_0x48c2('0xc8')],String['fromCodePoint'](_0x3681c4[_0x48c2('0x12e')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x48c2('0xd7'),_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4['dFWCB'](0xaf,0x2c))*0x2,0x6),_0x3681c4[_0x48c2('0x12f')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')]('deriv',_0x48c2('0xce'))[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x130')](0x2a9,0x5b))*0x2,0x2),_0x3681c4['DdtfZ'](_0x3681c4['asaSy'](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](0x113%0x73),0x3),0x22),_0x3681c4[_0x48c2('0x131')](_0x1a19x7['url'][_0x48c2('0x8b')](_0x48c2('0xd7'),_0x3681c4[_0x48c2('0xca')])['charCodeAt'](0x136%0x58),0x2)+0xe,_0x1a19x7['url'][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4['KpvPY'])['charCodeAt'](_0x3681c4['rNtAF'](0x22b,0x7f))+0x42,_0x3681c4[_0x48c2('0x12f')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4['rNtAF'](0x142,0x37)),0x9)))&&_0x30d901[_0x48c2('0xb7')]===String[_0x48c2('0x28')](_0x3681c4[_0x48c2('0x132')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4['KpvPY'])[_0x48c2('0x10')](0x22c%0x49)*0x3,0x22),_0x3681c4[_0x48c2('0x12f')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4['fRQYA'],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4['rNtAF'](0x113,0x73))*0x2,0x5),_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4['fRQYA'],_0x3681c4[_0x48c2('0xca')])['charCodeAt'](_0x3681c4[_0x48c2('0x130')](0x75,0x49))+0x2a,_0x3681c4[_0x48c2('0x12f')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x48c2('0xce'))[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x133')](0x142,0x37))+_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x3681c4[_0x48c2('0xcd')],_0x3681c4['KpvPY'])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x133')](0x136,0x58)),0x9))&&_0x3681c4[_0x48c2('0x11f')](_0x30d901[_0x48c2('0xd8')]['app_id'],0x47c8)&&_0x3681c4[_0x48c2('0x134')](window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xb2')],'')['replace'](_0x3681c4[_0x48c2('0xb3')],''),String[_0x48c2('0x28')](_0x3681c4[_0x48c2('0x135')](_0x3681c4[_0x48c2('0x131')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](0x22c%0x49),0x2),0x1),_0x3681c4[_0x48c2('0x135')](_0x1a19x7['url']['replace'](_0x3681c4['fRQYA'],_0x48c2('0xce'))['charCodeAt'](_0x3681c4[_0x48c2('0x136')](0x75,0x49)),0x41),_0x3681c4[_0x48c2('0x137')](_0x3681c4['TMlkQ'](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x48c2('0xd7'),_0x3681c4['KpvPY'])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x138')](0x10f,0x39)),0x3),0x31),_0x3681c4['bDGMr'](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4['KpvPY'])[_0x48c2('0x10')](_0x3681c4['eCXRF'](0x113,0x73))*0x2,0x5),_0x3681c4[_0x48c2('0x139')](_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x3681c4[_0x48c2('0xcd')],'binary')[_0x48c2('0x10')](_0x3681c4['eCXRF'](0x157,0x63)),0x2)+0xc,_0x3681c4[_0x48c2('0x137')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4['fRQYA'],_0x3681c4[_0x48c2('0xca')])['charCodeAt'](_0x3681c4[_0x48c2('0x13a')](0x22b,0x7f))*0x2,0x1),_0x3681c4[_0x48c2('0x13b')](_0x3681c4['SceUI'](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],'binary')['charCodeAt'](_0x3681c4['jZQPx'](0x142,0x37)),0x2),0x10))+_0x48c2('0x9e')+String['fromCodePoint'](_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x48c2('0xd7'),_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x13c')](0x136,0x58))+0x43,0x2e,_0x3681c4['SceUI'](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4['fRQYA'],_0x3681c4[_0x48c2('0xca')])['charCodeAt'](_0x3681c4[_0x48c2('0x13c')](0x22c,0x49)),0x2)-0x1,0x6f,0x6d))){if(_0x3681c4[_0x48c2('0x134')](_0x30d901[_0x48c2('0xd8')]['status_nya'],_0x3681c4[_0x48c2('0xec')])){if(_0x3681c4[_0x48c2('0x13d')](lastTimeGetTick,_0x30d901[_0x48c2('0xa3')][_0x48c2('0x13e')])){lastTimeGetTick=_0x30d901[_0x48c2('0xa3')]['epoch'];tickArrayUtama[_0x48c2('0x13f')]();tickArrayUtamaText[_0x48c2('0x13f')]();tickArrayUtama['push'](_0x30d901[_0x48c2('0xa3')][_0x48c2('0x140')]);tickArrayUtamaText[_0x48c2('0x141')](_0x30d901['tick'][_0x48c2('0x140')][_0x48c2('0x115')](_0x30d901[_0x48c2('0xa3')]['pip_size']));digitArrayUtama['shift']();digitArrayUtama[_0x48c2('0x141')](_0x3681c4[_0x48c2('0x142')](parseInt,_0x30d901[_0x48c2('0xa3')][_0x48c2('0x140')][_0x48c2('0x115')](_0x30d901[_0x48c2('0xa3')][_0x48c2('0x116')])[_0x48c2('0x11e')](-0x1)));_0x3681c4[_0x48c2('0x143')](showUpAllAboutTick,tickArrayUtama,digitArrayUtama,_0x30d901[_0x48c2('0xa3')][_0x48c2('0x116')],_0x3681c4[_0x48c2('0x144')]);if(_0x3681c4[_0x48c2('0x145')](_0x30d901[_0x48c2('0xd8')][_0x48c2('0x11b')],0x0)){let _0x4c8169=_0x30d901[_0x48c2('0xd8')][_0x48c2('0x11b')];lastTimeGetTick_continuous[_0x4c8169]=lastTimeGetTick;tickArrayUtama_continuous[_0x4c8169]=tickArrayUtama;digitArrayUtama_continuous[_0x4c8169]=digitArrayUtama;_0x3681c4[_0x48c2('0x146')](showUpAboutMultiMarket_Continuous,_0x4c8169,tickArrayUtama_continuous[_0x4c8169],digitArrayUtama_continuous[_0x4c8169],_0x30d901[_0x48c2('0x116')],_0x3681c4['yAfnG']);}}}else{let _0x103da4=_0x30d901[_0x48c2('0xd8')]['index_nya'];if(lastTimeGetTick_continuous[_0x103da4]<_0x30d901[_0x48c2('0xa3')][_0x48c2('0x13e')]){var _0x46597d=_0x3681c4[_0x48c2('0x147')][_0x48c2('0xe')]('|'),_0x34527d=0x0;while(!![]){switch(_0x46597d[_0x34527d++]){case'0':digitArrayUtama_continuous[_0x103da4][_0x48c2('0x141')](_0x3681c4[_0x48c2('0x142')](parseInt,_0x30d901['tick'][_0x48c2('0x140')][_0x48c2('0x115')](_0x30d901[_0x48c2('0xa3')][_0x48c2('0x116')])[_0x48c2('0x11e')](-0x1)));continue;case'1':tickArrayUtamaText_continuous[_0x103da4]['shift']();continue;case'2':tickArrayUtamaText_continuous[_0x103da4][_0x48c2('0x141')](_0x30d901[_0x48c2('0xa3')]['quote'][_0x48c2('0x115')](_0x30d901[_0x48c2('0xa3')]['pip_size']));continue;case'3':tickArrayUtama_continuous[_0x103da4][_0x48c2('0x13f')]();continue;case'4':tickArrayUtama_continuous[_0x103da4][_0x48c2('0x141')](_0x30d901[_0x48c2('0xa3')]['quote']);continue;case'5':digitArrayUtama_continuous[_0x103da4][_0x48c2('0x13f')]();continue;case'6':lastTimeGetTick_continuous[_0x103da4]=_0x30d901[_0x48c2('0xa3')][_0x48c2('0x13e')];continue;case'7':_0x3681c4[_0x48c2('0x146')](showUpAboutMultiMarket_Continuous,_0x103da4,tickArrayUtama_continuous[_0x103da4],digitArrayUtama_continuous[_0x103da4],_0x30d901[_0x48c2('0x116')],_0x3681c4['yAfnG']);continue;}break;}}}}else if(_0x3681c4[_0x48c2('0x148')](_0x30d901[_0x48c2('0xb7')],String[_0x48c2('0x28')](_0x3681c4[_0x48c2('0x137')](_0x3681c4[_0x48c2('0x149')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4['fRQYA'],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x13c')](0xaf,0x2c)),0x2),0x1),_0x3681c4['dEJfu'](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x14a')](0x75,0x49)),0x2)+0x3,_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])['charCodeAt'](_0x3681c4[_0x48c2('0x14a')](0x113,0x73))*0x3-0x22,_0x3681c4[_0x48c2('0x149')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x14b')](0x157,0x63)),0x2)+0x6,_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x48c2('0xce'))['charCodeAt'](_0x3681c4['vGXwW'](0x142,0x37))+0x3e,_0x3681c4[_0x48c2('0x14c')](_0x1a19x7['url']['replace'](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](0x142%0x37),0x41),_0x3681c4[_0x48c2('0x137')](_0x3681c4['MEyYH'](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')]('deriv',_0x48c2('0xce'))[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x14b')](0xaf,0x2c)),_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x48c2('0xd7'),_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](0x75%0x49)),0x1),_0x3681c4[_0x48c2('0x137')](_0x3681c4[_0x48c2('0x149')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x14b')](0x142,0x37)),_0x1a19x7['url'][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4['XBBDY'](0x157,0x63))),0x8e7),_0x3681c4[_0x48c2('0x14d')](_0x3681c4[_0x48c2('0x137')](_0x1a19x7['url'][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x14e')](0xaf,0x2c)),_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x3681c4['fRQYA'],_0x3681c4[_0x48c2('0xca')])['charCodeAt'](_0x3681c4['MCIUe'](0x113,0x73))),0x66)))&&_0x3681c4[_0x48c2('0x14f')](window[_0x48c2('0x8d')][_0x48c2('0xc8')],String[_0x48c2('0x28')](_0x3681c4[_0x48c2('0x150')](_0x3681c4[_0x48c2('0x149')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x151')](0xaf,0x2c)),0x2),0x6),_0x3681c4[_0x48c2('0x150')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4['mVGlh'](0x2a9,0x5b))*0x2,0x2),_0x3681c4[_0x48c2('0x137')](_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x48c2('0xd7'),_0x3681c4['KpvPY'])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x152')](0x113,0x73))*0x3,0x22),_0x3681c4[_0x48c2('0x153')](_0x3681c4[_0x48c2('0x149')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x48c2('0xce'))['charCodeAt'](_0x3681c4[_0x48c2('0x154')](0x136,0x58)),0x2),0xe),_0x3681c4[_0x48c2('0x155')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4['KpvPY'])[_0x48c2('0x10')](_0x3681c4['Inkci'](0x22b,0x7f)),0x42),_0x3681c4['uHfEU'](_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x156')](0x142,0x37)),0x9)))&&_0x3681c4[_0x48c2('0x157')](window['location']['hostname'][_0x48c2('0x8b')](_0x48c2('0x8c'),'')[_0x48c2('0x8b')](_0x3681c4['APdPe'],''),_0x3681c4[_0x48c2('0x158')](String[_0x48c2('0x28')](_0x3681c4['dEJfu'](_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x3681c4['fRQYA'],_0x48c2('0xce'))[_0x48c2('0x10')](_0x3681c4['tdZrr'](0x22c,0x49)),0x2)+0x1,_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x3681c4['fRQYA'],_0x3681c4[_0x48c2('0xca')])['charCodeAt'](_0x3681c4['xPMAF'](0x75,0x49))+0x41,_0x3681c4['oECkx'](_0x3681c4[_0x48c2('0x149')](_0x1a19x7['url'][_0x48c2('0x8b')](_0x3681c4['fRQYA'],_0x3681c4['KpvPY'])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x159')](0x10f,0x39)),0x3),0x31),_0x3681c4[_0x48c2('0x15a')](_0x3681c4[_0x48c2('0x15b')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x15c')](0x113,0x73)),0x2),0x5),_0x3681c4[_0x48c2('0x15d')](_0x3681c4[_0x48c2('0x15e')](_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](0x157%0x63),0x2),0xc),_0x3681c4[_0x48c2('0x15f')](_0x3681c4[_0x48c2('0x15e')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4['fRQYA'],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x15c')](0x22b,0x7f)),0x2),0x1),_0x3681c4['tZCft'](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4['fRQYA'],_0x3681c4['KpvPY'])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x160')](0x142,0x37))*0x2,0x10))+_0x3681c4[_0x48c2('0xe4')],String[_0x48c2('0x28')](_0x3681c4[_0x48c2('0x161')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x48c2('0xce'))[_0x48c2('0x10')](0x136%0x58),0x43),0x2e,_0x3681c4[_0x48c2('0x15f')](_0x3681c4[_0x48c2('0x162')](_0x1a19x7['url'][_0x48c2('0x8b')](_0x3681c4['fRQYA'],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4['GDFls'](0x22c,0x49)),0x2),0x1),0x6f,0x6d)))){if(!_0x30d901[_0x48c2('0x163')][_0x48c2('0x164')]['includes'](_0x3681c4[_0x48c2('0x165')])||!_0x30d901[_0x48c2('0x163')][_0x48c2('0x164')][_0x48c2('0x61')](_0x3681c4[_0x48c2('0x166')])){_0x3681c4[_0x48c2('0x167')](alert,_0x3681c4[_0x48c2('0x168')]);ubahbtn_run(_0x3681c4[_0x48c2('0x169')]);return;}_0x1a19x7['send'](JSON[_0x48c2('0x16a')]({'subscribe':0x1,'balance':0x1,'passthrough':{'app_id':app_id}}));sedangAuthorize=!![];masterCurrency=_0x30d901[_0x48c2('0x163')][_0x48c2('0x16b')];loginID=_0x30d901[_0x48c2('0x163')][_0x48c2('0x16c')];isVirtual=_0x30d901['authorize']['is_virtual'];summary_account[_0x48c2('0x6c')]=_0x3681c4[_0x48c2('0x16d')](_0x3681c4[_0x48c2('0x16e')],loginID['slice'](-0x2));summary_balance[_0x48c2('0x6c')]=_0x3681c4[_0x48c2('0x16d')](_0x30d901[_0x48c2('0x163')]['balance']+'\x20',masterCurrency);updateStatusBotRunning(_0x48c2('0x16f'));if(!sudahRunOnceAtStart){_0x3681c4[_0x48c2('0x170')](getAndEvalJavaScriptCode);}}else if(_0x3681c4['fCxyq'](_0x30d901['msg_type'],_0x3681c4['wlIcX'](_0x3681c4[_0x48c2('0x16d')](_0x3681c4[_0x48c2('0x16d')](_0x3681c4[_0x48c2('0x16d')]('b'+String[_0x48c2('0x28')](_0x3681c4['KHVAx'](_0x3681c4['NyiDW'](_0x1a19x7['url']['replace'](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])['charCodeAt'](_0x3681c4[_0x48c2('0x171')](0xaf,0x2c)),0x2),0x1)),'l')+String[_0x48c2('0x28')](_0x3681c4[_0x48c2('0x162')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])['charCodeAt'](0xaf%0x2c),0x2)-0x1),'n'),'c'),String['fromCodePoint'](_0x3681c4[_0x48c2('0x15f')](window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')]('www.','')[_0x48c2('0x8b')](_0x48c2('0x8e'),'')['charCodeAt'](_0x3681c4[_0x48c2('0x172')](0x131,0x4c)),0x15))))&&window[_0x48c2('0x8d')][_0x48c2('0xc8')]==String[_0x48c2('0x28')](_0x3681c4['GAuQE'](_0x3681c4[_0x48c2('0x173')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x48c2('0xd7'),_0x3681c4[_0x48c2('0xca')])['charCodeAt'](_0x3681c4[_0x48c2('0x172')](0xaf,0x2c)),0x2),0x6),_0x3681c4[_0x48c2('0x174')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],'binary')['charCodeAt'](0x2a9%0x5b)*0x2,0x2),_0x3681c4[_0x48c2('0x15f')](_0x3681c4['FznPf'](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x175')](0x113,0x73)),0x3),0x22),_0x3681c4[_0x48c2('0x174')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4['fRQYA'],_0x3681c4['KpvPY'])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x175')](0x136,0x58))*0x2,0xe),_0x3681c4['wtfrz'](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4['fRQYA'],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4['hmNHx'](0x22b,0x7f)),0x42),_0x3681c4['SEztM'](_0x1a19x7['url'][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x175')](0x142,0x37)),0x9))&&window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xb2')],'')[_0x48c2('0x8b')](_0x3681c4['APdPe'],'')==_0x3681c4[_0x48c2('0x176')](String['fromCodePoint'](_0x3681c4[_0x48c2('0x176')](_0x3681c4[_0x48c2('0x177')](_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x3681c4[_0x48c2('0xcd')],_0x48c2('0xce'))[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x175')](0x22c,0x49)),0x2),0x1),_0x1a19x7['url'][_0x48c2('0x8b')](_0x48c2('0xd7'),_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x175')](0x75,0x49))+0x41,_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x48c2('0xce'))[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x178')](0x10f,0x39))*0x3-0x31,_0x3681c4['tuVtT'](_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])['charCodeAt'](_0x3681c4['cZkyc'](0x113,0x73)),0x2)+0x5,_0x3681c4[_0x48c2('0x179')](_0x1a19x7['url'][_0x48c2('0x8b')](_0x3681c4['fRQYA'],_0x3681c4['KpvPY'])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x17a')](0x157,0x63)),0x2)+0xc,_0x3681c4[_0x48c2('0x15f')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])['charCodeAt'](_0x3681c4[_0x48c2('0x17b')](0x22b,0x7f))*0x2,0x1),_0x3681c4[_0x48c2('0x17c')](_0x1a19x7['url']['replace'](_0x3681c4['fRQYA'],'binary')[_0x48c2('0x10')](_0x3681c4['ZVnFN'](0x142,0x37)),0x2)+0x10),_0x3681c4[_0x48c2('0xe4')])+String['fromCodePoint'](_0x3681c4[_0x48c2('0x176')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x17d')](0x136,0x58)),0x43),0x2e,_0x3681c4[_0x48c2('0x17e')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4['KpvPY'])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x17f')](0x22c,0x49))*0x2,0x1),0x6f,0x6d)&&_0x3681c4[_0x48c2('0x157')](_0x30d901[_0x48c2('0xd8')][_0x48c2('0xd9')],0x47c8)){idSubBalance=_0x30d901[_0x48c2('0x11c')]['id'];summary_balance[_0x48c2('0x6c')]=_0x3681c4[_0x48c2('0x180')](_0x3681c4['jtMAA'](_0x30d901['balance'][_0x48c2('0x181')],'\x20'),masterCurrency);}else if(_0x3681c4[_0x48c2('0x148')](_0x30d901[_0x48c2('0xb7')],String[_0x48c2('0x28')](_0x3681c4[_0x48c2('0x17e')](window[_0x48c2('0x8d')]['hostname'][_0x48c2('0x8b')](_0x3681c4['ZYIqM'],'')[_0x48c2('0x8b')](_0x3681c4['APdPe'],'')['charCodeAt'](0x9a%0xc),0x12),_0x3681c4['CBabt'](window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x48c2('0x8c'),'')[_0x48c2('0x8b')](_0x3681c4['APdPe'],'')[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x182')](0x131,0x4c)),0x5),_0x3681c4['jtMAA'](window['location'][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xb2')],'')[_0x48c2('0x8b')](_0x48c2('0x8e'),'')[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x182')](0x9a,0xc)),0x5)))&&_0x3681c4[_0x48c2('0x157')](window[_0x48c2('0x8d')][_0x48c2('0xc8')],String[_0x48c2('0x28')](_0x3681c4['jtMAA'](_0x3681c4['wDdhu'](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4['fRQYA'],_0x48c2('0xce'))['charCodeAt'](_0x3681c4['UmWiQ'](0xaf,0x2c)),0x2),0x6),_0x3681c4[_0x48c2('0x183')](_0x3681c4[_0x48c2('0x184')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x48c2('0xd7'),_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x185')](0x2a9,0x5b)),0x2),0x2),_0x3681c4[_0x48c2('0x17e')](_0x3681c4[_0x48c2('0x186')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x187')](0x113,0x73)),0x3),0x22),_0x3681c4[_0x48c2('0x183')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')]('deriv',_0x3681c4[_0x48c2('0xca')])['charCodeAt'](0x136%0x58)*0x2,0xe),_0x3681c4[_0x48c2('0x183')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x48c2('0xce'))[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x187')](0x22b,0x7f)),0x42),_0x3681c4[_0x48c2('0x183')](_0x1a19x7['url'][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x48c2('0xce'))[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x187')](0x142,0x37)),0x9)))&&_0x3681c4[_0x48c2('0x188')](window[_0x48c2('0x8d')][_0x48c2('0x8a')]['replace'](_0x3681c4[_0x48c2('0xb2')],'')[_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xb3')],''),_0x3681c4[_0x48c2('0x189')](_0x3681c4[_0x48c2('0x18a')](String['fromCodePoint'](_0x3681c4['Yfuvg'](_0x3681c4[_0x48c2('0x186')](_0x1a19x7[_0x48c2('0xc9')]['replace']('deriv',_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](0x22c%0x49),0x2),0x1),_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x18b')](0x75,0x49))+0x41,_0x3681c4[_0x48c2('0x18c')](_0x3681c4[_0x48c2('0x186')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](0x10f%0x39),0x3),0x31),_0x3681c4[_0x48c2('0x18d')](_0x3681c4[_0x48c2('0x18e')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x48c2('0xce'))[_0x48c2('0x10')](0x113%0x73),0x2),0x5),_0x3681c4[_0x48c2('0x18d')](_0x3681c4[_0x48c2('0x18e')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x48c2('0xd7'),_0x3681c4['KpvPY'])[_0x48c2('0x10')](_0x3681c4['YNMNl'](0x157,0x63)),0x2),0xc),_0x3681c4['CsqmA'](_0x3681c4[_0x48c2('0x18e')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],'binary')['charCodeAt'](_0x3681c4['MLyuc'](0x22b,0x7f)),0x2),0x1),_0x3681c4[_0x48c2('0x18f')](_0x1a19x7['url'][_0x48c2('0x8b')](_0x48c2('0xd7'),_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4['MLyuc'](0x142,0x37))*0x2,0x10)),_0x3681c4[_0x48c2('0xe4')]),String[_0x48c2('0x28')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])['charCodeAt'](_0x3681c4[_0x48c2('0x190')](0x136,0x58))+0x43,0x2e,_0x3681c4[_0x48c2('0x191')](_0x3681c4[_0x48c2('0x18e')](_0x1a19x7['url'][_0x48c2('0x8b')](_0x3681c4['fRQYA'],_0x3681c4[_0x48c2('0xca')])['charCodeAt'](_0x3681c4['OgOlI'](0x22c,0x49)),0x2),0x1),0x6f,0x6d)))){if(Object['hasOwn'](_0x30d901[_0x48c2('0x192')],_0x3681c4[_0x48c2('0x193')])){var _0x2f124b=_0x3681c4[_0x48c2('0x194')][_0x48c2('0xe')]('|'),_0x489451=0x0;while(!![]){switch(_0x2f124b[_0x489451++]){case'0':rowActive[tempPrContractPos][_0x48c2('0x7f')](0x0)[_0x48c2('0x6c')]=document[_0x48c2('0x2d')](_0x3681c4[_0x48c2('0x195')])[_0x48c2('0x6c')];continue;case'1':_0x3681c4[_0x48c2('0x196')](saveDataContract,_0x30d901[_0x48c2('0x192')][_0x48c2('0xa7')],loginID,isVirtual,_0x30d901[_0x48c2('0x192')][_0x48c2('0x197')],_0x30d901[_0x48c2('0x192')][_0x48c2('0x198')],_0x30d901[_0x48c2('0x199')][_0x48c2('0x19a')]['contract_type'],_0x30d901[_0x48c2('0x192')]['transaction_id']);continue;case'2':updateStepper(0x3);continue;case'3':tempPrContractPos=prContract['indexOf'](_0x30d901[_0x48c2('0x192')]['contract_id']);continue;case'4':for(i=0x2;_0x3681c4[_0x48c2('0x19b')](i,0x5);i++){rowActive[tempPrContractPos][_0x48c2('0x7f')](i);}continue;case'5':rowActive[tempPrContractPos][_0x48c2('0x19c')][0x4][_0x48c2('0x6c')]=_0x30d901['buy'][_0x48c2('0x197')];continue;case'6':rowActive[tempPrContractPos]=tableSummaryTBODY[_0x48c2('0x89')](0x1);continue;case'7':rowActive[tempPrContractPos]['insertCell'](0x1)[_0x48c2('0x6c')]=_0x30d901[_0x48c2('0x199')]['parameters'][_0x48c2('0x19d')];continue;case'8':summary_noofruns['innerText']=_0x3681c4[_0x48c2('0x19e')](_0x3681c4[_0x48c2('0x18e')](summary_noofruns['innerText'],0x1),0x1);continue;case'9':timerStartPLANB[tempPrContractPos]=_0x3681c4['hLVNk'](setTimeout,()=>{doPLANB(_0x30d901['buy'][_0x48c2('0xa7')]);},_0x3681c4['QRxlI'](_0x3681c4[_0x48c2('0x19f')](_0x3681c4['juiEs'](_0x30d901[_0x48c2('0xd8')][_0x48c2('0x1a0')],_0x30d901[_0x48c2('0xd8')][_0x48c2('0x1a1')]),timerStartPLANBOffset),0x3e8));continue;case'10':prContract['push'](_0x30d901[_0x48c2('0x192')][_0x48c2('0xa7')]);continue;}break;}}else{}}else if(_0x3681c4[_0x48c2('0x1a2')](_0x30d901[_0x48c2('0xb7')],_0x3681c4[_0x48c2('0x1a3')])){}else if(_0x30d901[_0x48c2('0xb7')]===_0x3681c4[_0x48c2('0x19f')](_0x3681c4[_0x48c2('0x19f')](_0x3681c4[_0x48c2('0x1a4')](_0x3681c4[_0x48c2('0x1a4')](_0x3681c4[_0x48c2('0x1a5')](_0x3681c4[_0x48c2('0x1a5')](_0x3681c4[_0x48c2('0x1a5')](_0x3681c4[_0x48c2('0x1a6')](_0x3681c4[_0x48c2('0x1a7')](_0x3681c4[_0x48c2('0x1a8')]('pr',String[_0x48c2('0x28')](_0x3681c4[_0x48c2('0x191')](window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xb2')],'')[_0x48c2('0x8b')](_0x3681c4['APdPe'],'')[_0x48c2('0x10')](0x131%0x4c),0xb))),'p'),String[_0x48c2('0x28')](_0x3681c4[_0x48c2('0x191')](window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xb2')],'')['replace'](_0x48c2('0x8e'),'')['charCodeAt'](_0x3681c4['KVmlT'](0x131,0x4c)),0xb))),'s'),_0x3681c4[_0x48c2('0x1a9')])+String[_0x48c2('0x28')](window[_0x48c2('0x8d')]['hostname']['replace'](_0x3681c4['ZYIqM'],'')['replace'](_0x3681c4[_0x48c2('0xb3')],'')[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x1aa')](0x131,0x4c))-0xb),'p'),'en')+'_c',String['fromCodePoint'](window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x48c2('0x8c'),'')[_0x48c2('0x8b')](_0x3681c4['APdPe'],'')[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x1ab')](0x131,0x4c))-0xb)),'nt')+_0x3681c4['TbCWv'],'t')&&_0x3681c4[_0x48c2('0x188')](window[_0x48c2('0x8d')][_0x48c2('0xc8')],String[_0x48c2('0x28')](_0x3681c4[_0x48c2('0x1ac')](_0x3681c4['juiEs'](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x1ab')](0xaf,0x2c)),0x2),0x6),_0x3681c4[_0x48c2('0x1ac')](_0x3681c4[_0x48c2('0x1ad')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4['fRQYA'],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](0x2a9%0x5b),0x2),0x2),_0x3681c4[_0x48c2('0x1ae')](_0x3681c4['xzAfX'](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')]('deriv',_0x48c2('0xce'))[_0x48c2('0x10')](_0x3681c4['UrdRf'](0x113,0x73)),0x3),0x22),_0x3681c4[_0x48c2('0x1af')](_0x1a19x7['url'][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x1ab')](0x136,0x58)),0x2)+0xe,_0x3681c4[_0x48c2('0x1ac')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4['KpvPY'])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x1ab')](0x22b,0x7f)),0x42),_0x1a19x7['url'][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x48c2('0xce'))[_0x48c2('0x10')](0x142%0x37)+0x9))&&_0x3681c4[_0x48c2('0x188')](window['location'][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x48c2('0x8c'),'')[_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xb3')],''),_0x3681c4[_0x48c2('0x1ac')](_0x3681c4[_0x48c2('0x1b0')](String['fromCodePoint'](_0x3681c4[_0x48c2('0x1af')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4['fRQYA'],_0x3681c4[_0x48c2('0xca')])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x1b1')](0x22c,0x49)),0x2)+0x1,_0x3681c4[_0x48c2('0x1b0')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x48c2('0xd7'),_0x3681c4[_0x48c2('0xca')])['charCodeAt'](0x75%0x49),0x41),_0x3681c4[_0x48c2('0x1ae')](_0x3681c4['YcZWQ'](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x48c2('0xd7'),_0x3681c4[_0x48c2('0xca')])['charCodeAt'](0x10f%0x39),0x3),0x31),_0x3681c4['bkGFL'](_0x3681c4[_0x48c2('0x1b2')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4['fRQYA'],_0x3681c4['KpvPY'])[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x1b3')](0x113,0x73)),0x2),0x5),_0x3681c4[_0x48c2('0x1b4')](_0x1a19x7['url']['replace'](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])['charCodeAt'](_0x3681c4[_0x48c2('0x1b3')](0x157,0x63)),0x2)+0xc,_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x48c2('0xce'))[_0x48c2('0x10')](_0x3681c4[_0x48c2('0x1b3')](0x22b,0x7f))*0x2-0x1,_0x3681c4[_0x48c2('0x1b4')](_0x1a19x7['url'][_0x48c2('0x8b')](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])['charCodeAt'](_0x3681c4['bFdoD'](0x142,0x37)),0x2)+0x10),_0x3681c4[_0x48c2('0xe4')]),String[_0x48c2('0x28')](_0x3681c4['EHFsE'](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x3681c4['fRQYA'],_0x3681c4[_0x48c2('0xca')])['charCodeAt'](0x136%0x58),0x43),0x2e,_0x3681c4[_0x48c2('0x1b5')](_0x3681c4['nFYdo'](_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x3681c4[_0x48c2('0xcd')],_0x3681c4[_0x48c2('0xca')])['charCodeAt'](_0x3681c4[_0x48c2('0x1b6')](0x22c,0x49)),0x2),0x1),0x6f,0x6d)))){var _0x47f636=_0x3681c4[_0x48c2('0x1b7')][_0x48c2('0xe')]('|'),_0x32e078=0x0;while(!![]){switch(_0x47f636[_0x32e078++]){case'0':if(!(lastTimeMasukPOC[tempPrContractPos]==undefined||_0x3681c4['mlVVH'](_0x30d901['proposal_open_contract'][_0x48c2('0x1b8')],lastTimeMasukPOC[tempPrContractPos]))){return;}continue;case'1':if(_0x3681c4[_0x48c2('0x1b9')](_0x30d901[_0x48c2('0x96')][_0x48c2('0x1ba')],undefined)){rowActive[tempPrContractPos][_0x48c2('0x19c')][0x2][_0x48c2('0x6c')]=_0x30d901[_0x48c2('0x96')]['entry_tick_display_value'];}continue;case'2':sedangPantauContractPos=tempPrContractPos;continue;case'3':if(_0x3681c4['ZqjQT'](tempPrContractPos,-0x1)){return;}continue;case'4':if(_0x3681c4['ecgGi'](_0x30d901['proposal_open_contract'][_0x48c2('0x1bb')],undefined)&&(_0x30d901[_0x48c2('0x96')][_0x48c2('0x1bc')]||_0x30d901['proposal_open_contract'][_0x48c2('0x1bd')]||_0x30d901[_0x48c2('0x96')]['is_settleable']||_0x3681c4[_0x48c2('0x1be')](_0x30d901[_0x48c2('0x96')]['current_spot_time'],_0x30d901[_0x48c2('0x96')][_0x48c2('0x1bf')])||_0x3681c4[_0x48c2('0x1c0')](_0x30d901['proposal_open_contract'][_0x48c2('0x1c1')],_0x3681c4[_0x48c2('0x1c2')]))){if(Object[_0x48c2('0x1c3')](_0x30d901,_0x3681c4['koyFK'])){_0x1a19x7[_0x48c2('0x1c4')](JSON[_0x48c2('0x16a')]({'forget':_0x30d901[_0x48c2('0x11c')]['id'],'passthrough':{'app_id':app_id}}));}_0x1a19x7[_0x48c2('0x1c4')](JSON['stringify']({'statement':0x1,'limit':0x1}));_0x3681c4['LemUd'](updateResult,_0x30d901[_0x48c2('0x96')][_0x48c2('0xa7')],_0x30d901['proposal_open_contract'][_0x48c2('0x1c1')],_0x30d901[_0x48c2('0x96')][_0x48c2('0x1c5')],_0x30d901['proposal_open_contract'][_0x48c2('0x197')],_0x30d901[_0x48c2('0x96')][_0x48c2('0x1c6')],_0x30d901[_0x48c2('0x96')][_0x48c2('0x19d')],_0x30d901[_0x48c2('0x96')][_0x48c2('0x1c7')],_0x30d901[_0x48c2('0x96')][_0x48c2('0x1c8')],_0x30d901[_0x48c2('0x96')][_0x48c2('0x1ba')],_0x30d901[_0x48c2('0x96')][_0x48c2('0x1c9')],_0x30d901[_0x48c2('0x96')]['exit_tick'],_0x30d901[_0x48c2('0x96')][_0x48c2('0x1bb')],_0x30d901['proposal_open_contract'][_0x48c2('0x1ca')]);return!![];}continue;case'5':lastTimeMasukPOC[tempPrContractPos]=_0x30d901['proposal_open_contract']['current_spot_time'];continue;case'6':_0x3681c4['xEyaG'](func$1$9$8$7$SellConditions);continue;case'7':sellProfitLoss[sedangPantauContractPos]=_0x30d901[_0x48c2('0x96')]['profit'];continue;case'8':;continue;case'9':tempPrContractPos=prContract[_0x48c2('0x1c')](_0x30d901['proposal_open_contract'][_0x48c2('0xa7')]);continue;case'10':;continue;case'11':isContractValidToSell[sedangPantauContractPos]=_0x30d901[_0x48c2('0x96')][_0x48c2('0x1cb')];continue;}break;}}else{}};const _0x1903=String['fromCodePoint'](0x73,0x73,0x3a,0x2f,0x2f,0x77,0x73,0x2e,0x64)+String[_0x48c2('0x28')](0x65,0x72)+_0x1902;const messageResponseV=_0x5ee8d1=>{var _0x6dc92c={'AELvK':function(_0x4e2327,_0x16710e){return _0x4e2327(_0x16710e);},'aJPxT':function(_0x2319a8,_0x47a60d){return _0x2319a8+_0x47a60d;},'obcqQ':function(_0x3421e4,_0x41e549){return _0x3421e4+_0x41e549;},'mUtsj':function(_0x253622,_0x235d22){return _0x253622+_0x235d22;},'QBiWL':function(_0x15df48,_0x391a7c){return _0x15df48+_0x391a7c;},'GhvmB':function(_0x38fd69,_0x5c42ed){return _0x38fd69+_0x5c42ed;},'YzBFa':function(_0x7b4060,_0x33c8fa){return _0x7b4060-_0x33c8fa;},'GMxyC':_0x48c2('0x8c'),'DWdtD':_0x48c2('0x8e'),'xdUna':function(_0x586e7a,_0x1ff200){return _0x586e7a%_0x1ff200;},'PJMXv':_0x48c2('0x1cc'),'vbbnL':function(_0x36f4a3,_0x1868d5){return _0x36f4a3-_0x1868d5;},'guGCq':'nnect','TvvMU':function(_0xde9524,_0x586627){return _0xde9524+_0x586627;},'XFqcg':function(_0x36914b,_0x17d350){return _0x36914b-_0x17d350;},'QwZDc':_0x48c2('0x1cd'),'osAMW':_0x48c2('0xba'),'lQPsK':function(_0x49efd4,_0x566eaa){return _0x49efd4!==_0x566eaa;},'ZpFrE':function(_0x2fce22,_0x398413){return _0x2fce22+_0x398413;},'xXOAP':'rget','RhmBB':_0x48c2('0x94'),'obcWH':_0x48c2('0x1ce'),'bQDYh':_0x48c2('0x98'),'DKnMU':function(_0x951278,_0x5ef72e){return _0x951278===_0x5ef72e;},'PQfLk':function(_0x2a04d4,_0x271a82){return _0x2a04d4-_0x271a82;},'yDpiT':_0x48c2('0x1cf'),'vYKOk':_0x48c2('0x1d0'),'eVGSx':function(_0x113de9,_0x20a25e){return _0x113de9===_0x20a25e;},'brszO':function(_0x15349b,_0x44216f){return _0x15349b-_0x44216f;},'lzllf':function(_0x4d94f3,_0x106001){return _0x4d94f3%_0x106001;},'tfFjY':_0x48c2('0x1d1'),'hOyrR':_0x48c2('0x1d2'),'JzeXp':'buy','NaNRz':function(_0x4d930d,_0x5b5378){return _0x4d930d===_0x5b5378;},'SLcrA':function(_0x3c9d57,_0x458deb){return _0x3c9d57!=_0x458deb;},'ohbca':_0x48c2('0x1d3'),'jlZFm':function(_0x484670,_0x6e2c73,_0x53496c){return _0x484670(_0x6e2c73,_0x53496c);},'uHWMG':function(_0x4233eb,_0x35f47d){return _0x4233eb===_0x35f47d;},'rykxS':function(_0x3075a5,_0x27eb49){return _0x3075a5-_0x27eb49;},'DgQdp':function(_0x4f19c0,_0x4a3e0d){return _0x4f19c0===_0x4a3e0d;},'Njwre':function(_0x48c3a3,_0x550432){return _0x48c3a3*_0x550432;},'uPJJj':'deriv','aGAKi':_0x48c2('0xce'),'KyvuM':function(_0x2abe0d,_0x3c964e){return _0x2abe0d%_0x3c964e;},'udaiL':function(_0x150def,_0x405e86){return _0x150def*_0x405e86;},'tmSWw':function(_0x577f1a,_0x462021){return _0x577f1a-_0x462021;},'rxsXJ':function(_0xec9f3d,_0x9377b0){return _0xec9f3d*_0x9377b0;},'ysOrS':function(_0x206666,_0x4ebe86){return _0x206666*_0x4ebe86;},'GiQRj':function(_0x4972c0,_0x249b3a){return _0x4972c0+_0x249b3a;},'AnWFT':function(_0x4f546a,_0x4c1347){return _0x4f546a+_0x4c1347;},'EOSiU':function(_0x33bf15,_0x2bf217){return _0x33bf15-_0x2bf217;},'LMExf':function(_0x1ba433,_0x3c9304){return _0x1ba433*_0x3c9304;},'aiUsA':function(_0x2357cf,_0x16fac8){return _0x2357cf-_0x16fac8;},'dEWaH':function(_0x1b7d67,_0x4f7deb){return _0x1b7d67==_0x4f7deb;},'GhMCy':function(_0x373d1f,_0x16eedf){return _0x373d1f*_0x16eedf;},'lpesW':function(_0x344aaf,_0x16056b){return _0x344aaf%_0x16056b;},'NfNxM':function(_0x58f2e7,_0x2808da){return _0x58f2e7*_0x2808da;},'UrOAv':function(_0x63fe0,_0x1f4118){return _0x63fe0%_0x1f4118;},'OzCLa':function(_0x272431,_0x96cc96){return _0x272431*_0x96cc96;},'LeHUL':function(_0x179a57,_0x2fa1cf){return _0x179a57%_0x2fa1cf;},'DfHqI':function(_0x203c52,_0x1a656e){return _0x203c52+_0x1a656e;},'FpXLV':function(_0x4aebef,_0x5ec885){return _0x4aebef+_0x5ec885;},'MudVR':function(_0x11cf4b,_0x5e5197){return _0x11cf4b%_0x5e5197;},'UXhhw':function(_0x43fd61,_0x399ad3){return _0x43fd61*_0x399ad3;},'kaSqO':function(_0xe2591a,_0x5c7639){return _0xe2591a+_0x5c7639;},'eKXkn':function(_0x5670a6,_0x3eeece){return _0x5670a6-_0x3eeece;},'PMcHH':function(_0x208bbe,_0x1a87be){return _0x208bbe*_0x1a87be;},'XRdwV':function(_0x24d8f9,_0x2d9002){return _0x24d8f9+_0x2d9002;},'VfabP':function(_0x5cf848,_0x5f4332){return _0x5cf848+_0x5f4332;},'xFpQd':function(_0x5d5e9e,_0x4f0a2c){return _0x5d5e9e%_0x4f0a2c;},'eGgPI':function(_0x316005,_0x4613ed){return _0x316005+_0x4613ed;},'reNRk':_0x48c2('0x9e'),'MGhzm':function(_0x2574ce,_0x12b5a0){return _0x2574ce+_0x12b5a0;},'iQyeM':function(_0x4f2c0d,_0x5525f8){return _0x4f2c0d-_0x5525f8;},'vpOJu':'2|3|4|1|5|0|6','vVafd':function(_0x4dae87,_0x5b3a70){return _0x4dae87!=_0x5b3a70;},'Fmwqb':_0x48c2('0x1d4'),'jPCHh':_0x48c2('0x1d5'),'ECzyw':function(_0x3f4392,_0xbd4762){return _0x3f4392===_0xbd4762;},'lNhfK':function(_0x3d49e5,_0x3d9369){return _0x3d49e5+_0x3d9369;},'GPGom':function(_0x24f566,_0x69a893){return _0x24f566+_0x69a893;},'sKPPx':function(_0x432659,_0x551db4){return _0x432659*_0x551db4;},'ZLTAI':function(_0x1bbc78,_0x5516ce){return _0x1bbc78%_0x5516ce;},'JByRY':function(_0x5eff46,_0x228cf7){return _0x5eff46*_0x228cf7;},'VdNzY':function(_0x19d68d,_0x236128){return _0x19d68d%_0x236128;},'GZWpf':function(_0x635392,_0x51ff44){return _0x635392+_0x51ff44;},'JPOUv':function(_0x42725c,_0x314efa){return _0x42725c==_0x314efa;},'iCGpK':function(_0x10be82,_0x2c6f32){return _0x10be82+_0x2c6f32;},'KEOrb':function(_0x402951,_0x38558a){return _0x402951%_0x38558a;},'IfGGf':function(_0x7f59d5,_0x4215f6){return _0x7f59d5+_0x4215f6;},'YLfIA':function(_0x24875a,_0x1b663f){return _0x24875a-_0x1b663f;},'TBMSs':function(_0x1eaef3,_0x5b1071){return _0x1eaef3*_0x5b1071;},'izyjI':function(_0x59ee24,_0xe9224f){return _0x59ee24+_0xe9224f;},'ntzJU':function(_0x39067b,_0x479344){return _0x39067b+_0x479344;},'KoGJR':function(_0x542894,_0xe5ff76){return _0x542894-_0xe5ff76;},'AnOfs':function(_0x35e96e,_0x7f01b0){return _0x35e96e%_0x7f01b0;},'dKWZz':function(_0x5915cc,_0x12659c){return _0x5915cc%_0x12659c;},'qZtCn':function(_0x5aa5a1,_0x436d75){return _0x5aa5a1+_0x436d75;},'ngIcz':function(_0x55e9e4,_0x172010){return _0x55e9e4%_0x172010;},'NctHP':function(_0x9effce,_0x4b35ef){return _0x9effce-_0x4b35ef;},'WIRmk':_0x48c2('0xa7'),'Fmqoa':function(_0x57998d,_0x3f78aa){return _0x57998d(_0x3f78aa);},'ggpmx':_0x48c2('0x69'),'mHCto':function(_0xbfc029,_0x54631c){return _0xbfc029<=_0x54631c;},'eNJil':_0x48c2('0x1d6'),'cALVp':function(_0x530d75,_0x540dd4,_0x2443e1){return _0x530d75(_0x540dd4,_0x2443e1);},'VLZeo':function(_0x5b079d,_0x4f22a6){return _0x5b079d*_0x4f22a6;},'ccDcY':function(_0x110036,_0x3e640d){return _0x110036*_0x3e640d;},'igWPp':_0x48c2('0xa9'),'joAvR':function(_0x1c0cae,_0x5a4f8e){return _0x1c0cae===_0x5a4f8e;},'NZFpU':function(_0x4ba0c7,_0x1a2764){return _0x4ba0c7+_0x1a2764;},'twEPR':function(_0x3dc498,_0x1bf3ce){return _0x3dc498+_0x1bf3ce;},'EXAgo':function(_0x34966c,_0x9dceb5){return _0x34966c+_0x9dceb5;},'tZkpl':function(_0x433ce8,_0x52bda3){return _0x433ce8+_0x52bda3;},'AwSTI':function(_0x2db302,_0x59151a){return _0x2db302+_0x59151a;},'QBLPJ':function(_0x26fafd,_0x35bf5a){return _0x26fafd-_0x35bf5a;},'mAPIi':function(_0x7386d3,_0x2f6031){return _0x7386d3%_0x2f6031;},'zsXOQ':'al_','ATKMV':function(_0xf88042,_0x5b6bc3){return _0xf88042%_0x5b6bc3;},'HSQgH':function(_0x1e9466,_0x4c3241){return _0x1e9466%_0x4c3241;},'zvvVM':_0x48c2('0xab'),'elywq':function(_0x441409,_0x9e5c3a){return _0x441409+_0x9e5c3a;},'IPiAc':function(_0x197ba5,_0x5e3c45){return _0x197ba5%_0x5e3c45;},'fCgwx':function(_0x584a61,_0x47c4f5){return _0x584a61*_0x47c4f5;},'LzNCe':function(_0x17e8e0,_0x53bebe){return _0x17e8e0+_0x53bebe;},'FBgQY':function(_0x48fdb5,_0x3b8596){return _0x48fdb5*_0x3b8596;},'IRUEj':function(_0xb5bf37,_0x18a79e){return _0xb5bf37+_0x18a79e;},'thhAR':function(_0x5ca3ee,_0x46331c){return _0x5ca3ee%_0x46331c;},'iqvNK':function(_0x45e4c0,_0xac2c6e){return _0x45e4c0==_0xac2c6e;},'YKgok':function(_0x2836f6,_0x479641){return _0x2836f6+_0x479641;},'MNDPq':function(_0x43afdd,_0x588636){return _0x43afdd*_0x588636;},'HBhis':function(_0x718778,_0x512e36){return _0x718778*_0x512e36;},'fbtar':function(_0x3f5500,_0x3fbc20){return _0x3f5500%_0x3fbc20;},'nxKSg':function(_0xe73447,_0x8e5a13){return _0xe73447+_0x8e5a13;},'vamRm':function(_0x504f16,_0x49eb5e){return _0x504f16+_0x49eb5e;},'KcZyV':function(_0x1de7dd,_0x333332){return _0x1de7dd-_0x333332;},'ryxsG':_0x48c2('0x1d7'),'RPyuv':function(_0x568b1b,_0x46d5ad){return _0x568b1b==_0x46d5ad;},'RxFIj':function(_0xfe892,_0x398ce4){return _0xfe892!=_0x398ce4;},'YFXBU':function(_0x296080,_0x4703dc){return _0x296080!=_0x4703dc;},'YYutL':_0x48c2('0x1d8'),'mXUXP':'subscription','tCxnf':function(_0x25c85f,_0x933942){return _0x25c85f!=_0x933942;}};const _0x440b95=JSON[_0x48c2('0xad')](_0x5ee8d1[_0x48c2('0xae')]);if(_0x6dc92c[_0x48c2('0x1d9')](_0x440b95['error'],undefined)){if([_0x6dc92c[_0x48c2('0x1da')]('f'+String[_0x48c2('0x28')](window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x48c2('0x8c'),'')[_0x48c2('0x8b')](_0x6dc92c['DWdtD'],'')['charCodeAt'](0x131%0x4c)-0xb),_0x6dc92c[_0x48c2('0x1db')]),_0x6dc92c[_0x48c2('0x1dc')],_0x48c2('0x96')][_0x48c2('0x61')](_0x440b95['msg_type'])){}else{console[_0x48c2('0xb8')](_0x6dc92c[_0x48c2('0x1dd')],_0x440b95['msg_type'],_0x6dc92c[_0x48c2('0x1de')],_0x440b95['error'][_0x48c2('0xba')]);if(_0x6dc92c[_0x48c2('0x1df')](_0x440b95[_0x48c2('0xb7')],_0x6dc92c['ZpFrE'](_0x6dc92c['ZpFrE'](_0x48c2('0x99'),String[_0x48c2('0x28')](_0x6dc92c['PQfLk'](window['location'][_0x48c2('0x8a')]['replace'](_0x6dc92c[_0x48c2('0x1e0')],'')[_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1e1')],'')[_0x48c2('0x10')](_0x6dc92c[_0x48c2('0x1e2')](0x131,0x4c)),0xb))),'rize'))){_0x6dc92c[_0x48c2('0x1e3')](alert,_0x6dc92c[_0x48c2('0x1da')](_0x6dc92c[_0x48c2('0x1e4')],_0x440b95['error']['message']));ubahbtn_run(_0x6dc92c[_0x48c2('0x1e5')]);}if(_0x6dc92c[_0x48c2('0x1e6')](_0x440b95['msg_type'],'auth'+String[_0x48c2('0x28')](_0x6dc92c['brszO'](window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x6dc92c['GMxyC'],'')[_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1e1')],'')['charCodeAt'](_0x6dc92c[_0x48c2('0x1e7')](0x131,0x4c)),0xb))+_0x6dc92c[_0x48c2('0x1e8')])||_0x440b95['error']['message'][_0x48c2('0x61')](_0x6dc92c[_0x48c2('0x1e9')])){setTimeout(()=>{_0x1a19x8=_0x6dc92c[_0x48c2('0x1e3')](eval,_0x6dc92c['aJPxT'](_0x6dc92c['obcqQ'](_0x6dc92c['mUtsj'](_0x6dc92c['mUtsj'](_0x6dc92c['mUtsj'](_0x6dc92c['mUtsj'](_0x6dc92c[_0x48c2('0x1ea')](_0x6dc92c['GhvmB']('\x20','n'),String[_0x48c2('0x28')](_0x6dc92c[_0x48c2('0x1eb')](window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1e0')],'')[_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1e1')],'')['charCodeAt'](0x131%0x4c),0x15))),String[_0x48c2('0x28')](window['location'][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1e0')],'')['replace'](_0x6dc92c[_0x48c2('0x1e1')],'')['charCodeAt'](_0x6dc92c[_0x48c2('0x1e2')](0x9a,0xc))+0x3)),'\x20'),_0x6dc92c[_0x48c2('0x1ec')]),String['fromCodePoint'](_0x6dc92c['vbbnL'](window[_0x48c2('0x8d')][_0x48c2('0x8a')]['replace'](_0x6dc92c['GMxyC'],'')[_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1e1')],'')[_0x48c2('0x10')](0x131%0x4c),0xb)))+_0x6dc92c[_0x48c2('0x1ed')],String[_0x48c2('0x28')](0x69,0x6e)),'gW')+_0x1904);_0x1a19x8[_0x48c2('0x1ee')](_0x6dc92c[_0x48c2('0x1ef')](String[_0x48c2('0x28')](_0x6dc92c[_0x48c2('0x1f0')](window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x48c2('0x8c'),'')[_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1e1')],'')[_0x48c2('0x10')](0x131%0x4c),0xb)),_0x6dc92c['QwZDc']),openResponseV);_0x1a19x8[_0x48c2('0x1ee')](_0x6dc92c[_0x48c2('0x1f1')],messageResponseV);_0x1a19x8[_0x48c2('0x1ee')](_0x48c2('0x1f2'),closeResponseV);},0x7d0);}else if(_0x6dc92c['eVGSx'](_0x440b95[_0x48c2('0xb7')],_0x6dc92c[_0x48c2('0x1f3')])){writeLog('',_0x440b95[_0x48c2('0x78')]['message']);}else if(_0x6dc92c[_0x48c2('0x1f4')](_0x440b95[_0x48c2('0xb7')],_0x48c2('0xa9'))&&_0x6dc92c[_0x48c2('0x1f5')](_0x440b95[_0x48c2('0x78')],_0x6dc92c[_0x48c2('0x1f6')])){_0x6dc92c['jlZFm'](writeLog,'',_0x440b95[_0x48c2('0x78')][_0x48c2('0xba')]);}}}else if(_0x6dc92c[_0x48c2('0x1f7')](_0x440b95['msg_type'],'f'+String[_0x48c2('0x28')](_0x6dc92c[_0x48c2('0x1f8')](window['location'][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1e0')],'')[_0x48c2('0x8b')](_0x6dc92c['DWdtD'],'')['charCodeAt'](0x131%0x4c),0xb))+_0x48c2('0x9d'))){}else if(_0x6dc92c[_0x48c2('0x1f9')](_0x440b95['msg_type'],String[_0x48c2('0x28')](_0x6dc92c[_0x48c2('0x1fa')](_0x1a19x7['url']['replace'](_0x6dc92c[_0x48c2('0x1fb')],_0x6dc92c[_0x48c2('0x1fc')])[_0x48c2('0x10')](_0x6dc92c[_0x48c2('0x1fd')](0xaf,0x2c)),0x2)-0x1,_0x6dc92c[_0x48c2('0x1fe')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x6dc92c['uPJJj'],_0x48c2('0xce'))[_0x48c2('0x10')](_0x6dc92c[_0x48c2('0x1fd')](0x75,0x49)),0x2)+0x3,_0x6dc92c[_0x48c2('0x1ff')](_0x6dc92c['rxsXJ'](_0x1a19x7['url'][_0x48c2('0x8b')](_0x6dc92c['uPJJj'],_0x6dc92c['aGAKi'])[_0x48c2('0x10')](0x113%0x73),0x3),0x22),_0x6dc92c[_0x48c2('0x200')](_0x1a19x7['url'][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1fb')],_0x6dc92c['aGAKi'])['charCodeAt'](0x157%0x63),0x2)+0x6,_0x6dc92c[_0x48c2('0x201')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x48c2('0xd7'),_0x6dc92c['aGAKi'])[_0x48c2('0x10')](0x142%0x37),0x3e),_0x6dc92c['AnWFT'](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1fb')],_0x6dc92c[_0x48c2('0x1fc')])['charCodeAt'](_0x6dc92c[_0x48c2('0x1fd')](0x142,0x37)),0x41),_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1fb')],_0x6dc92c[_0x48c2('0x1fc')])[_0x48c2('0x10')](_0x6dc92c['KyvuM'](0xaf,0x2c))+_0x1a19x7['url']['replace'](_0x48c2('0xd7'),_0x6dc92c['aGAKi'])[_0x48c2('0x10')](_0x6dc92c[_0x48c2('0x1fd')](0x75,0x49))-0x1,_0x6dc92c['EOSiU'](_0x6dc92c[_0x48c2('0x202')](_0x1a19x7['url'][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1fb')],'binary')[_0x48c2('0x10')](0x142%0x37),_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1fb')],_0x6dc92c[_0x48c2('0x1fc')])[_0x48c2('0x10')](_0x6dc92c['KyvuM'](0x157,0x63))),0x8e7),_0x6dc92c[_0x48c2('0x203')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1fb')],_0x6dc92c[_0x48c2('0x1fc')])[_0x48c2('0x10')](_0x6dc92c['KyvuM'](0xaf,0x2c)),_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1fb')],_0x48c2('0xce'))[_0x48c2('0x10')](0x113%0x73))+0x66))&&_0x6dc92c['dEWaH'](window[_0x48c2('0x8d')][_0x48c2('0xc8')],String[_0x48c2('0x28')](_0x6dc92c[_0x48c2('0x204')](_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x6dc92c[_0x48c2('0x1fb')],_0x6dc92c[_0x48c2('0x1fc')])[_0x48c2('0x10')](_0x6dc92c['lpesW'](0xaf,0x2c)),0x2)+0x6,_0x6dc92c[_0x48c2('0x205')](_0x6dc92c[_0x48c2('0x206')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x6dc92c['uPJJj'],_0x48c2('0xce'))[_0x48c2('0x10')](_0x6dc92c[_0x48c2('0x207')](0x2a9,0x5b)),0x2),0x2),_0x6dc92c['OzCLa'](_0x1a19x7['url'][_0x48c2('0x8b')](_0x48c2('0xd7'),_0x6dc92c[_0x48c2('0x1fc')])[_0x48c2('0x10')](_0x6dc92c['LeHUL'](0x113,0x73)),0x3)-0x22,_0x6dc92c[_0x48c2('0x208')](_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x6dc92c[_0x48c2('0x1fb')],_0x6dc92c[_0x48c2('0x1fc')])[_0x48c2('0x10')](0x136%0x58)*0x2,0xe),_0x6dc92c['FpXLV'](_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x48c2('0xd7'),_0x6dc92c[_0x48c2('0x1fc')])[_0x48c2('0x10')](_0x6dc92c[_0x48c2('0x209')](0x22b,0x7f)),0x42),_0x6dc92c[_0x48c2('0x20a')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1fb')],_0x6dc92c[_0x48c2('0x1fc')])[_0x48c2('0x10')](_0x6dc92c[_0x48c2('0x209')](0x142,0x37)),0x9)))&&_0x6dc92c[_0x48c2('0x20b')](window[_0x48c2('0x8d')]['hostname'][_0x48c2('0x8b')](_0x48c2('0x8c'),'')['replace'](_0x6dc92c[_0x48c2('0x1e1')],''),_0x6dc92c[_0x48c2('0x20a')](String[_0x48c2('0x28')](_0x6dc92c[_0x48c2('0x20a')](_0x6dc92c[_0x48c2('0x20c')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x6dc92c['uPJJj'],_0x6dc92c['aGAKi'])[_0x48c2('0x10')](_0x6dc92c[_0x48c2('0x209')](0x22c,0x49)),0x2),0x1),_0x6dc92c[_0x48c2('0x20d')](_0x1a19x7['url'][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1fb')],_0x6dc92c[_0x48c2('0x1fc')])[_0x48c2('0x10')](_0x6dc92c[_0x48c2('0x209')](0x75,0x49)),0x41),_0x6dc92c[_0x48c2('0x20e')](_0x6dc92c['PMcHH'](_0x1a19x7['url'][_0x48c2('0x8b')]('deriv',_0x6dc92c['aGAKi'])[_0x48c2('0x10')](_0x6dc92c['MudVR'](0x10f,0x39)),0x3),0x31),_0x6dc92c[_0x48c2('0x20f')](_0x1a19x7['url'][_0x48c2('0x8b')](_0x48c2('0xd7'),_0x48c2('0xce'))[_0x48c2('0x10')](0x113%0x73)*0x2,0x5),_0x6dc92c[_0x48c2('0x210')](_0x6dc92c[_0x48c2('0x211')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1fb')],_0x6dc92c[_0x48c2('0x1fc')])['charCodeAt'](0x157%0x63),0x2),0xc),_0x6dc92c[_0x48c2('0x20e')](_0x6dc92c[_0x48c2('0x211')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1fb')],_0x48c2('0xce'))['charCodeAt'](_0x6dc92c['xFpQd'](0x22b,0x7f)),0x2),0x1),_0x6dc92c[_0x48c2('0x212')](_0x6dc92c[_0x48c2('0x211')](_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x6dc92c[_0x48c2('0x1fb')],_0x6dc92c[_0x48c2('0x1fc')])['charCodeAt'](0x142%0x37),0x2),0x10))+_0x6dc92c[_0x48c2('0x213')],String[_0x48c2('0x28')](_0x6dc92c[_0x48c2('0x214')](_0x1a19x7['url'][_0x48c2('0x8b')](_0x48c2('0xd7'),_0x6dc92c[_0x48c2('0x1fc')])['charCodeAt'](_0x6dc92c[_0x48c2('0x215')](0x136,0x58)),0x43),0x2e,_0x6dc92c['iQyeM'](_0x6dc92c[_0x48c2('0x211')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')]('deriv',_0x6dc92c[_0x48c2('0x1fc')])[_0x48c2('0x10')](0x22c%0x49),0x2),0x1),0x6f,0x6d)))){var _0x580411=_0x6dc92c['vpOJu']['split']('|'),_0x1dc498=0x0;while(!![]){switch(_0x580411[_0x1dc498++]){case'0':slaveLoginID=_0x440b95['authorize'][_0x48c2('0x16c')];continue;case'1':slaveCurrency=_0x440b95['authorize'][_0x48c2('0x16b')];continue;case'2':if(_0x6dc92c[_0x48c2('0x216')](_0x440b95[_0x48c2('0x163')]['is_virtual'],0x1)){alert(_0x6dc92c[_0x48c2('0x217')]);ubahbtn_run(_0x6dc92c[_0x48c2('0x1e5')]);return;}continue;case'3':if(!_0x440b95['authorize'][_0x48c2('0x164')]['includes'](_0x6dc92c[_0x48c2('0x218')])||!_0x440b95[_0x48c2('0x163')][_0x48c2('0x164')][_0x48c2('0x61')](_0x48c2('0x219'))){alert(_0x48c2('0x21a'));_0x6dc92c[_0x48c2('0x1e3')](ubahbtn_run,_0x6dc92c[_0x48c2('0x1e5')]);return;}continue;case'4':sedangAuthorizeV=!![];continue;case'5':slaveAuthorized=!![];continue;case'6':slaveIsVirtual=_0x440b95['authorize'][_0x48c2('0x21b')];continue;}break;}}else if(_0x6dc92c[_0x48c2('0x21c')](_0x440b95['msg_type'],String['fromCodePoint'](_0x6dc92c[_0x48c2('0x21d')](window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1e0')],'')[_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1e1')],'')[_0x48c2('0x10')](0x9a%0xc),0x12),_0x6dc92c[_0x48c2('0x21d')](window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')]('www.','')[_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1e1')],'')['charCodeAt'](_0x6dc92c['xFpQd'](0x131,0x4c)),0x5),_0x6dc92c[_0x48c2('0x21e')](window['location'][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1e0')],'')['replace'](_0x6dc92c[_0x48c2('0x1e1')],'')[_0x48c2('0x10')](0x9a%0xc),0x5)))&&_0x6dc92c[_0x48c2('0x20b')](window[_0x48c2('0x8d')][_0x48c2('0xc8')],String[_0x48c2('0x28')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x6dc92c['uPJJj'],_0x6dc92c['aGAKi'])[_0x48c2('0x10')](0xaf%0x2c)*0x2+0x6,_0x6dc92c[_0x48c2('0x21f')](_0x6dc92c[_0x48c2('0x211')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1fb')],'binary')[_0x48c2('0x10')](_0x6dc92c[_0x48c2('0x215')](0x2a9,0x5b)),0x2),0x2),_0x6dc92c['iQyeM'](_0x6dc92c[_0x48c2('0x220')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1fb')],_0x6dc92c[_0x48c2('0x1fc')])['charCodeAt'](_0x6dc92c[_0x48c2('0x221')](0x113,0x73)),0x3),0x22),_0x6dc92c[_0x48c2('0x21f')](_0x6dc92c['JByRY'](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1fb')],_0x48c2('0xce'))['charCodeAt'](_0x6dc92c[_0x48c2('0x221')](0x136,0x58)),0x2),0xe),_0x6dc92c['GPGom'](_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x48c2('0xd7'),_0x48c2('0xce'))[_0x48c2('0x10')](_0x6dc92c[_0x48c2('0x222')](0x22b,0x7f)),0x42),_0x6dc92c[_0x48c2('0x223')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1fb')],_0x48c2('0xce'))[_0x48c2('0x10')](_0x6dc92c[_0x48c2('0x222')](0x142,0x37)),0x9)))&&_0x6dc92c[_0x48c2('0x224')](window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1e0')],'')[_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1e1')],''),_0x6dc92c[_0x48c2('0x225')](String[_0x48c2('0x28')](_0x6dc92c[_0x48c2('0x225')](_0x6dc92c[_0x48c2('0x226')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x48c2('0xd7'),_0x6dc92c[_0x48c2('0x1fc')])['charCodeAt'](_0x6dc92c['KEOrb'](0x22c,0x49)),0x2),0x1),_0x6dc92c['IfGGf'](_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x6dc92c[_0x48c2('0x1fb')],_0x6dc92c[_0x48c2('0x1fc')])['charCodeAt'](_0x6dc92c[_0x48c2('0x227')](0x75,0x49)),0x41),_0x6dc92c['YLfIA'](_0x6dc92c[_0x48c2('0x228')](_0x1a19x7['url'][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1fb')],_0x48c2('0xce'))[_0x48c2('0x10')](_0x6dc92c['KEOrb'](0x10f,0x39)),0x3),0x31),_0x6dc92c[_0x48c2('0x229')](_0x6dc92c[_0x48c2('0x228')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x48c2('0xd7'),_0x6dc92c[_0x48c2('0x1fc')])[_0x48c2('0x10')](0x113%0x73),0x2),0x5),_0x6dc92c['ntzJU'](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1fb')],_0x6dc92c[_0x48c2('0x1fc')])[_0x48c2('0x10')](_0x6dc92c[_0x48c2('0x227')](0x157,0x63))*0x2,0xc),_0x6dc92c['KoGJR'](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1fb')],_0x6dc92c[_0x48c2('0x1fc')])[_0x48c2('0x10')](_0x6dc92c[_0x48c2('0x22a')](0x22b,0x7f))*0x2,0x1),_0x6dc92c['ntzJU'](_0x6dc92c[_0x48c2('0x228')](_0x1a19x7['url'][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1fb')],_0x6dc92c[_0x48c2('0x1fc')])[_0x48c2('0x10')](_0x6dc92c[_0x48c2('0x22b')](0x142,0x37)),0x2),0x10)),_0x6dc92c['reNRk'])+String['fromCodePoint'](_0x6dc92c['qZtCn'](_0x1a19x7['url'][_0x48c2('0x8b')](_0x6dc92c['uPJJj'],_0x6dc92c[_0x48c2('0x1fc')])['charCodeAt'](_0x6dc92c[_0x48c2('0x22c')](0x136,0x58)),0x43),0x2e,_0x6dc92c[_0x48c2('0x22d')](_0x6dc92c[_0x48c2('0x228')](_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x6dc92c[_0x48c2('0x1fb')],_0x6dc92c[_0x48c2('0x1fc')])['charCodeAt'](0x22c%0x49),0x2),0x1),0x6f,0x6d))){if(Object['hasOwn'](_0x440b95[_0x48c2('0x192')],_0x6dc92c[_0x48c2('0x22e')])){_0x6dc92c[_0x48c2('0x22f')](updateStepper,0x3);prContract[_0x48c2('0x141')](_0x440b95[_0x48c2('0x192')]['contract_id']);tempPrContractPos=prContract['indexOf'](_0x440b95[_0x48c2('0x192')][_0x48c2('0xa7')]);rowActive[tempPrContractPos]=tableSummaryTBODY[_0x48c2('0x89')](0x1);rowActive[tempPrContractPos]['insertCell'](0x0)['innerText']=document[_0x48c2('0x2d')](_0x6dc92c[_0x48c2('0x230')])[_0x48c2('0x6c')];rowActive[tempPrContractPos][_0x48c2('0x7f')](0x1)[_0x48c2('0x6c')]=_0x440b95['echo_req'][_0x48c2('0x19a')][_0x48c2('0x19d')];for(i=0x2;_0x6dc92c[_0x48c2('0x231')](i,0x5);i++){rowActive[tempPrContractPos][_0x48c2('0x7f')](i);}rowActive[tempPrContractPos][_0x48c2('0x19c')][0x4][_0x48c2('0x6c')]=_0x6dc92c[_0x48c2('0x232')];timerStartPLANB[tempPrContractPos]=_0x6dc92c[_0x48c2('0x233')](setTimeout,()=>{_0x6dc92c[_0x48c2('0x1e3')](doPLANB,_0x440b95[_0x48c2('0x192')][_0x48c2('0xa7')]);},_0x6dc92c[_0x48c2('0x234')](_0x6dc92c['qZtCn'](_0x6dc92c[_0x48c2('0x235')](_0x440b95[_0x48c2('0xd8')]['tempDuration'],_0x440b95[_0x48c2('0xd8')][_0x48c2('0x1a1')]),timerStartPLANBOffset),0x3e8));}else{}}else if(_0x440b95['msg_type']===_0x6dc92c[_0x48c2('0x236')]){}else if(_0x6dc92c[_0x48c2('0x237')](_0x440b95[_0x48c2('0xb7')],_0x6dc92c[_0x48c2('0x238')](_0x6dc92c[_0x48c2('0x238')](_0x6dc92c[_0x48c2('0x238')](_0x6dc92c[_0x48c2('0x238')](_0x6dc92c[_0x48c2('0x238')](_0x6dc92c['NZFpU'](_0x6dc92c['twEPR'](_0x6dc92c[_0x48c2('0x239')](_0x6dc92c['tZkpl'](_0x6dc92c[_0x48c2('0x23a')](_0x6dc92c['AwSTI']('pr',String[_0x48c2('0x28')](window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1e0')],'')[_0x48c2('0x8b')](_0x48c2('0x8e'),'')[_0x48c2('0x10')](0x131%0x4c)-0xb)),'p')+String[_0x48c2('0x28')](_0x6dc92c[_0x48c2('0x23b')](window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1e0')],'')[_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1e1')],'')[_0x48c2('0x10')](_0x6dc92c[_0x48c2('0x23c')](0x131,0x4c)),0xb)),'s'),_0x6dc92c[_0x48c2('0x23d')])+String[_0x48c2('0x28')](window[_0x48c2('0x8d')][_0x48c2('0x8a')]['replace'](_0x48c2('0x8c'),'')[_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1e1')],'')[_0x48c2('0x10')](_0x6dc92c['ATKMV'](0x131,0x4c))-0xb),'p'),'en'),'_c'),String[_0x48c2('0x28')](_0x6dc92c[_0x48c2('0x23b')](window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1e0')],'')[_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1e1')],'')[_0x48c2('0x10')](_0x6dc92c['HSQgH'](0x131,0x4c)),0xb))),'nt'),_0x6dc92c['zvvVM']),'t'))&&_0x6dc92c[_0x48c2('0x224')](window[_0x48c2('0x8d')][_0x48c2('0xc8')],String[_0x48c2('0x28')](_0x6dc92c[_0x48c2('0x23e')](_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x6dc92c[_0x48c2('0x1fb')],_0x6dc92c[_0x48c2('0x1fc')])[_0x48c2('0x10')](_0x6dc92c[_0x48c2('0x23f')](0xaf,0x2c))*0x2,0x6),_0x6dc92c[_0x48c2('0x235')](_0x1a19x7['url'][_0x48c2('0x8b')](_0x48c2('0xd7'),_0x6dc92c[_0x48c2('0x1fc')])['charCodeAt'](_0x6dc92c[_0x48c2('0x23f')](0x2a9,0x5b)),0x2)+0x2,_0x6dc92c[_0x48c2('0x23b')](_0x6dc92c[_0x48c2('0x240')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x6dc92c['uPJJj'],_0x6dc92c[_0x48c2('0x1fc')])[_0x48c2('0x10')](_0x6dc92c['IPiAc'](0x113,0x73)),0x3),0x22),_0x6dc92c[_0x48c2('0x241')](_0x6dc92c[_0x48c2('0x242')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1fb')],_0x6dc92c['aGAKi'])[_0x48c2('0x10')](0x136%0x58),0x2),0xe),_0x6dc92c[_0x48c2('0x243')](_0x1a19x7['url']['replace'](_0x48c2('0xd7'),_0x6dc92c[_0x48c2('0x1fc')])[_0x48c2('0x10')](_0x6dc92c[_0x48c2('0x23f')](0x22b,0x7f)),0x42),_0x1a19x7['url'][_0x48c2('0x8b')](_0x6dc92c['uPJJj'],_0x6dc92c[_0x48c2('0x1fc')])['charCodeAt'](_0x6dc92c['thhAR'](0x142,0x37))+0x9))&&_0x6dc92c['iqvNK'](window[_0x48c2('0x8d')][_0x48c2('0x8a')]['replace'](_0x6dc92c[_0x48c2('0x1e0')],'')[_0x48c2('0x8b')]('block.',''),_0x6dc92c[_0x48c2('0x243')](_0x6dc92c[_0x48c2('0x244')](String[_0x48c2('0x28')](_0x6dc92c[_0x48c2('0x244')](_0x6dc92c[_0x48c2('0x245')](_0x1a19x7['url']['replace'](_0x6dc92c['uPJJj'],_0x6dc92c['aGAKi'])[_0x48c2('0x10')](_0x6dc92c[_0x48c2('0x246')](0x22c,0x49)),0x2),0x1),_0x6dc92c[_0x48c2('0x244')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x48c2('0xd7'),_0x6dc92c[_0x48c2('0x1fc')])[_0x48c2('0x10')](_0x6dc92c[_0x48c2('0x246')](0x75,0x49)),0x41),_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1fb')],_0x6dc92c[_0x48c2('0x1fc')])[_0x48c2('0x10')](_0x6dc92c[_0x48c2('0x246')](0x10f,0x39))*0x3-0x31,_0x6dc92c['YKgok'](_0x6dc92c['HBhis'](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1fb')],_0x6dc92c[_0x48c2('0x1fc')])[_0x48c2('0x10')](_0x6dc92c['fbtar'](0x113,0x73)),0x2),0x5),_0x6dc92c[_0x48c2('0x244')](_0x6dc92c[_0x48c2('0x247')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1fb')],_0x6dc92c[_0x48c2('0x1fc')])[_0x48c2('0x10')](_0x6dc92c[_0x48c2('0x248')](0x157,0x63)),0x2),0xc),_0x6dc92c[_0x48c2('0x23b')](_0x6dc92c[_0x48c2('0x247')](_0x1a19x7[_0x48c2('0xc9')][_0x48c2('0x8b')](_0x6dc92c[_0x48c2('0x1fb')],_0x48c2('0xce'))[_0x48c2('0x10')](0x22b%0x7f),0x2),0x1),_0x6dc92c[_0x48c2('0x249')](_0x6dc92c['HBhis'](_0x1a19x7['url'][_0x48c2('0x8b')](_0x48c2('0xd7'),_0x48c2('0xce'))['charCodeAt'](_0x6dc92c[_0x48c2('0x248')](0x142,0x37)),0x2),0x10)),_0x6dc92c[_0x48c2('0x213')]),String[_0x48c2('0x28')](_0x6dc92c['vamRm'](_0x1a19x7['url'][_0x48c2('0x8b')](_0x48c2('0xd7'),_0x48c2('0xce'))[_0x48c2('0x10')](0x136%0x58),0x43),0x2e,_0x6dc92c[_0x48c2('0x24a')](_0x6dc92c[_0x48c2('0x247')](_0x1a19x7[_0x48c2('0xc9')]['replace'](_0x6dc92c[_0x48c2('0x1fb')],_0x48c2('0xce'))[_0x48c2('0x10')](_0x6dc92c[_0x48c2('0x248')](0x22c,0x49)),0x2),0x1),0x6f,0x6d)))){var _0x1779fa=_0x6dc92c[_0x48c2('0x24b')]['split']('|'),_0x55038e=0x0;while(!![]){switch(_0x1779fa[_0x55038e++]){case'0':if(_0x6dc92c[_0x48c2('0x24c')](tempPrContractPos,-0x1)){return;}continue;case'1':;continue;case'2':if(!(_0x6dc92c[_0x48c2('0x24c')](lastTimeMasukPOC[tempPrContractPos],undefined)||_0x440b95[_0x48c2('0x96')]['current_spot_time']>lastTimeMasukPOC[tempPrContractPos])){return;}continue;case'3':sedangPantauContractPos=tempPrContractPos;continue;case'4':lastTimeMasukPOC[tempPrContractPos]=_0x440b95['proposal_open_contract'][_0x48c2('0x1b8')];continue;case'5':sellProfitLoss[sedangPantauContractPos]=_0x440b95['proposal_open_contract'][_0x48c2('0x1c5')];continue;case'6':if(_0x6dc92c[_0x48c2('0x24d')](_0x440b95[_0x48c2('0x96')][_0x48c2('0x1bb')],undefined)&&(_0x440b95[_0x48c2('0x96')][_0x48c2('0x1bc')]||_0x440b95[_0x48c2('0x96')][_0x48c2('0x1bd')]||_0x440b95[_0x48c2('0x96')][_0x48c2('0x24e')]||_0x440b95[_0x48c2('0x96')][_0x48c2('0x1b8')]>_0x440b95[_0x48c2('0x96')][_0x48c2('0x1bf')]||_0x6dc92c[_0x48c2('0x24f')](_0x440b95['proposal_open_contract'][_0x48c2('0x1c1')],_0x6dc92c[_0x48c2('0x250')]))){if(Object[_0x48c2('0x1c3')](_0x440b95,_0x6dc92c[_0x48c2('0x251')])){_0x1a19x8['send'](JSON[_0x48c2('0x16a')]({'forget':_0x440b95[_0x48c2('0x11c')]['id'],'passthrough':{'app_id':app_id}}));}_0x1a19x8[_0x48c2('0x1c4')](JSON[_0x48c2('0x16a')]({'statement':0x1,'limit':0x1}));updateResultV(_0x440b95[_0x48c2('0x96')][_0x48c2('0xa7')],_0x440b95[_0x48c2('0x96')][_0x48c2('0x1c1')],_0x440b95[_0x48c2('0x96')][_0x48c2('0x1c5')],_0x440b95[_0x48c2('0x96')]['buy_price'],_0x440b95[_0x48c2('0x96')]['payout'],_0x440b95['proposal_open_contract'][_0x48c2('0x19d')],_0x440b95[_0x48c2('0x96')][_0x48c2('0x1c7')],_0x440b95[_0x48c2('0x96')]['entry_tick'],_0x440b95[_0x48c2('0x96')]['entry_tick_display_value'],_0x440b95['proposal_open_contract'][_0x48c2('0x1c9')],_0x440b95['proposal_open_contract'][_0x48c2('0x252')],_0x440b95['proposal_open_contract'][_0x48c2('0x1bb')],_0x440b95[_0x48c2('0x96')][_0x48c2('0x1ca')]);return!![];}continue;case'7':isContractValidToSell[sedangPantauContractPos]=_0x440b95[_0x48c2('0x96')]['is_valid_to_sell'];continue;case'8':if(_0x6dc92c[_0x48c2('0x253')](_0x440b95['proposal_open_contract']['entry_tick_display_value'],undefined)){rowActive[tempPrContractPos][_0x48c2('0x19c')][0x2][_0x48c2('0x6c')]=_0x440b95[_0x48c2('0x96')][_0x48c2('0x1ba')];}continue;case'9':func$1$9$8$7$SellConditions();continue;case'10':tempPrContractPos=prContract['indexOf'](_0x440b95[_0x48c2('0x96')][_0x48c2('0xa7')]);continue;case'11':;continue;}break;}}else{}};const forgetAllTicks=()=>{var _0x4b620d={'KeMBH':_0x48c2('0x254'),'crCuk':function(_0x2988ac,_0x165f89){return _0x2988ac+_0x165f89;},'RbWCx':function(_0xc658b2,_0x3b955e){return _0xc658b2-_0x3b955e;},'MlJAn':'block.','pwmGw':function(_0x4bf2c5,_0x24c0d9){return _0x4bf2c5%_0x24c0d9;},'WFeyk':'ryTicks'};sedangForgetAllTicks=!![];_0x1a19x7[_0x48c2('0x1c4')](JSON[_0x48c2('0x16a')]({'forget':idSubTicksHistory,'passthrough':{'app_id':app_id}}));_0x1a19x7[_0x48c2('0x1c4')](JSON['stringify']({'forget_all':_0x4b620d['KeMBH'],'passthrough':{'app_id':app_id,'next':_0x4b620d[_0x48c2('0x255')](_0x4b620d[_0x48c2('0x255')](_0x48c2('0x9f'),String[_0x48c2('0x28')](_0x4b620d['RbWCx'](window[_0x48c2('0x8d')][_0x48c2('0x8a')]['replace']('www.','')[_0x48c2('0x8b')](_0x4b620d[_0x48c2('0x256')],'')[_0x48c2('0x10')](_0x4b620d['pwmGw'](0x131,0x4c)),0xb))),_0x4b620d[_0x48c2('0x257')])}}));};const forgetTicks=_0x5a4edb=>{_0x1a19x7['send'](JSON['stringify']({'forget':_0x5a4edb,'passthrough':{'app_id':app_id}}));};const subscribeTicks=(_0x3ccdb3,_0x4610b4,_0x3f77a2)=>{var _0x8a6e46={'MLfND':function(_0x151bae,_0x22bb4c){return _0x151bae<_0x22bb4c;},'JjlAW':_0x48c2('0x258'),'NpEZw':'ticks'};_0x1a19x7[_0x48c2('0x1c4')](JSON['stringify']({'subscribe':0x1,'ticks_history':_0x3f77a2,'adjust_start_time':0x1,'count':_0x8a6e46[_0x48c2('0x259')](inpNOTicks[_0x48c2('0xb')],0x3e9)?0x3e9:inpNOTicks[_0x48c2('0xb')],'end':_0x8a6e46['JjlAW'],'start':0x1,'style':_0x8a6e46['NpEZw'],'passthrough':{'app_id':app_id,'status_nya':_0x3ccdb3,'index_nya':_0x4610b4}}));};const subscribeCandles=_0x12f6c9=>{var _0x346e75={'jyWNL':'latest','SkcBa':_0x48c2('0xa2')};_0x1a19x7[_0x48c2('0x1c4')](JSON[_0x48c2('0x16a')]({'ticks_history':mainSymbol,'adjust_start_time':0x1,'count':0xa,'end':_0x346e75[_0x48c2('0x25a')],'start':0x1,'style':_0x346e75[_0x48c2('0x25b')],'granularity':_0x12f6c9,'passthrough':{'app_id':app_id}}));};const createChartLast10Dig_Digit=()=>{var _0x2b5d9d={'iZSDB':function(_0x549d66,_0x25e1a5){return _0x549d66>_0x25e1a5;},'qQTTO':function(_0x338921,_0x435043){return _0x338921<_0x435043;},'dZxro':_0x48c2('0x25c'),'zBQTO':_0x48c2('0x25d'),'qjwke':_0x48c2('0x25e'),'podAA':'9th','nyrkC':_0x48c2('0x25f'),'njrLO':'7th','XPyGC':_0x48c2('0x260'),'BTbhn':'5th','oVEgr':_0x48c2('0x261'),'yIkmx':_0x48c2('0x262'),'zzmZA':'2nd','NDxDX':'line','nqZyp':_0x48c2('0x263'),'SkqNe':_0x48c2('0x264'),'RIvVm':_0x48c2('0x265')};const _0x1fc570=document[_0x48c2('0x2d')](_0x2b5d9d['zBQTO'])['getContext']('2d');const _0x13c26b=[_0x2b5d9d[_0x48c2('0x266')],_0x2b5d9d[_0x48c2('0x267')],_0x2b5d9d[_0x48c2('0x268')],_0x2b5d9d['njrLO'],_0x2b5d9d['XPyGC'],_0x2b5d9d[_0x48c2('0x269')],_0x2b5d9d[_0x48c2('0x26a')],_0x2b5d9d[_0x48c2('0x26b')],_0x2b5d9d[_0x48c2('0x26c')],'1st'];mainChartLast10Dig_Digit=new Chart(_0x1fc570,{'type':_0x2b5d9d[_0x48c2('0x26d')],'data':{'labels':_0x13c26b,'datasets':[{'label':_0x2b5d9d['nqZyp'],'fill':![],'backgroundColor':_0x2b5d9d[_0x48c2('0x26e')],'borderColor':_0x2b5d9d[_0x48c2('0x26f')],'borderWidth':0x1,'data':-0x3e7,'pointStyle':!![],'pointRadius':0x5,'pointHoverRadius':0x8,'pointBorderWidth':0x0}]},'options':{'responsive':!![],'maintainAspectRatio':![],'plugins':{'legend':{'display':!![],'labels':{'color':_0x2b5d9d[_0x48c2('0x26f')]}}}},'plugins':[ChartDataLabels],'options':{'responsive':!![],'maintainAspectRatio':![],'plugins':{'title':{'display':!![],'text':_0x48c2('0x263'),'color':_0x2b5d9d[_0x48c2('0x26f')]},'legend':{'display':![],'labels':{'color':_0x2b5d9d[_0x48c2('0x26f')]}},'datalabels':{'display':!![],'color':_0x2b5d9d[_0x48c2('0x26e')],'anchor':_0x2b5d9d[_0x48c2('0x270')],'align':_0x2b5d9d[_0x48c2('0x270')],'offset':-0x2}},'scales':{'x':{'ticks':{'color':_0x2b5d9d[_0x48c2('0x26f')]}},'y':{'ticks':{'color':_0x2b5d9d[_0x48c2('0x26f')]},'grid':{'color':function(_0x52d720){if(_0x2b5d9d['iZSDB'](_0x52d720[_0x48c2('0xa3')]['value'],0x0)){return _0x48c2('0x264');}else if(_0x2b5d9d[_0x48c2('0x271')](_0x52d720[_0x48c2('0xa3')][_0x48c2('0xb')],0x0)){return'#2e2e2e';}return _0x2b5d9d[_0x48c2('0x26f')];}}}}}});};createChartLast10Dig_Digit();const createChartLast10Dig_Change=()=>{var _0x15bc8e={'xiUCe':function(_0x2c6dad,_0x52a6c5){return _0x2c6dad>_0x52a6c5;},'lzUIq':function(_0x5c3e83,_0xc8a6b){return _0x5c3e83<_0xc8a6b;},'JUxVB':_0x48c2('0x25c'),'xbPjO':_0x48c2('0x25e'),'bInfc':_0x48c2('0x25f'),'PUeLV':_0x48c2('0x272'),'RMGpK':_0x48c2('0x273'),'bZQMm':'4th','kJOyn':_0x48c2('0x262'),'RqohT':_0x48c2('0x274'),'GuJqo':_0x48c2('0x275'),'Ixgio':_0x48c2('0x276'),'KVRlU':_0x48c2('0x277'),'tjAkp':_0x48c2('0x264'),'Wcrob':_0x48c2('0x265')};const _0x387865=document['getElementById'](_0x48c2('0x278'))[_0x48c2('0x279')]('2d');const _0x3eac31=[_0x15bc8e[_0x48c2('0x27a')],'9th',_0x15bc8e[_0x48c2('0x27b')],_0x15bc8e['PUeLV'],_0x48c2('0x260'),_0x15bc8e[_0x48c2('0x27c')],_0x15bc8e[_0x48c2('0x27d')],_0x15bc8e[_0x48c2('0x27e')],_0x15bc8e['RqohT'],_0x15bc8e[_0x48c2('0x27f')]];mainChartLast10Dig_Change=new Chart(_0x387865,{'type':_0x15bc8e[_0x48c2('0x280')],'data':{'labels':_0x3eac31,'datasets':[{'label':_0x15bc8e[_0x48c2('0x281')],'fill':![],'backgroundColor':'#2e2e2e','borderColor':_0x15bc8e[_0x48c2('0x282')],'borderWidth':0x1,'data':-0x3e7,'pointStyle':!![],'pointRadius':0x5,'pointHoverRadius':0x8,'pointBorderWidth':0x0}]},'options':{'responsive':!![],'maintainAspectRatio':![],'plugins':{'legend':{'display':!![],'labels':{'color':_0x15bc8e[_0x48c2('0x282')]}}}},'plugins':[ChartDataLabels],'options':{'responsive':!![],'maintainAspectRatio':![],'plugins':{'title':{'display':!![],'text':'Digit\x20Change','color':_0x15bc8e[_0x48c2('0x282')]},'legend':{'display':![],'labels':{'color':_0x15bc8e[_0x48c2('0x282')]}},'datalabels':{'display':!![],'color':_0x15bc8e[_0x48c2('0x283')],'anchor':_0x15bc8e[_0x48c2('0x284')],'align':_0x15bc8e[_0x48c2('0x284')],'offset':-0x2}},'scales':{'x':{'ticks':{'color':_0x15bc8e[_0x48c2('0x282')]}},'y':{'ticks':{'color':_0x15bc8e[_0x48c2('0x282')]},'grid':{'color':function(_0x2462f1){if(_0x15bc8e[_0x48c2('0x285')](_0x2462f1['tick'][_0x48c2('0xb')],0x0)){return _0x48c2('0x264');}else if(_0x15bc8e[_0x48c2('0x286')](_0x2462f1[_0x48c2('0xa3')][_0x48c2('0xb')],0x0)){return'#2e2e2e';}return _0x15bc8e[_0x48c2('0x282')];}}}}}});};createChartLast10Dig_Change();const createChart20Cater=()=>{var _0xd00a30={'NWzYB':function(_0xb3a7c8,_0x4a4c59){return _0xb3a7c8>_0x4a4c59;},'rDVud':'#2e2e2e','CydAG':_0x48c2('0x25c'),'Rygfu':_0x48c2('0x287'),'Kcmgg':_0x48c2('0x288'),'MTtxS':_0x48c2('0x289'),'WuqNz':'16th','IYNqa':_0x48c2('0x28a'),'zhstd':_0x48c2('0x28b'),'GYgOo':_0x48c2('0x28c'),'bSqvi':_0x48c2('0x25f'),'cnbFw':_0x48c2('0x260'),'iMcdY':_0x48c2('0x273'),'VXVNh':_0x48c2('0x261'),'usFZl':'3rd','QvQLk':_0x48c2('0x274'),'yXOfg':'1st','RdHvk':_0x48c2('0x276')};const _0x361e9b=document[_0x48c2('0x2d')](_0xd00a30[_0x48c2('0x28d')])[_0x48c2('0x279')]('2d');const _0x50322c=[_0x48c2('0x28e'),_0xd00a30[_0x48c2('0x28f')],_0xd00a30['MTtxS'],_0x48c2('0x290'),_0xd00a30[_0x48c2('0x291')],_0xd00a30['IYNqa'],_0x48c2('0x292'),_0xd00a30[_0x48c2('0x293')],_0x48c2('0x294'),'11th',_0x48c2('0x25e'),_0xd00a30[_0x48c2('0x295')],_0xd00a30[_0x48c2('0x296')],'7th',_0xd00a30[_0x48c2('0x297')],_0xd00a30[_0x48c2('0x298')],_0xd00a30['VXVNh'],_0xd00a30[_0x48c2('0x299')],_0xd00a30[_0x48c2('0x29a')],_0xd00a30['yXOfg']];mainChart20Cater=new Chart(_0x361e9b,{'type':_0xd00a30[_0x48c2('0x29b')],'data':{'labels':_0x50322c,'datasets':[{'fill':![],'lineTension':0x0,'backgroundColor':[_0xd00a30[_0x48c2('0x29c')],_0xd00a30[_0x48c2('0x29c')],_0xd00a30[_0x48c2('0x29c')],_0x48c2('0x264'),_0xd00a30[_0x48c2('0x29c')],_0xd00a30[_0x48c2('0x29c')],_0xd00a30[_0x48c2('0x29c')],_0xd00a30[_0x48c2('0x29c')],_0xd00a30[_0x48c2('0x29c')],_0x48c2('0x264'),_0x48c2('0x264'),_0xd00a30[_0x48c2('0x29c')],_0x48c2('0x264'),_0xd00a30[_0x48c2('0x29c')],_0xd00a30['rDVud'],_0xd00a30[_0x48c2('0x29c')],_0xd00a30['rDVud'],'#2e2e2e',_0x48c2('0x264'),_0xd00a30[_0x48c2('0x29c')]],'borderColor':_0x48c2('0x25c'),'borderWidth':0x1,'data':[0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0],'pointRadius':0x5,'pointHoverRadius':0x8,'pointBorderWidth':0x0}]},'options':{'responsive':!![],'maintainAspectRatio':![],'plugins':{'legend':{'display':![]}}},'plugins':[ChartDataLabels],'options':{'responsive':!![],'maintainAspectRatio':![],'plugins':{'legend':{'display':![]},'datalabels':{'color':[_0xd00a30[_0x48c2('0x29c')],_0xd00a30[_0x48c2('0x29c')],_0xd00a30[_0x48c2('0x29c')],_0xd00a30[_0x48c2('0x29c')],_0xd00a30[_0x48c2('0x29c')],_0xd00a30[_0x48c2('0x29c')],_0xd00a30[_0x48c2('0x29c')],_0x48c2('0x264'),_0x48c2('0x264'),_0xd00a30['rDVud'],_0xd00a30[_0x48c2('0x29c')],_0x48c2('0x264'),_0xd00a30[_0x48c2('0x29c')],_0xd00a30['rDVud'],_0xd00a30[_0x48c2('0x29c')],_0xd00a30['rDVud'],_0x48c2('0x264'),_0xd00a30[_0x48c2('0x29c')],_0xd00a30[_0x48c2('0x29c')],_0xd00a30[_0x48c2('0x29c')]],'anchor':_0x48c2('0x265'),'align':_0x48c2('0x265'),'offset':-0x2}},'scales':{'x':{'ticks':{'color':_0xd00a30[_0x48c2('0x29d')]}},'y':{'ticks':{'color':_0xd00a30[_0x48c2('0x29d')]},'min':-0xa,'max':0xa,'grid':{'color':function(_0x168a76){if(_0xd00a30[_0x48c2('0x29e')](_0x168a76['tick'][_0x48c2('0xb')],0x0)){return _0xd00a30[_0x48c2('0x29c')];}else if(_0x168a76['tick'][_0x48c2('0xb')]<0x0){return _0x48c2('0x264');}return _0xd00a30[_0x48c2('0x29d')];}}}}}});};createChart20Cater();const createChartLast10Tick_Tick=()=>{var _0x368619={'NcfXC':function(_0x43ae02,_0x291a6f){return _0x43ae02>_0x291a6f;},'rcCCf':_0x48c2('0x264'),'djZnV':_0x48c2('0x25c'),'dwoea':'chart_last10tick_tick','Sjzhy':'10th','yhBxn':_0x48c2('0x28c'),'pgELY':_0x48c2('0x272'),'bQIgO':_0x48c2('0x273'),'unobP':_0x48c2('0x261'),'GfsMZ':_0x48c2('0x262'),'ilhog':_0x48c2('0x276'),'lVFYo':_0x48c2('0x29f'),'fHWXe':_0x48c2('0x265')};const _0x1fdf94=document[_0x48c2('0x2d')](_0x368619[_0x48c2('0x2a0')])[_0x48c2('0x279')]('2d');const _0x49fe82=[_0x368619[_0x48c2('0x2a1')],_0x368619[_0x48c2('0x2a2')],_0x48c2('0x25f'),_0x368619['pgELY'],_0x48c2('0x260'),_0x368619['bQIgO'],_0x368619[_0x48c2('0x2a3')],_0x368619['GfsMZ'],_0x48c2('0x274'),_0x48c2('0x275')];mainChartLast10Tick_Tick=new Chart(_0x1fdf94,{'type':_0x368619[_0x48c2('0x2a4')],'data':{'labels':_0x49fe82,'datasets':[{'label':_0x368619[_0x48c2('0x2a5')],'fill':![],'backgroundColor':_0x368619['rcCCf'],'borderColor':_0x368619['djZnV'],'borderWidth':0x1,'data':-0x3e7,'pointStyle':!![],'pointRadius':0x5,'pointHoverRadius':0x8,'pointBorderWidth':0x0}]},'options':{'responsive':!![],'maintainAspectRatio':![],'plugins':{'legend':{'display':!![],'labels':{'color':_0x368619[_0x48c2('0x2a6')]}}}},'plugins':[ChartDataLabels],'options':{'responsive':!![],'maintainAspectRatio':![],'plugins':{'title':{'display':!![],'text':_0x368619[_0x48c2('0x2a5')],'color':_0x368619[_0x48c2('0x2a6')]},'legend':{'display':![],'labels':{'color':_0x368619[_0x48c2('0x2a6')]}},'datalabels':{'display':!![],'color':_0x368619[_0x48c2('0x2a7')],'anchor':_0x368619[_0x48c2('0x2a8')],'align':_0x368619[_0x48c2('0x2a8')],'offset':-0x2}},'scales':{'x':{'ticks':{'color':_0x368619[_0x48c2('0x2a6')]}},'y':{'ticks':{'color':'#fff'},'grid':{'color':function(_0x474dec){if(_0x368619[_0x48c2('0x2a9')](_0x474dec[_0x48c2('0xa3')]['value'],0x0)){return _0x368619['rcCCf'];}else if(_0x474dec[_0x48c2('0xa3')][_0x48c2('0xb')]<0x0){return _0x48c2('0x264');}return _0x368619[_0x48c2('0x2a6')];}}}}}});};createChartLast10Tick_Tick();const createChartLast10Tick_Change=()=>{var _0x2437ef={'fSiOn':function(_0x4c7590,_0x1a00bc){return _0x4c7590>_0x1a00bc;},'PKyya':_0x48c2('0x264'),'IIDQH':function(_0x2654bb,_0x3445c4){return _0x2654bb<_0x3445c4;},'hiXNQ':_0x48c2('0x25c'),'pdYCO':_0x48c2('0x28c'),'lCplP':_0x48c2('0x25f'),'CQZJz':_0x48c2('0x272'),'FJfLx':_0x48c2('0x260'),'zATio':_0x48c2('0x273'),'FkGzc':_0x48c2('0x261'),'iuThH':_0x48c2('0x262'),'hVGDI':_0x48c2('0x275'),'tpakr':_0x48c2('0x276'),'UyhUc':'Tick\x20Change','CeVcL':_0x48c2('0x265')};const _0x4f8497=document[_0x48c2('0x2d')](_0x48c2('0x2aa'))[_0x48c2('0x279')]('2d');const _0x519fad=[_0x48c2('0x25e'),_0x2437ef['pdYCO'],_0x2437ef['lCplP'],_0x2437ef[_0x48c2('0x2ab')],_0x2437ef[_0x48c2('0x2ac')],_0x2437ef[_0x48c2('0x2ad')],_0x2437ef['FkGzc'],_0x2437ef['iuThH'],'2nd',_0x2437ef[_0x48c2('0x2ae')]];mainChartLast10Tick_Change=new Chart(_0x4f8497,{'type':_0x2437ef[_0x48c2('0x2af')],'data':{'labels':_0x519fad,'datasets':[{'label':_0x48c2('0x2b0'),'fill':![],'backgroundColor':_0x2437ef[_0x48c2('0x2b1')],'borderColor':'#fff','borderWidth':0x1,'data':-0x3e7,'pointStyle':!![],'pointRadius':0x5,'pointHoverRadius':0x8,'pointBorderWidth':0x0}]},'options':{'responsive':!![],'maintainAspectRatio':![],'plugins':{'legend':{'display':!![],'labels':{'color':_0x48c2('0x25c')}}}},'plugins':[ChartDataLabels],'options':{'responsive':!![],'maintainAspectRatio':![],'plugins':{'title':{'display':!![],'text':_0x2437ef[_0x48c2('0x2b2')],'color':_0x2437ef[_0x48c2('0x2b3')]},'legend':{'display':![],'labels':{'color':_0x48c2('0x25c')}},'datalabels':{'display':!![],'color':_0x48c2('0x264'),'anchor':'end','align':_0x2437ef[_0x48c2('0x2b4')],'offset':-0x2}},'scales':{'x':{'ticks':{'color':_0x2437ef['hiXNQ']}},'y':{'ticks':{'color':_0x2437ef['hiXNQ']},'grid':{'color':function(_0x5c76c3){if(_0x2437ef[_0x48c2('0x2b5')](_0x5c76c3[_0x48c2('0xa3')][_0x48c2('0xb')],0x0)){return _0x2437ef['PKyya'];}else if(_0x2437ef[_0x48c2('0x2b6')](_0x5c76c3[_0x48c2('0xa3')][_0x48c2('0xb')],0x0)){return _0x2437ef[_0x48c2('0x2b1')];}return _0x2437ef[_0x48c2('0x2b3')];}}}}}});};createChartLast10Tick_Change();const createChart20TickWorm=()=>{var _0xb42537={'lpTZu':function(_0x5519c1,_0xc99187){return _0x5519c1<_0xc99187;},'aEbIK':_0x48c2('0x264'),'PitCn':'#fff','VxaPx':_0x48c2('0x2b7'),'iFaBN':_0x48c2('0x28e'),'BYtjJ':_0x48c2('0x288'),'jkriR':_0x48c2('0x290'),'BtNRo':'16th','NaHXX':_0x48c2('0x294'),'XYBcR':_0x48c2('0x2b8'),'SptKT':'10th','kaZSN':'7th','GOEmB':_0x48c2('0x273'),'zpFDY':_0x48c2('0x261'),'StPKV':_0x48c2('0x262'),'cfbCM':_0x48c2('0x274'),'vWJZg':_0x48c2('0x275'),'kprko':_0x48c2('0x276'),'MaXgl':'end'};const _0x181c4a=document['getElementById'](_0xb42537[_0x48c2('0x2b9')])['getContext']('2d');const _0x32a4be=[_0xb42537['iFaBN'],_0xb42537[_0x48c2('0x2ba')],_0x48c2('0x289'),_0xb42537[_0x48c2('0x2bb')],_0xb42537[_0x48c2('0x2bc')],_0x48c2('0x28a'),_0x48c2('0x292'),_0x48c2('0x28b'),_0xb42537[_0x48c2('0x2bd')],_0xb42537[_0x48c2('0x2be')],_0xb42537['SptKT'],_0x48c2('0x28c'),_0x48c2('0x25f'),_0xb42537['kaZSN'],_0x48c2('0x260'),_0xb42537[_0x48c2('0x2bf')],_0xb42537[_0x48c2('0x2c0')],_0xb42537[_0x48c2('0x2c1')],_0xb42537['cfbCM'],_0xb42537['vWJZg']];mainChart20TickWorm=new Chart(_0x181c4a,{'type':_0xb42537[_0x48c2('0x2c2')],'data':{'labels':_0x32a4be,'datasets':[{'fill':![],'lineTension':0x0,'backgroundColor':[_0xb42537[_0x48c2('0x2c3')],_0x48c2('0x264'),_0xb42537['aEbIK'],_0xb42537['aEbIK'],_0xb42537[_0x48c2('0x2c3')],_0xb42537[_0x48c2('0x2c3')],_0xb42537[_0x48c2('0x2c3')],_0xb42537[_0x48c2('0x2c3')],'#2e2e2e',_0x48c2('0x264'),_0xb42537[_0x48c2('0x2c3')],_0xb42537['aEbIK'],_0xb42537['aEbIK'],_0xb42537[_0x48c2('0x2c3')],_0x48c2('0x264'),_0xb42537[_0x48c2('0x2c3')],'#2e2e2e','#2e2e2e',_0xb42537[_0x48c2('0x2c3')],'#2e2e2e'],'borderColor':_0x48c2('0x25c'),'borderWidth':0x1,'data':[0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0],'pointStyle':[![]],'pointRadius':0xa,'pointHoverRadius':0xf,'pointBorderWidth':0x0}]},'options':{'responsive':!![],'maintainAspectRatio':![],'plugins':{'legend':{'display':![]}}},'plugins':[ChartDataLabels],'options':{'responsive':!![],'maintainAspectRatio':![],'plugins':{'legend':{'display':![]},'datalabels':{'color':[_0xb42537[_0x48c2('0x2c3')],_0xb42537[_0x48c2('0x2c3')],_0xb42537['aEbIK'],_0xb42537[_0x48c2('0x2c3')],_0xb42537[_0x48c2('0x2c3')],_0x48c2('0x264'),_0x48c2('0x264'),_0xb42537['aEbIK'],_0xb42537[_0x48c2('0x2c3')],_0xb42537[_0x48c2('0x2c3')],_0xb42537[_0x48c2('0x2c3')],_0xb42537[_0x48c2('0x2c3')],_0x48c2('0x264'),_0x48c2('0x264'),_0xb42537[_0x48c2('0x2c3')],_0x48c2('0x264'),'#2e2e2e','#2e2e2e',_0xb42537[_0x48c2('0x2c3')],_0x48c2('0x264')],'anchor':_0xb42537['MaXgl'],'align':_0xb42537[_0x48c2('0x2c4')],'offset':-0x2}},'scales':{'x':{'ticks':{'color':_0x48c2('0x25c')}},'y':{'ticks':{'color':_0x48c2('0x25c')},'grid':{'color':function(_0x1b1256){if(_0x1b1256[_0x48c2('0xa3')][_0x48c2('0xb')]>0x0){return'#2e2e2e';}else if(_0xb42537['lpTZu'](_0x1b1256[_0x48c2('0xa3')][_0x48c2('0xb')],0x0)){return _0xb42537[_0x48c2('0x2c3')];}return _0xb42537[_0x48c2('0x2c5')];}}}}}});};createChart20TickWorm();const createChartTickTrisma=()=>{var _0x5bb23e={'AKhcm':function(_0x309624,_0x39823b){return _0x309624>_0x39823b;},'fPCAo':function(_0x288a4b,_0x54d325){return _0x288a4b<_0x54d325;},'uCgpp':'#2e2e2e','kImVf':_0x48c2('0x2c6'),'SvtnE':'101st','zSXNc':'100th','lRIHs':_0x48c2('0x2c7'),'KGgPb':'97th','tbljG':'96th','Nutxf':'93th','zRdnI':_0x48c2('0x2c8'),'LgnUU':_0x48c2('0x2c9'),'DzcWQ':_0x48c2('0x2ca'),'oPoCi':_0x48c2('0x2cb'),'nxTqN':_0x48c2('0x2cc'),'VCsGE':_0x48c2('0x2cd'),'PsvKd':_0x48c2('0x2ce'),'Wqwzm':_0x48c2('0x2cf'),'KenXN':_0x48c2('0x2d0'),'fCkpg':_0x48c2('0x2d1'),'mHzfv':_0x48c2('0x2d2'),'ZCSmS':_0x48c2('0x2d3'),'IrHvn':'80th','bzAwM':'79th','gSEFk':_0x48c2('0x2d4'),'QQEJQ':_0x48c2('0x2d5'),'yPUKd':'76th','VyVks':_0x48c2('0x2d6'),'hxRYh':'73th','MAFLD':'72th','ueDsB':_0x48c2('0x2d7'),'Ctvwp':_0x48c2('0x2d8'),'efTJr':'67th','VwTsj':_0x48c2('0x2d9'),'mwFHX':_0x48c2('0x2da'),'mAPFy':_0x48c2('0x2db'),'ZQZVt':_0x48c2('0x2dc'),'lqkfW':_0x48c2('0x2dd'),'sEGpW':_0x48c2('0x2de'),'olMXG':_0x48c2('0x2df'),'TSLsY':_0x48c2('0x2e0'),'WKlWW':_0x48c2('0x2e1'),'Gbvlm':_0x48c2('0x2e2'),'vqzBF':'52th','AgGcF':_0x48c2('0x2e3'),'FRwDV':_0x48c2('0x2e4'),'njkav':_0x48c2('0x2e5'),'GeTQa':'46th','QEDBV':_0x48c2('0x2e6'),'FgBav':_0x48c2('0x2e7'),'Xeoiq':_0x48c2('0x2e8'),'ddVuJ':_0x48c2('0x2e9'),'ycrqj':_0x48c2('0x2ea'),'toiFv':_0x48c2('0x2eb'),'PeLzg':_0x48c2('0x2ec'),'yesPU':_0x48c2('0x2ed'),'VaZCe':_0x48c2('0x2ee'),'KxrsU':_0x48c2('0x2ef'),'CYQbl':'34th','jGOQA':_0x48c2('0x2f0'),'liAVU':_0x48c2('0x2f1'),'nvcxy':'30th','mQTdM':_0x48c2('0x2f2'),'PsQOd':_0x48c2('0x2f3'),'TiYMy':'27th','kMRCZ':_0x48c2('0x2f4'),'YrHLW':_0x48c2('0x2f5'),'RZWOu':_0x48c2('0x2f6'),'KrMoe':_0x48c2('0x2f7'),'WTMgQ':_0x48c2('0x2f8'),'yzfZU':'19th','MqbYK':'17th','CMbxt':'16th','LqwTN':_0x48c2('0x28a'),'JpFJX':_0x48c2('0x28b'),'UDKGO':_0x48c2('0x294'),'tdYOw':_0x48c2('0x2b8'),'hsCtM':_0x48c2('0x28c'),'mhbQO':_0x48c2('0x25f'),'TkwRx':'6th','bHEWo':_0x48c2('0x273'),'WNwTQ':'4th','JSaor':_0x48c2('0x262'),'pmpJj':'1st','pUAOx':'Price','OHQRT':_0x48c2('0x25c'),'UVrHN':'#f00','EbxHT':_0x48c2('0x2f9'),'eazEU':_0x48c2('0x2fa'),'KUdJd':_0x48c2('0x2fb'),'rFPzn':_0x48c2('0x2fc'),'EBsqX':_0x48c2('0x2fd'),'btQFc':_0x48c2('0x265')};const _0x863a78=document[_0x48c2('0x2d')](_0x5bb23e[_0x48c2('0x2fe')])['getContext']('2d');const _0x3b0b52=[_0x5bb23e[_0x48c2('0x2ff')],_0x5bb23e[_0x48c2('0x300')],'99th',_0x5bb23e[_0x48c2('0x301')],_0x5bb23e[_0x48c2('0x302')],_0x5bb23e['tbljG'],_0x48c2('0x303'),_0x48c2('0x304'),_0x5bb23e['Nutxf'],_0x5bb23e[_0x48c2('0x305')],_0x5bb23e[_0x48c2('0x306')],_0x5bb23e[_0x48c2('0x307')],_0x5bb23e[_0x48c2('0x308')],_0x5bb23e[_0x48c2('0x309')],_0x5bb23e[_0x48c2('0x30a')],_0x5bb23e[_0x48c2('0x30b')],_0x5bb23e[_0x48c2('0x30c')],_0x5bb23e['KenXN'],_0x5bb23e[_0x48c2('0x30d')],_0x5bb23e[_0x48c2('0x30e')],_0x5bb23e[_0x48c2('0x30f')],_0x5bb23e[_0x48c2('0x310')],_0x5bb23e[_0x48c2('0x311')],_0x5bb23e[_0x48c2('0x312')],_0x5bb23e['QQEJQ'],_0x5bb23e['yPUKd'],_0x48c2('0x313'),_0x5bb23e[_0x48c2('0x314')],_0x5bb23e[_0x48c2('0x315')],_0x5bb23e[_0x48c2('0x316')],_0x5bb23e['ueDsB'],_0x5bb23e[_0x48c2('0x317')],'69th',_0x48c2('0x318'),_0x5bb23e[_0x48c2('0x319')],_0x5bb23e['VwTsj'],_0x5bb23e[_0x48c2('0x31a')],_0x5bb23e[_0x48c2('0x31b')],_0x5bb23e[_0x48c2('0x31c')],_0x5bb23e[_0x48c2('0x31d')],_0x48c2('0x31e'),_0x5bb23e[_0x48c2('0x31f')],_0x48c2('0x320'),_0x48c2('0x321'),_0x5bb23e['olMXG'],_0x5bb23e['TSLsY'],_0x48c2('0x322'),_0x5bb23e[_0x48c2('0x323')],_0x5bb23e['Gbvlm'],_0x5bb23e[_0x48c2('0x324')],_0x5bb23e['AgGcF'],_0x5bb23e[_0x48c2('0x325')],_0x48c2('0x326'),_0x5bb23e[_0x48c2('0x327')],_0x48c2('0x328'),_0x5bb23e[_0x48c2('0x329')],_0x5bb23e[_0x48c2('0x32a')],_0x5bb23e[_0x48c2('0x32b')],_0x5bb23e[_0x48c2('0x32c')],_0x48c2('0x32d'),_0x5bb23e[_0x48c2('0x32e')],_0x5bb23e[_0x48c2('0x32f')],_0x5bb23e[_0x48c2('0x330')],_0x5bb23e['PeLzg'],_0x5bb23e[_0x48c2('0x331')],_0x5bb23e[_0x48c2('0x332')],_0x5bb23e[_0x48c2('0x333')],_0x5bb23e[_0x48c2('0x334')],_0x48c2('0x335'),_0x5bb23e[_0x48c2('0x336')],_0x5bb23e[_0x48c2('0x337')],_0x5bb23e['nvcxy'],_0x5bb23e['mQTdM'],_0x5bb23e[_0x48c2('0x338')],_0x5bb23e['TiYMy'],_0x5bb23e[_0x48c2('0x339')],_0x5bb23e[_0x48c2('0x33a')],_0x5bb23e[_0x48c2('0x33b')],_0x5bb23e[_0x48c2('0x33c')],'22nd',_0x5bb23e[_0x48c2('0x33d')],'20th',_0x5bb23e[_0x48c2('0x33e')],_0x48c2('0x289'),_0x5bb23e[_0x48c2('0x33f')],_0x5bb23e[_0x48c2('0x340')],_0x5bb23e['LqwTN'],'14th',_0x5bb23e[_0x48c2('0x341')],_0x5bb23e['UDKGO'],_0x5bb23e[_0x48c2('0x342')],_0x48c2('0x25e'),_0x5bb23e[_0x48c2('0x343')],_0x5bb23e[_0x48c2('0x344')],_0x48c2('0x272'),_0x5bb23e[_0x48c2('0x345')],_0x5bb23e[_0x48c2('0x346')],_0x5bb23e[_0x48c2('0x347')],_0x5bb23e[_0x48c2('0x348')],_0x48c2('0x274'),_0x5bb23e[_0x48c2('0x349')]];mainChartTickTrisma=new Chart(_0x863a78,{'type':'line','data':{'labels':_0x3b0b52,'datasets':[{'label':_0x5bb23e[_0x48c2('0x34a')],'fill':![],'backgroundColor':_0x5bb23e[_0x48c2('0x34b')],'borderColor':_0x5bb23e['OHQRT'],'borderWidth':0x1,'data':-0x3e7,'pointStyle':![],'pointRadius':0x5,'pointHoverRadius':0x8},{'label':_0x48c2('0x34c'),'fill':![],'backgroundColor':_0x5bb23e[_0x48c2('0x34b')],'borderColor':_0x5bb23e[_0x48c2('0x34d')],'borderWidth':0x1,'data':-0x3e7,'pointStyle':![],'pointRadius':0x5,'pointHoverRadius':0x8,'cubicInterpolationMode':_0x5bb23e['EbxHT'],'tension':0.4},{'label':_0x5bb23e[_0x48c2('0x34e')],'fill':![],'backgroundColor':_0x48c2('0x264'),'borderColor':_0x5bb23e[_0x48c2('0x34f')],'borderWidth':0x1,'data':-0x3e7,'pointStyle':![],'pointRadius':0x5,'pointHoverRadius':0x8,'cubicInterpolationMode':_0x5bb23e[_0x48c2('0x350')],'tension':0.4},{'label':_0x5bb23e['rFPzn'],'fill':![],'backgroundColor':_0x5bb23e[_0x48c2('0x34b')],'borderColor':_0x5bb23e['EBsqX'],'borderWidth':0x1,'data':-0x3e7,'pointStyle':![],'pointRadius':0x5,'pointHoverRadius':0x8,'cubicInterpolationMode':_0x5bb23e['EbxHT'],'tension':0.4}]},'options':{'responsive':!![],'maintainAspectRatio':![],'plugins':{'legend':{'display':!![],'labels':{'color':_0x5bb23e[_0x48c2('0x351')]}}}},'plugins':[ChartDataLabels],'options':{'responsive':!![],'maintainAspectRatio':![],'plugins':{'legend':{'display':!![],'labels':{'color':_0x5bb23e[_0x48c2('0x351')]}},'datalabels':{'display':![],'color':[_0x5bb23e[_0x48c2('0x34b')],_0x5bb23e[_0x48c2('0x34b')],'#2e2e2e',_0x5bb23e[_0x48c2('0x34b')],_0x5bb23e['uCgpp'],_0x5bb23e[_0x48c2('0x34b')],_0x5bb23e['uCgpp'],_0x5bb23e[_0x48c2('0x34b')],_0x5bb23e['uCgpp'],_0x5bb23e['uCgpp'],'#2e2e2e',_0x5bb23e[_0x48c2('0x34b')],_0x48c2('0x264'),_0x5bb23e[_0x48c2('0x34b')],_0x5bb23e[_0x48c2('0x34b')],_0x48c2('0x264'),_0x5bb23e['uCgpp'],_0x48c2('0x264'),_0x5bb23e['uCgpp'],_0x5bb23e[_0x48c2('0x34b')]],'anchor':_0x48c2('0x265'),'align':_0x5bb23e[_0x48c2('0x352')],'offset':-0x2}},'scales':{'x':{'ticks':{'color':_0x48c2('0x25c')}},'y':{'ticks':{'color':_0x5bb23e[_0x48c2('0x351')]},'grid':{'color':function(_0x571fda){if(_0x5bb23e['AKhcm'](_0x571fda['tick']['value'],0x0)){return'#2e2e2e';}else if(_0x5bb23e['fPCAo'](_0x571fda['tick'][_0x48c2('0xb')],0x0)){return _0x5bb23e[_0x48c2('0x34b')];}return _0x48c2('0x25c');}}}}}});};createChartTickTrisma();function addDataChartLast10Dig_Digit(_0x50487f,_0x937665,_0x337a56){var _0x2416e7={'RJLJR':function(_0x45f3ca,_0x7a6edf){return _0x45f3ca<_0x7a6edf;}};const _0x31f894=_0x50487f['data'];if(_0x31f894['datasets'][_0x48c2('0x12')]>0x0){for(let _0x4a04b5=0x0;_0x2416e7['RJLJR'](_0x4a04b5,_0x31f894['datasets'][_0x48c2('0x12')]);++_0x4a04b5){_0x31f894[_0x48c2('0x353')][_0x4a04b5][_0x48c2('0xae')]=_0x937665;_0x31f894[_0x48c2('0x353')][_0x4a04b5][_0x48c2('0x7e')]=_0x337a56;}_0x50487f[_0x48c2('0x354')][_0x48c2('0x355')][_0x48c2('0x356')]['color']=_0x337a56;_0x50487f['update']('none');}}function addDataChartLast10Dig_Change(_0x4f18e7,_0x9959ba,_0x4d710d){var _0x38560b={'fglQN':function(_0x4d098d,_0x530a25){return _0x4d098d>_0x530a25;},'gjDIu':_0x48c2('0x357')};const _0x6c0a3=_0x4f18e7[_0x48c2('0xae')];if(_0x38560b[_0x48c2('0x358')](_0x6c0a3['datasets'][_0x48c2('0x12')],0x0)){for(let _0xf51ccf=0x0;_0xf51ccf<_0x6c0a3[_0x48c2('0x353')]['length'];++_0xf51ccf){_0x6c0a3[_0x48c2('0x353')][_0xf51ccf]['data']=_0x9959ba;_0x6c0a3['datasets'][_0xf51ccf][_0x48c2('0x7e')]=_0x4d710d;}_0x4f18e7['options'][_0x48c2('0x355')][_0x48c2('0x356')][_0x48c2('0x359')]=_0x4d710d;_0x4f18e7[_0x48c2('0x35a')](_0x38560b[_0x48c2('0x35b')]);}}function addDataChart20Cater(_0x1980c2,_0x4b04d9,_0x2b787e){var _0x5b0417={'RZOLf':function(_0x2070c9,_0x2d4200){return _0x2070c9>_0x2d4200;},'jXYcA':function(_0x476353,_0x5706a8){return _0x476353<_0x5706a8;},'jXNBr':_0x48c2('0x357')};const _0x466830=_0x1980c2['data'];if(_0x5b0417[_0x48c2('0x35c')](_0x466830[_0x48c2('0x353')][_0x48c2('0x12')],0x0)){for(let _0x43f677=0x0;_0x5b0417['jXYcA'](_0x43f677,_0x466830[_0x48c2('0x353')][_0x48c2('0x12')]);++_0x43f677){_0x466830[_0x48c2('0x353')][_0x43f677][_0x48c2('0xae')]=_0x4b04d9;_0x466830[_0x48c2('0x353')][_0x43f677][_0x48c2('0x7e')]=_0x2b787e;}_0x1980c2[_0x48c2('0x354')][_0x48c2('0x355')][_0x48c2('0x356')][_0x48c2('0x359')]=_0x2b787e;_0x1980c2['update'](_0x5b0417[_0x48c2('0x35d')]);}}function addDataChartLast10Tick_Tick(_0x4a636a,_0x12af6f,_0x377d93){var _0x3d7bb3={'qtdSR':function(_0x584ff6,_0x529b29){return _0x584ff6>_0x529b29;},'TLkeM':'none'};const _0x13d0b8=_0x4a636a[_0x48c2('0xae')];if(_0x3d7bb3['qtdSR'](_0x13d0b8[_0x48c2('0x353')][_0x48c2('0x12')],0x0)){for(let _0x3caa74=0x0;_0x3caa74<_0x13d0b8[_0x48c2('0x353')][_0x48c2('0x12')];++_0x3caa74){_0x13d0b8[_0x48c2('0x353')][_0x3caa74][_0x48c2('0xae')]=_0x12af6f;_0x13d0b8[_0x48c2('0x353')][_0x3caa74]['backgroundColor']=_0x377d93;}_0x4a636a[_0x48c2('0x354')][_0x48c2('0x355')][_0x48c2('0x356')]['color']=_0x377d93;_0x4a636a[_0x48c2('0x35a')](_0x3d7bb3[_0x48c2('0x35e')]);}}function addDataChartLast10Tick_Change(_0xc9c820,_0x1b7384,_0x542d6f){var _0x167ee1={'CajLK':function(_0x5ba182,_0x4a7d82){return _0x5ba182>_0x4a7d82;},'LjhtH':function(_0x44d025,_0x288b0f){return _0x44d025<_0x288b0f;},'JlZFj':_0x48c2('0x357')};const _0x26a176=_0xc9c820[_0x48c2('0xae')];if(_0x167ee1[_0x48c2('0x35f')](_0x26a176['datasets'][_0x48c2('0x12')],0x0)){for(let _0x301e33=0x0;_0x167ee1[_0x48c2('0x360')](_0x301e33,_0x26a176[_0x48c2('0x353')][_0x48c2('0x12')]);++_0x301e33){_0x26a176[_0x48c2('0x353')][_0x301e33][_0x48c2('0xae')]=_0x1b7384;_0x26a176['datasets'][_0x301e33][_0x48c2('0x7e')]=_0x542d6f;}_0xc9c820[_0x48c2('0x354')][_0x48c2('0x355')][_0x48c2('0x356')][_0x48c2('0x359')]=_0x542d6f;_0xc9c820['update'](_0x167ee1['JlZFj']);}}function addDataChart20TickWorm(_0x1beaad,_0x4f34d0,_0x48e5b4,_0x2a5628){var _0x55ae07={'fAmKR':function(_0x4dd67f,_0x1ff6fb){return _0x4dd67f>_0x1ff6fb;},'cseGR':function(_0xd958d4,_0x8b0776){return _0xd958d4<_0x8b0776;},'cVewY':_0x48c2('0x357')};const _0xf1de22=_0x1beaad['data'];if(_0x55ae07[_0x48c2('0x361')](_0xf1de22[_0x48c2('0x353')][_0x48c2('0x12')],0x0)){for(let _0x2125f0=0x0;_0x55ae07[_0x48c2('0x362')](_0x2125f0,_0xf1de22[_0x48c2('0x353')]['length']);++_0x2125f0){_0xf1de22[_0x48c2('0x353')][_0x2125f0][_0x48c2('0xae')]=_0x4f34d0;_0xf1de22[_0x48c2('0x353')][_0x2125f0]['backgroundColor']=_0x48e5b4;_0xf1de22[_0x48c2('0x353')][_0x2125f0]['pointStyle']=_0x2a5628;}_0x1beaad['options'][_0x48c2('0x355')][_0x48c2('0x356')][_0x48c2('0x359')]=_0x48e5b4;_0x1beaad[_0x48c2('0x35a')](_0x55ae07[_0x48c2('0x363')]);}}function addDataChartticktrisma(_0x8e47ae,_0x3cc681){var _0x16adef={'yojbA':function(_0x3866c8,_0x4a97a5){return _0x3866c8>_0x4a97a5;},'DAUZr':function(_0x331766,_0x49a533){return _0x331766<_0x49a533;},'UjrkD':_0x48c2('0x357')};const _0x38ae30=_0x8e47ae['data'];if(_0x16adef[_0x48c2('0x364')](_0x38ae30[_0x48c2('0x353')][_0x48c2('0x12')],0x0)){for(let _0x4070b7=0x0;_0x16adef[_0x48c2('0x365')](_0x4070b7,_0x38ae30['datasets'][_0x48c2('0x12')]);++_0x4070b7){_0x38ae30[_0x48c2('0x353')][_0x4070b7][_0x48c2('0xae')]=_0x3cc681[_0x4070b7];}_0x8e47ae[_0x48c2('0x35a')](_0x16adef['UjrkD']);}}function calculateMovingAverage(_0x3a273e,_0x158664){var _0xb9e376={'yJydg':_0x48c2('0x366'),'Nbszk':function(_0x5d41e2,_0x5f09f1){return _0x5d41e2<_0x5f09f1;},'hrbXY':function(_0xf93730,_0x2d5e52){return _0xf93730-_0x2d5e52;},'agjLY':function(_0x4be342,_0x454e69){return _0x4be342+_0x454e69;},'uIDxr':function(_0x3ad6ec,_0x270906){return _0x3ad6ec/_0x270906;},'zHKuC':function(_0x5121d5,_0x334de2){return _0x5121d5<_0x334de2;}};var _0x14c406=_0xb9e376[_0x48c2('0x367')][_0x48c2('0xe')]('|'),_0x48f6ce=0x0;while(!![]){switch(_0x14c406[_0x48f6ce++]){case'0':var _0x26c7f4=[];continue;case'1':var _0x27351b=_0x3a273e[_0x48c2('0x12')]-_0x158664-0x1;continue;case'2':for(var _0x105262=0x0;_0xb9e376['Nbszk'](_0x105262,_0x27351b);++_0x105262){_0xa3da3a=_0xb9e376[_0x48c2('0x368')](_0xa3da3a,_0x3a273e[_0x105262]);_0xa3da3a=_0xa3da3a+_0x3a273e[_0xb9e376[_0x48c2('0x369')](_0x105262,_0x158664)];_0x26c7f4[_0x48c2('0x141')](_0xb9e376['uIDxr'](_0xa3da3a,_0x158664));}continue;case'3':if(_0x3a273e[_0x48c2('0x12')]<_0x158664){return _0x26c7f4;}continue;case'4':var _0xa3da3a=0x0;continue;case'5':return _0x26c7f4;case'6':for(var _0x105262=0x0;_0xb9e376[_0x48c2('0x36a')](_0x105262,_0x158664);++_0x105262){_0xa3da3a+=_0x3a273e[_0x105262];}continue;case'7':_0x26c7f4[_0x48c2('0x141')](_0xb9e376[_0x48c2('0x36b')](_0xa3da3a,_0x158664));continue;}break;}}function calculateRSI(_0x547518,_0x5d2d33){var _0x2014bf={'JzvPC':function(_0x435eb0,_0x3efa44){return _0x435eb0<_0x3efa44;},'GOXNO':function(_0x1d4dc3,_0x348542){return _0x1d4dc3-_0x348542;},'jWPzb':function(_0x270241,_0x233f9e){return _0x270241<_0x233f9e;},'KmGIg':function(_0x407789,_0x117034){return _0x407789/_0x117034;}};let _0x414faa=0x0;for(let _0x26b2a1=0x1;_0x2014bf[_0x48c2('0x36c')](_0x26b2a1,_0x5d2d33);_0x26b2a1++){_0x414faa+=Math[_0x48c2('0x36d')](0x0,_0x2014bf[_0x48c2('0x36e')](_0x547518[_0x26b2a1],_0x547518[_0x2014bf[_0x48c2('0x36e')](_0x26b2a1,0x1)]));}_0x414faa/=_0x5d2d33;let _0x5eee84=0x0;for(let _0x293c6a=0x1;_0x2014bf[_0x48c2('0x36f')](_0x293c6a,_0x5d2d33);_0x293c6a++){_0x5eee84+=Math['max'](0x0,_0x547518[_0x293c6a-0x1]-_0x547518[_0x293c6a]);}_0x5eee84/=_0x5d2d33;const _0x5c20e8=_0x2014bf[_0x48c2('0x36e')](0x64,_0x2014bf[_0x48c2('0x370')](0x64,0x1+_0x414faa/_0x5eee84));return _0x5c20e8;}function calculateBollingerBands(_0x3c5e9b,_0x316fb6,_0x5bf8f8){var _0x4b00cc={'zMHZM':function(_0x4d8fb8,_0x47bf51){return _0x4d8fb8<_0x47bf51;},'CYftK':function(_0x541c61,_0x9505f0){return _0x541c61<_0x9505f0;},'eEpZZ':function(_0x34f684,_0x7541a1){return _0x34f684-_0x7541a1;},'XSgMv':function(_0x2f6451,_0x51d0a8){return _0x2f6451/_0x51d0a8;},'dJrmY':function(_0x1bf953,_0x5817a2){return _0x1bf953+_0x5817a2;},'yAlzm':function(_0x1f08b7,_0x3d5338){return _0x1f08b7*_0x3d5338;}};_0x3c5e9b=_0x3c5e9b['slice'](-_0x316fb6);let _0x392c84=0x0;for(let _0x154416=0x0;_0x4b00cc['zMHZM'](_0x154416,_0x316fb6);_0x154416++){_0x392c84+=_0x3c5e9b[_0x154416];}const _0x1d8251=_0x392c84/_0x316fb6;_0x392c84=0x0;for(let _0x202f1a=0x0;_0x4b00cc[_0x48c2('0x371')](_0x202f1a,_0x316fb6);_0x202f1a++){_0x392c84+=Math[_0x48c2('0x372')](_0x4b00cc[_0x48c2('0x373')](_0x3c5e9b[_0x202f1a],_0x1d8251),0x2);}const _0x5c2bbd=Math['sqrt'](_0x4b00cc[_0x48c2('0x374')](_0x392c84,_0x316fb6));const _0x5d8218=_0x4b00cc['dJrmY'](_0x1d8251,_0x4b00cc[_0x48c2('0x375')](_0x5c2bbd,_0x5bf8f8));const _0x4557ae=_0x4b00cc[_0x48c2('0x373')](_0x1d8251,_0x4b00cc[_0x48c2('0x375')](_0x5c2bbd,_0x5bf8f8));return[_0x5d8218,_0x1d8251,_0x4557ae];}let thelast10digits_digit_list,thelast10digits_tickmove_list,thelast10digits_change_list,thelast10digits_digitmove_list,thelast10digits_digitgraph_list;let digitstatistic_list;let thelast20digits_digitcater_list;let thelast20digits_digitevenodd_list;let thelast10ticks_tick_list,thelast10ticks_move_list,thelast10ticks_worm_list,thelast10ticks_sentiment_list,thelast10ticks_change_list,thelast10ticks_changeperc_list;let thelast20tickworm_history_list,thelast20tickworm_current_list;let tick_sma_list;const showUpAllAboutTick=(_0x15a26b,_0x4f28a8,_0x9a9ef4,_0x4e96da)=>{var _0x4008ff={'YDNfH':function(_0x26497a,_0x85aec2){return _0x26497a===_0x85aec2;},'Ujesd':_0x48c2('0x376'),'kIqaK':function(_0x22ee97,_0x4b9a62){return _0x22ee97===_0x4b9a62;},'QOaQN':function(_0x919ab2,_0x121b16){return _0x919ab2!=_0x121b16;},'apVsO':'digitstatistic','JfPlW':_0x48c2('0x377'),'hmAsQ':_0x48c2('0x357'),'gEVGI':function(_0x369de0,_0x2599b0){return _0x369de0<=_0x2599b0;},'FmwWC':function(_0x5718ea,_0x361e8a){return _0x5718ea*_0x361e8a;},'ZFwcp':function(_0x4e934f,_0x22a226){return _0x4e934f==_0x22a226;},'BLDSp':function(_0x5a6914,_0x2fd4c6){return _0x5a6914+_0x2fd4c6;},'KBHtP':'digitstatistic_','EweWt':function(_0x558263,_0x12585f){return _0x558263+_0x12585f;},'TiXQh':function(_0x32ec45,_0xb6a9b7){return _0x32ec45+_0xb6a9b7;},'UEZqF':function(_0x3801da,_0x2ded61){return _0x3801da/_0x2ded61;},'Tdvlg':'_least','mIKgD':function(_0x4712c5,_0x11fa29){return _0x4712c5+_0x11fa29;},'jhAir':function(_0x46d46c,_0x226d44){return _0x46d46c+_0x226d44;},'iZsVm':_0x48c2('0x378'),'dRRIU':function(_0x5646bf,_0x48f492){return _0x5646bf(_0x48f492);},'bOdQf':function(_0x124680,_0x122975){return _0x124680+_0x122975;},'AmHSx':function(_0x15d22c,_0x15ee48){return _0x15d22c+_0x15ee48;},'yNirr':function(_0xea0c9,_0x400e55){return _0xea0c9!=_0x400e55;},'kdfCi':function(_0x46e68d,_0x2cf464){return _0x46e68d!=_0x2cf464;},'mDeiz':'digitstatistic_summ_','mtHAK':function(_0x3e35c8,_0x2ae45d){return _0x3e35c8+_0x2ae45d;},'olsQQ':function(_0x1d0013,_0x3f8ac0){return _0x1d0013*_0x3f8ac0;},'HzZYw':function(_0x3e553f,_0x38d2f1){return _0x3e553f+_0x38d2f1;},'dsfSq':function(_0x2aa21a,_0x47f44d){return _0x2aa21a*_0x47f44d;},'RJtbz':function(_0x363dd1,_0x29dc03){return _0x363dd1+_0x29dc03;},'rUWke':function(_0xbfdd11,_0x347a8d){return _0xbfdd11+_0x347a8d;},'fGPHW':_0x48c2('0x379'),'GaZdu':function(_0xdc0477,_0x46216b){return _0xdc0477===_0x46216b;},'dpPms':_0x48c2('0x37a'),'Autze':_0x48c2('0x37b'),'Ctzxu':function(_0x3bddb5,_0x51c2d7){return _0x3bddb5==_0x51c2d7;},'zdIQO':'div_thelast10digits','XnmWF':_0x48c2('0x37c'),'mkIja':function(_0x1ffd53,_0x3f9e06){return _0x1ffd53+_0x3f9e06;},'Pdoih':_0x48c2('0x37d'),'GOhPw':function(_0x3e1ed9,_0xd9cfb0){return _0x3e1ed9-_0xd9cfb0;},'enTdT':function(_0x5aedaa,_0x967cf2){return _0x5aedaa<_0x967cf2;},'TycjB':_0x48c2('0x37e'),'MctmT':function(_0x53bd0e,_0x323529){return _0x53bd0e>_0x323529;},'tkDgb':_0x48c2('0x37f'),'DaDIG':function(_0x3ebd0d,_0x48d02a){return _0x3ebd0d<_0x48d02a;},'OWIjY':_0x48c2('0x380'),'DDrho':_0x48c2('0x381'),'PxsLq':function(_0x8dd0c2,_0x34903d){return _0x8dd0c2<_0x34903d;},'oVJao':function(_0x267b74,_0x12fb4d){return _0x267b74+_0x12fb4d;},'TaMLu':_0x48c2('0x382'),'ZWyea':'thelast10digits_digitgraph_','nqpHC':function(_0x11991e,_0x5057ac){return _0x11991e>_0x5057ac;},'cjheI':function(_0x46011c,_0x3caa5f){return _0x46011c<_0x3caa5f;},'eTtER':function(_0x350431,_0x550ec9){return _0x350431+_0x550ec9;},'KHOgP':function(_0x1f0fcb,_0x3994a8){return _0x1f0fcb+_0x3994a8;},'AlohD':function(_0x3f88b8,_0x3225b8){return _0x3f88b8>_0x3225b8;},'EwXyE':function(_0x24e6b6,_0xb40988){return _0x24e6b6<_0xb40988;},'iWLvB':function(_0x494f3f,_0x1712d3){return _0x494f3f+_0x1712d3;},'FCDnR':function(_0x34190d,_0x56be76,_0x12dc0f,_0x5316e3){return _0x34190d(_0x56be76,_0x12dc0f,_0x5316e3);},'NzeZj':function(_0x42391d,_0x4c4270,_0x5a5c2f,_0x13d385){return _0x42391d(_0x4c4270,_0x5a5c2f,_0x13d385);},'cJHAw':function(_0x42d156,_0x15c359){return _0x42d156!=_0x15c359;},'fTeIx':_0x48c2('0x383'),'heopC':_0x48c2('0x384'),'yKMeZ':'div_thelast20digitscaterzian','pwFtj':_0x48c2('0x385'),'HZDrt':function(_0x2cab6b,_0x3bed52){return _0x2cab6b<_0x3bed52;},'smSOW':function(_0x2e66b5,_0xfddde7){return _0x2e66b5-_0xfddde7;},'VQwUs':'thelast20digits_digitcater_','KLQpW':function(_0x521196,_0x37de33){return _0x521196+_0x37de33;},'veQgd':function(_0x4eb72b,_0x2eba3a){return _0x4eb72b>_0x2eba3a;},'sVOGo':function(_0x296518,_0x350947){return _0x296518<_0x350947;},'mLrcT':function(_0x3c688b,_0xbf1915){return _0x3c688b*_0xbf1915;},'HBozg':function(_0x380779,_0x4446ed){return _0x380779===_0x4446ed;},'Xvntd':function(_0x1e0a1f,_0x1307e6){return _0x1e0a1f!=_0x1307e6;},'RrsfC':function(_0x5587f2,_0xd145){return _0x5587f2==_0xd145;},'DUJwP':_0x48c2('0x386'),'kKvcx':'thelast20digits_digitevenodd_','RUpKW':function(_0xea344f,_0x550d5c){return _0xea344f-_0x550d5c;},'erHPi':function(_0xc18659,_0x16bb22){return _0xc18659+_0x16bb22;},'CvZHk':'Even','HSkRc':_0x48c2('0x387'),'JTSLE':function(_0x190f97,_0x3e6cff){return _0x190f97-_0x3e6cff;},'tvVaQ':_0x48c2('0x388'),'dJYiD':_0x48c2('0x389'),'rREZQ':function(_0x52f504,_0x597d24){return _0x52f504*_0x597d24;},'sfZln':function(_0x415892,_0xebf219){return _0x415892/_0xebf219;},'rMcMy':function(_0x5880a,_0x569211){return _0x5880a/_0x569211;},'yeeID':'_rise','qgFQp':_0x48c2('0x38a'),'NGFtC':function(_0x1a5e5f,_0x30d91c){return _0x1a5e5f+_0x30d91c;},'QVzIF':'_fall','RDVpy':function(_0xae030a,_0xd56244){return _0xae030a+_0xd56244;},'psZnt':function(_0x1e1013,_0x38b0ac){return _0x1e1013===_0x38b0ac;},'OUDnB':function(_0x38caeb,_0x3a3e56){return _0x38caeb===_0x3a3e56;},'qSpVv':function(_0x4ac64a,_0x3b8e43){return _0x4ac64a!=_0x3b8e43;},'biQvt':_0x48c2('0x38b'),'ICokV':_0x48c2('0x38c'),'dKcZZ':function(_0x51f31f,_0x30cb6a){return _0x51f31f<_0x30cb6a;},'PPscL':function(_0x3d47b9,_0x16c52a){return _0x3d47b9==_0x16c52a;},'WaXVc':function(_0x242b2d,_0x1b0410){return _0x242b2d%_0x1b0410;},'elsxI':function(_0x5371ac,_0x38cf05){return _0x5371ac*_0x38cf05;},'BvuYQ':function(_0x38499f,_0x414a9c){return _0x38499f+_0x414a9c;},'zzZPL':_0x48c2('0x38d'),'NaAjF':function(_0x39ffd4,_0x424e37){return _0x39ffd4+_0x424e37;},'fspCH':_0x48c2('0x38e'),'VQrRP':function(_0x4ca352,_0xacc243){return _0x4ca352+_0xacc243;},'lHbrR':_0x48c2('0x38f'),'aSJhV':_0x48c2('0x390'),'KzKEM':_0x48c2('0x391'),'ANqRj':function(_0xc6f9cd,_0x34708f){return _0xc6f9cd<=_0x34708f;},'SJuuN':function(_0x4854f9,_0x121fc8){return _0x4854f9*_0x121fc8;},'qqohM':function(_0x205e13,_0x207bea){return _0x205e13+_0x207bea;},'jksLD':function(_0x22f77c,_0x2b6134){return _0x22f77c+_0x2b6134;},'FHgDS':_0x48c2('0x392'),'tITKs':_0x48c2('0x393'),'lkRTJ':_0x48c2('0x394'),'bDUZM':function(_0x5129a1,_0x338129){return _0x5129a1/_0x338129;},'IqrMh':function(_0x51f270,_0x2fa418){return _0x51f270+_0x2fa418;},'lNxiI':_0x48c2('0x395'),'fDygH':function(_0x59040f,_0x2cf57b){return _0x59040f+_0x2cf57b;},'eLTUx':function(_0x5d3189,_0x51de24){return _0x5d3189*_0x51de24;},'Xdwcm':function(_0x48bc86,_0x1d416e){return _0x48bc86+_0x1d416e;},'WpxCo':_0x48c2('0x396'),'gGKaw':function(_0xd958e1,_0x5c03b8){return _0xd958e1+_0x5c03b8;},'ZKaxw':function(_0xf9440f,_0x436fc9){return _0xf9440f+_0x436fc9;},'oWgYg':function(_0x35c4c2,_0x2bff47){return _0x35c4c2+_0x2bff47;},'KEeub':function(_0x2b8801,_0x13b7b2){return _0x2b8801*_0x13b7b2;},'fPEIC':function(_0x3893a4,_0x2ff2b7){return _0x3893a4/_0x2ff2b7;},'kvqqk':function(_0x1b8afc,_0x292258){return _0x1b8afc===_0x292258;},'MGFgU':function(_0x6081a5,_0x2e2a1b){return _0x6081a5!=_0x2e2a1b;},'AIfcf':_0x48c2('0x397'),'jOEyM':_0x48c2('0x398'),'VadnY':'8|16|15|0|21|20|3|19|10|1|11|14|9|7|12|2|4|13|6|5|17|18','STkNn':function(_0x545ebb,_0x1df51a){return _0x545ebb+_0x1df51a;},'SXAlR':_0x48c2('0x399'),'lJHHB':_0x48c2('0x39a'),'lMRol':function(_0x1bc97f,_0x47697a){return _0x1bc97f<_0x47697a;},'UJuNK':function(_0x53b43d,_0x1742f3){return _0x53b43d>_0x1742f3;},'zkOCf':_0x48c2('0x39b'),'pUvnM':'thelast10ticks_worm_','deIHE':'thelast10ticks_change_','Kqspd':function(_0x473c30,_0x5bc14d){return _0x473c30<_0x5bc14d;},'VQPJn':function(_0x4e2f26,_0x32cf97){return _0x4e2f26+_0x32cf97;},'qCplA':function(_0x5c9894,_0x453404){return _0x5c9894<_0x453404;},'aZHph':function(_0x5d2c31,_0x1fdfcb){return _0x5d2c31-_0x1fdfcb;},'WRmzy':_0x48c2('0x39c'),'iaCie':function(_0x2e7e92,_0x2663fb){return _0x2e7e92<_0x2663fb;},'jTZTq':function(_0x489307,_0x401c8e){return _0x489307-_0x401c8e;},'FmlHc':function(_0x3881c3,_0x16c8e4){return _0x3881c3>_0x16c8e4;},'MGnrn':function(_0xafd06d,_0x52f72b){return _0xafd06d-_0x52f72b;},'ngemQ':function(_0x264eda,_0x4391c9){return _0x264eda>_0x4391c9;},'YKBaP':function(_0x405edd,_0x36fe67){return _0x405edd-_0x36fe67;},'EGXww':function(_0x317629,_0x67294c){return _0x317629<_0x67294c;},'hlYoV':function(_0x589df2,_0x353eed){return _0x589df2<_0x353eed;},'SsdXg':function(_0x574411,_0x35d45b){return _0x574411-_0x35d45b;},'WvuHp':function(_0x512112,_0x2005b3){return _0x512112-_0x2005b3;},'ewNdb':function(_0x2e57b3,_0x3288c8){return _0x2e57b3>_0x3288c8;},'YoyiZ':function(_0x549552,_0x217590){return _0x549552-_0x217590;},'KdDaK':function(_0x3f96d3,_0x253115){return _0x3f96d3>_0x253115;},'aNpfa':function(_0x2fb4eb,_0x4d2681){return _0x2fb4eb+_0x4d2681;},'gjEFw':function(_0x35e5b4,_0x4bb272){return _0x35e5b4+_0x4bb272;},'DUoFN':function(_0x37c96f,_0x42140a){return _0x37c96f*_0x42140a;},'aPFeS':function(_0x331aa8,_0x3d3c7b){return _0x331aa8-_0x3d3c7b;},'kecbV':function(_0x112799,_0x1f66a1){return _0x112799-_0x1f66a1;},'wkeqY':function(_0x57b1a6,_0x37b7a9){return _0x57b1a6*_0x37b7a9;},'NGOlT':function(_0x36a00a,_0x10ce41){return _0x36a00a==_0x10ce41;},'kKsNP':_0x48c2('0x39d'),'UaqCj':function(_0x3587b,_0x3a7bda){return _0x3587b==_0x3a7bda;},'DATWs':_0x48c2('0x39e'),'wUjiW':'Green','mreQx':function(_0x591d77,_0x59a9a3){return _0x591d77+_0x59a9a3;},'Cqdqr':function(_0x10f241,_0x184ad2,_0x5c74f9,_0xc09d38){return _0x10f241(_0x184ad2,_0x5c74f9,_0xc09d38);},'VskZE':function(_0x4ac54b,_0x5e0de5){return _0x4ac54b===_0x5e0de5;},'bjner':function(_0x1e59a4,_0x3d2410){return _0x1e59a4!=_0x3d2410;},'VQbAw':'thelast20tickworm','NCPDD':'div_thelast20tickworm','JeMVv':function(_0x4eeb3e,_0x52bced){return _0x4eeb3e<_0x52bced;},'juvwb':'1|4|2|3|0','EvuPs':_0x48c2('0x39f'),'GNLIB':function(_0x59fe8f,_0x5bd29a){return _0x59fe8f==_0x5bd29a;},'kJjeR':function(_0xdad05e,_0x41a590){return _0xdad05e==_0x41a590;},'PiHla':function(_0x4b6f45,_0x3a8202){return _0x4b6f45+_0x3a8202;},'uSBCi':function(_0x4795a5,_0x2528ff){return _0x4795a5==_0x2528ff;},'NgBJS':function(_0x18b690,_0x11c212){return _0x18b690+_0x11c212;},'GJIsn':function(_0x4d2e42,_0x2d0c0a){return _0x4d2e42<_0x2d0c0a;},'cdPsB':_0x48c2('0x3a0'),'trBZY':function(_0x51af76,_0x312696){return _0x51af76-_0x312696;},'HyxwE':_0x48c2('0x3a1'),'gbViM':'thelast20tickworm_current_','Frgph':function(_0x2756e1,_0x3589ca){return _0x2756e1==_0x3589ca;},'Wvhsj':function(_0x302a89,_0x396be9){return _0x302a89==_0x396be9;},'YqQmb':function(_0x4f9c02,_0x404224){return _0x4f9c02+_0x404224;},'uMfIo':function(_0x2deb4b,_0xbc0859){return _0x2deb4b+_0xbc0859;},'enivo':function(_0x345f7c,_0x264122){return _0x345f7c+_0x264122;},'JOyID':function(_0x4054a5,_0x4adca1){return _0x4054a5==_0x4adca1;},'ZoeEm':function(_0x2f3b47,_0x206011){return _0x2f3b47-_0x206011;},'ufpXg':function(_0x5f5b75,_0x4cb567,_0x44a803,_0x562d2e,_0x1bf03f){return _0x5f5b75(_0x4cb567,_0x44a803,_0x562d2e,_0x1bf03f);},'KJGGB':_0x48c2('0x3a2'),'JksOb':_0x48c2('0x3a3'),'evwUP':_0x48c2('0x3a4'),'FYCXU':_0x48c2('0x3a5'),'XFtWa':'0|5|4|2|3|1','hEjxA':function(_0x2897c4,_0x59a928){return _0x2897c4+_0x59a928;},'LbBsA':_0x48c2('0x3a6'),'sMKHY':function(_0x5c3d60,_0xa42f00){return _0x5c3d60-_0xa42f00;},'wnMOr':function(_0x4c1aeb,_0x4df6fb){return _0x4c1aeb+_0x4df6fb;},'xtHgo':_0x48c2('0x3a7'),'cAWtJ':function(_0x530d20,_0x26d3b5){return _0x530d20-_0x26d3b5;},'cPpqn':function(_0xf0cbce,_0x24f5e0){return _0xf0cbce<_0x24f5e0;},'wMOiX':function(_0x2b2a38,_0x4f5fae){return _0x2b2a38-_0x4f5fae;},'fgsme':function(_0x2e5597,_0x320ccb){return _0x2e5597>_0x320ccb;},'Ffemw':function(_0x47b4d1,_0xea03a9){return _0x47b4d1-_0xea03a9;},'aMThg':function(_0x9059cd,_0x3a5f90){return _0x9059cd+_0x3a5f90;},'PzliU':function(_0xfba28c,_0x48c37f){return _0xfba28c-_0x48c37f;},'VLMjN':function(_0xeb5438,_0x22d2ca){return _0xeb5438<_0x22d2ca;},'Zvpoi':function(_0x3ac818,_0x387f6c){return _0x3ac818>_0x387f6c;},'aWPZz':function(_0x5d260f,_0x4d9fb6,_0x55a0f1){return _0x5d260f(_0x4d9fb6,_0x55a0f1);},'sLFKn':function(_0x522cb4,_0x4b5d2a){return _0x522cb4===_0x4b5d2a;},'IpTSb':function(_0x294e6a,_0x2ff7d7){return _0x294e6a!=_0x2ff7d7;},'euUOd':'detail3ticks','ZJmtB':function(_0x200231,_0x52f341){return _0x200231==_0x52f341;},'wEGTP':_0x48c2('0x3a8'),'IYzuS':function(_0x50ab7d,_0x55373d){return _0x50ab7d<=_0x55373d;},'VwKSm':function(_0x435b13,_0x3a7c97){return _0x435b13+_0x3a7c97;},'iVtBe':_0x48c2('0x3a9'),'YufBQ':function(_0x10bac4,_0x22abff){return _0x10bac4<_0x22abff;},'RDsRA':function(_0x58aee8,_0x96981){return _0x58aee8<_0x96981;},'FoWQr':function(_0x9689e3,_0x469f92){return _0x9689e3+_0x469f92;},'YxEUt':function(_0x33e14c,_0x2d07b8){return _0x33e14c+_0x2d07b8;},'jIHvv':function(_0x289b34,_0x27917c){return _0x289b34==_0x27917c;},'ejKUi':function(_0x2a2599){return _0x2a2599();}};let _0x4881c3;let _0x314b59=_0x4008ff[_0x48c2('0x3aa')](btn_run[_0x48c2('0x3ab')][_0x48c2('0xe')]('/')[_0x48c2('0x3ac')](),_0x4008ff[_0x48c2('0x3ad')])||_0x4008ff['kIqaK'](btn_run[_0x48c2('0x3ab')]['split']('/')[_0x48c2('0x3ac')](),_0x48c2('0x37a'))&&_0x4008ff[_0x48c2('0x3ae')](mainWorkspaceCode[_0x48c2('0x1c')](_0x4008ff[_0x48c2('0x3af')]),-0x1);if(_0x314b59&&selData['value']==_0x4008ff['apVsO']){document[_0x48c2('0x2d')](_0x4008ff['JfPlW'])['style']['display']='block';}else{document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x3b0')])[_0x48c2('0x7d')][_0x48c2('0x3b1')]=_0x4008ff[_0x48c2('0x3b2')];}if(_0x314b59){let _0x5b9c8d=[],_0x4dfac0,_0x55765a,_0x13f77c,_0x36c497,_0x20179d,_0x4525ec,_0x22a80a,_0x5c993f,_0x432d67;digitstatistic_list=[];for(k=0x1;_0x4008ff[_0x48c2('0x3b3')](k,0x6);k++){_0x4881c3=_0x4f28a8['slice'](_0x4008ff[_0x48c2('0x3b4')](digitstatistic_noofticks[k][_0x48c2('0xb')],-0x1));_0x5b9c8d=[0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0];_0x36c497=[];_0x20179d=[];digitstatistic_list[k]=[];for(const _0x1e6d69 of _0x4881c3){_0x5b9c8d[_0x1e6d69]=_0x5b9c8d[_0x1e6d69]?_0x5b9c8d[_0x1e6d69]+0x1:0x1;}_0x55765a=Math[_0x48c2('0x36d')](..._0x5b9c8d);_0x13f77c=Math[_0x48c2('0x3b5')](..._0x5b9c8d);for(i=0x0;i<=0x9;i++){if(_0x4008ff['ZFwcp'](_0x5b9c8d[i],_0x55765a)){_0x36c497['push'](i);document['getElementById'](_0x4008ff['BLDSp'](_0x4008ff[_0x48c2('0x3b6')]+k+'_',i))[_0x48c2('0x7d')][_0x48c2('0x7e')]=colorRise;}else if(_0x5b9c8d[i]==_0x13f77c){_0x20179d[_0x48c2('0x141')](i);document[_0x48c2('0x2d')](_0x4008ff['BLDSp'](_0x4008ff[_0x48c2('0x3b7')](_0x4008ff[_0x48c2('0x3b8')](_0x4008ff['KBHtP'],k),'_'),i))[_0x48c2('0x7d')]['backgroundColor']=colorFall;}else{document[_0x48c2('0x2d')](_0x4008ff['EweWt'](_0x4008ff['TiXQh'](_0x4008ff['KBHtP']+k,'_'),i))[_0x48c2('0x7d')][_0x48c2('0x7e')]=colorNo;}_0x4dfac0=(_0x4008ff[_0x48c2('0x3b9')](_0x5b9c8d[i],_0x4881c3[_0x48c2('0x12')])*0x64)[_0x48c2('0x115')](0x2);document['getElementById'](_0x4008ff[_0x48c2('0x3ba')](_0x4008ff['TiXQh'](_0x4008ff['KBHtP']+k,'_'),i))['innerText']=_0x4dfac0;digitstatistic_list[k][i]=_0x4008ff['FmwWC'](_0x4dfac0,0x1);}document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x3ba')](_0x4008ff['TiXQh']('digitstatistic_',k),_0x4008ff[_0x48c2('0x3bb')]))[_0x48c2('0x6c')]=_0x20179d;document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x3bc')](_0x4008ff['jhAir'](_0x4008ff[_0x48c2('0x3b6')],k),_0x4008ff[_0x48c2('0x3bd')]))['innerText']=_0x36c497;}_0x432d67=[];_0x5c993f=[];digitstatistic_list[0x7]=[];for(i=0x0;_0x4008ff[_0x48c2('0x3b3')](i,0x9);i++){_0x4525ec=!![];_0x22a80a=!![];for(k=0x1;_0x4008ff[_0x48c2('0x3b3')](k,0x6);k++){var _0x2b72cc=_0x4008ff[_0x48c2('0x3be')](rgbToHex,document['getElementById'](_0x4008ff[_0x48c2('0x3bf')](_0x4008ff[_0x48c2('0x3bf')](_0x4008ff['AmHSx'](_0x4008ff['KBHtP'],k),'_'),i))['style'][_0x48c2('0x7e')]);if(_0x4008ff[_0x48c2('0x3c0')](_0x2b72cc,colorFall)){_0x4525ec=![];}if(_0x4008ff[_0x48c2('0x3c1')](_0x2b72cc,colorRise)){_0x22a80a=![];}}if(_0x4525ec){document['getElementById'](_0x4008ff[_0x48c2('0x3c2')](_0x4008ff[_0x48c2('0x3c3')],i))[_0x48c2('0x6c')]=i;document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x3c4')](_0x4008ff[_0x48c2('0x3c3')],i))['style'][_0x48c2('0x7e')]=colorFall;_0x432d67['push'](i);digitstatistic_list[0x7][i]=_0x4008ff[_0x48c2('0x3c5')](i,0x1);}else if(_0x22a80a){document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x3c4')](_0x4008ff[_0x48c2('0x3c3')],i))['innerText']=i;document['getElementById'](_0x4008ff['HzZYw'](_0x4008ff[_0x48c2('0x3c3')],i))[_0x48c2('0x7d')]['backgroundColor']=colorRise;_0x5c993f[_0x48c2('0x141')](i);digitstatistic_list[0x7][i]=_0x4008ff['dsfSq'](i,0x1);}else{document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x3c6')](_0x4008ff[_0x48c2('0x3c3')],i))['innerText']='';document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x3c7')](_0x4008ff[_0x48c2('0x3c3')],i))[_0x48c2('0x7d')][_0x48c2('0x7e')]='';digitstatistic_list[0x7][i]='';}}document[_0x48c2('0x2d')](_0x48c2('0x3c8'))[_0x48c2('0x6c')]=_0x432d67;document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x3c9')])[_0x48c2('0x6c')]=_0x5c993f;}let _0x226726,_0x5e3e6c,_0x2e02b8,_0xacdd96,_0x5ea549,_0x278fbe;let _0x52d1fa=_0x4008ff['GaZdu'](btn_run['src']['split']('/')[_0x48c2('0x3ac')](),_0x4008ff[_0x48c2('0x3ad')])||_0x4008ff['GaZdu'](btn_run['src'][_0x48c2('0xe')]('/')['pop'](),_0x4008ff['dpPms'])&&mainWorkspaceCode[_0x48c2('0x1c')](_0x4008ff[_0x48c2('0x3ca')])!=-0x1;if(_0x52d1fa&&_0x4008ff['Ctzxu'](selData['value'],'thelast10digits')){document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x3cb')])['style'][_0x48c2('0x3b1')]=_0x48c2('0x384');}else{document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x3cb')])['style']['display']='none';}if(_0x52d1fa){var _0x1008c3=_0x4008ff[_0x48c2('0x3cc')]['split']('|'),_0x23f9c5=0x0;while(!![]){switch(_0x1008c3[_0x23f9c5++]){case'0':_0x226726=_0x15a26b[_0x48c2('0x11e')](-0xb);continue;case'1':thelast10digits_digitmove_list=[];continue;case'2':thelast10digits_digit_list=[];continue;case'3':for(i=0x1;i<_0x5e3e6c['length'];i++){_0x2e02b8=_0x5e3e6c['length']-i;document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x3cd')](_0x4008ff[_0x48c2('0x3ce')],_0x2e02b8))[_0x48c2('0x6c')]=_0x5e3e6c[i];_0xacdd96=_0x5e3e6c[i]-_0x5e3e6c[_0x4008ff[_0x48c2('0x3cf')](i,0x1)];document[_0x48c2('0x2d')]('thelast10digits_change_'+_0x2e02b8)[_0x48c2('0x6c')]=_0x4008ff[_0x48c2('0x3cd')](_0xacdd96>0x0?'+':_0x4008ff[_0x48c2('0x3d0')](_0xacdd96,0x0)?'-':'',Math['abs'](_0xacdd96));document[_0x48c2('0x2d')](_0x4008ff['mkIja'](_0x4008ff['TycjB'],_0x2e02b8))[_0x48c2('0x6c')]=_0x4008ff[_0x48c2('0x3d1')](_0xacdd96,0x0)?_0x4008ff[_0x48c2('0x3d2')]:_0x4008ff[_0x48c2('0x3d3')](_0xacdd96,0x0)?_0x4008ff[_0x48c2('0x3d4')]:'No';thelast10digits_digitmove_list[_0x48c2('0x141')](document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x3cd')](_0x4008ff[_0x48c2('0x3d5')],_0x2e02b8))[_0x48c2('0x6c')]);document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x3d6')]+_0x2e02b8)[_0x48c2('0x7d')][_0x48c2('0x7e')]=document[_0x48c2('0x2d')](_0x48c2('0x37e')+_0x2e02b8)['style'][_0x48c2('0x7e')]=_0x4008ff[_0x48c2('0x3d1')](_0xacdd96,0x0)?colorRise:_0x4008ff[_0x48c2('0x3d7')](_0xacdd96,0x0)?colorFall:colorNo;_0xacdd96=_0x4008ff[_0x48c2('0x3cf')](_0x226726[i],_0x226726[_0x4008ff[_0x48c2('0x3cf')](i,0x1)]);document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x3d8')](_0x48c2('0x382'),_0x2e02b8))['innerText']=_0xacdd96>0x0?_0x4008ff[_0x48c2('0x3d2')]:_0x4008ff[_0x48c2('0x3d7')](_0xacdd96,0x0)?_0x4008ff['OWIjY']:'No';thelast10digits_tickmove_list[_0x48c2('0x141')](document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x3d8')](_0x4008ff[_0x48c2('0x3d9')],_0x2e02b8))[_0x48c2('0x6c')]);document[_0x48c2('0x2d')](_0x4008ff['ZWyea']+_0x2e02b8)[_0x48c2('0x6c')]=(_0x4008ff[_0x48c2('0x3da')](_0xacdd96,0x0)?'+':_0x4008ff['cjheI'](_0xacdd96,0x0)?'-':'')+_0x5e3e6c[i];document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x3db')](_0x4008ff[_0x48c2('0x3ce')],_0x2e02b8))[_0x48c2('0x7d')][_0x48c2('0x7e')]=document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x3dc')](_0x4008ff[_0x48c2('0x3d9')],_0x2e02b8))[_0x48c2('0x7d')][_0x48c2('0x7e')]=document[_0x48c2('0x2d')](_0x4008ff['ZWyea']+_0x2e02b8)[_0x48c2('0x7d')][_0x48c2('0x7e')]=_0x4008ff[_0x48c2('0x3dd')](_0xacdd96,0x0)?colorRise:_0x4008ff[_0x48c2('0x3de')](_0xacdd96,0x0)?colorFall:colorNo;thelast10digits_digitgraph_list[_0x48c2('0x141')](document[_0x48c2('0x2d')]('thelast10digits_digitgraph_'+_0x2e02b8)[_0x48c2('0x6c')]*0x1);thelast10digits_digit_list[_0x48c2('0x141')](_0x4008ff[_0x48c2('0x3df')](document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x3e0')](_0x4008ff[_0x48c2('0x3ce')],_0x2e02b8))[_0x48c2('0x6c')],0x1));thelast10digits_change_list[_0x48c2('0x141')](document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x3e0')](_0x4008ff[_0x48c2('0x3d6')],_0x2e02b8))[_0x48c2('0x6c')]*0x1);_0x5ea549[_0x48c2('0x141')](document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x3e0')]('thelast10digits_change_',_0x2e02b8))[_0x48c2('0x7d')][_0x48c2('0x7e')]);}continue;case'4':_0x5ea549=[];continue;case'5':thelast10digits_change_list=[];continue;case'6':_0x4008ff[_0x48c2('0x3e1')](addDataChartLast10Dig_Digit,mainChartLast10Dig_Digit,thelast10digits_digit_list,_0x5ea549);continue;case'7':thelast10digits_tickmove_list=[];continue;case'8':thelast10digits_digitgraph_list=[];continue;case'9':_0x5e3e6c=_0x4f28a8[_0x48c2('0x11e')](-0xb);continue;case'10':_0x4008ff[_0x48c2('0x3e2')](addDataChartLast10Dig_Change,mainChartLast10Dig_Change,thelast10digits_change_list,_0x5ea549);continue;}break;}}let _0x27959a=btn_run[_0x48c2('0x3ab')][_0x48c2('0xe')]('/')[_0x48c2('0x3ac')]()===_0x4008ff[_0x48c2('0x3ad')]||_0x4008ff[_0x48c2('0x3e3')](btn_run['src'][_0x48c2('0xe')]('/')[_0x48c2('0x3ac')](),_0x4008ff['dpPms'])&&_0x4008ff['cJHAw'](mainWorkspaceCode[_0x48c2('0x1c')](_0x4008ff[_0x48c2('0x3e4')]),-0x1);if(_0x27959a&&selData[_0x48c2('0xb')]==_0x48c2('0x3e5')){document['getElementById'](_0x48c2('0x3e6'))[_0x48c2('0x7d')]['display']=_0x4008ff[_0x48c2('0x3e7')];}else{document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x3e8')])[_0x48c2('0x7d')][_0x48c2('0x3b1')]=_0x4008ff['hmAsQ'];}if(_0x27959a){var _0x21f1f9=_0x4008ff[_0x48c2('0x3e9')][_0x48c2('0xe')]('|'),_0x11745a=0x0;while(!![]){switch(_0x21f1f9[_0x11745a++]){case'0':thelast20digits_digitcater_list=[];continue;case'1':_0x4008ff['NzeZj'](addDataChart20Cater,mainChart20Cater,thelast20digits_digitcater_list,_0x278fbe);continue;case'2':for(i=0x1;_0x4008ff[_0x48c2('0x3ea')](i,_0x5e3e6c['length']);i++){_0x2e02b8=_0x5e3e6c[_0x48c2('0x12')]-i;_0xacdd96=_0x4008ff[_0x48c2('0x3eb')](_0x226726[i],_0x226726[i-0x1]);document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x3e0')](_0x4008ff[_0x48c2('0x3ec')],_0x2e02b8))[_0x48c2('0x6c')]=_0x4008ff['KLQpW'](_0x4008ff[_0x48c2('0x3ed')](_0xacdd96,0x0)?'+':_0x4008ff[_0x48c2('0x3ee')](_0xacdd96,0x0)?'-':'',_0x5e3e6c[i]);document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x3ec')]+_0x2e02b8)[_0x48c2('0x7d')]['backgroundColor']=_0x4008ff['veQgd'](_0xacdd96,0x0)?colorRise:_0x4008ff[_0x48c2('0x3ee')](_0xacdd96,0x0)?colorFall:colorNo;thelast20digits_digitcater_list['push'](_0x4008ff[_0x48c2('0x3ef')](document[_0x48c2('0x2d')](_0x4008ff['VQwUs']+_0x2e02b8)[_0x48c2('0x6c')],0x1));_0x278fbe[_0x48c2('0x141')](document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x3ec')]+_0x2e02b8)['style'][_0x48c2('0x7e')]);}continue;case'3':_0x226726=_0x15a26b[_0x48c2('0x11e')](-0x15);continue;case'4':_0x278fbe=[];continue;case'5':_0x5e3e6c=_0x4f28a8[_0x48c2('0x11e')](-0x15);continue;}break;}}let _0x398231=_0x4008ff[_0x48c2('0x3f0')](btn_run[_0x48c2('0x3ab')]['split']('/')[_0x48c2('0x3ac')](),_0x4008ff['Ujesd'])||_0x4008ff['HBozg'](btn_run[_0x48c2('0x3ab')][_0x48c2('0xe')]('/')['pop'](),_0x48c2('0x37a'))&&_0x4008ff['Xvntd'](mainWorkspaceCode[_0x48c2('0x1c')](_0x48c2('0x3f1')),-0x1);if(_0x398231&&_0x4008ff[_0x48c2('0x3f2')](selData[_0x48c2('0xb')],_0x4008ff[_0x48c2('0x3f3')])){document[_0x48c2('0x2d')](_0x48c2('0x3f4'))[_0x48c2('0x7d')]['display']=_0x48c2('0x384');}else{document[_0x48c2('0x2d')](_0x48c2('0x3f4'))[_0x48c2('0x7d')]['display']='none';}if(_0x398231){_0x226726=_0x15a26b[_0x48c2('0x11e')](-0x15);_0x5e3e6c=_0x4f28a8[_0x48c2('0x11e')](-0x15);thelast20digits_digitevenodd_list=[];for(i=0x1;_0x4008ff[_0x48c2('0x3ee')](i,_0x5e3e6c[_0x48c2('0x12')]);i++){var _0x342e69=_0x48c2('0x3f5')[_0x48c2('0xe')]('|'),_0x5cb8d5=0x0;while(!![]){switch(_0x342e69[_0x5cb8d5++]){case'0':document[_0x48c2('0x2d')](_0x4008ff['KLQpW'](_0x4008ff['kKvcx'],_0x2e02b8))[_0x48c2('0x7d')][_0x48c2('0x7e')]=_0xacdd96>0x0?colorRise:_0xacdd96<0x0?colorFall:colorNo;continue;case'1':_0xacdd96=_0x226726[i]-_0x226726[_0x4008ff[_0x48c2('0x3f6')](i,0x1)];continue;case'2':thelast20digits_digitevenodd_list[_0x48c2('0x141')](document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x3f7')]+_0x2e02b8)[_0x48c2('0x6c')]);continue;case'3':document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x3f8')](_0x4008ff[_0x48c2('0x3f7')],_0x2e02b8))[_0x48c2('0x6c')]=_0x4008ff[_0x48c2('0x3f2')](_0x5e3e6c[i]%0x2,0x0)?_0x4008ff[_0x48c2('0x3f9')]:_0x4008ff[_0x48c2('0x3fa')];continue;case'4':_0x2e02b8=_0x4008ff[_0x48c2('0x3fb')](_0x5e3e6c[_0x48c2('0x12')],i);continue;}break;}}}let _0x36d099=btn_run[_0x48c2('0x3ab')][_0x48c2('0xe')]('/')['pop']()===_0x4008ff[_0x48c2('0x3ad')]||_0x4008ff['HBozg'](btn_run['src'][_0x48c2('0xe')]('/')[_0x48c2('0x3ac')](),_0x4008ff[_0x48c2('0x3fc')])&&_0x4008ff[_0x48c2('0x3fd')](mainWorkspaceCode['indexOf'](_0x4008ff[_0x48c2('0x3fe')]),-0x1);if(_0x36d099&&selData['value']==_0x48c2('0x388')){document['getElementById'](_0x4008ff[_0x48c2('0x3ff')])[_0x48c2('0x7d')][_0x48c2('0x3b1')]=_0x4008ff[_0x48c2('0x3e7')];}else{document[_0x48c2('0x2d')](_0x4008ff['dJYiD'])[_0x48c2('0x7d')][_0x48c2('0x3b1')]=_0x4008ff['hmAsQ'];}if(_0x36d099){let _0xb694bf,_0x26f8f6,_0xb034d9,_0x861298;for(k=0x1;_0x4008ff[_0x48c2('0x3b3')](k,0x6);k++){let _0x2b99a7=_0x4008ff['rREZQ'](risevsfall_noofticks[k][_0x48c2('0xb')],0x1);_0x4881c3=_0x15a26b[_0x48c2('0x11e')](-_0x2b99a7);_0xb694bf=_0x26f8f6=0x0;for(i=0x1;_0x4008ff[_0x48c2('0x3ee')](i,_0x4881c3[_0x48c2('0x12')]);i++){if(_0x4881c3[i-0x1]<_0x4881c3[i]){_0xb694bf++;}}_0x26f8f6=_0x4008ff['JTSLE'](_0x2b99a7,_0xb694bf);_0xb034d9=_0x4008ff[_0x48c2('0x400')](_0xb694bf,_0x2b99a7)*0x64;_0x861298=_0x4008ff[_0x48c2('0x401')](_0x26f8f6,_0x2b99a7)*0x64;document[_0x48c2('0x2d')](_0x4008ff['erHPi'](_0x4008ff[_0x48c2('0x3f8')](_0x48c2('0x38a'),k),_0x4008ff[_0x48c2('0x402')]))[_0x48c2('0x6c')]=document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x3f8')](_0x4008ff[_0x48c2('0x3f8')](_0x4008ff[_0x48c2('0x403')],k),_0x4008ff[_0x48c2('0x402')]))[_0x48c2('0x7d')][_0x48c2('0x404')]=_0x4008ff[_0x48c2('0x3f8')](_0xb034d9['toFixed'](0x2),'%');document['getElementById'](_0x4008ff['NGFtC'](_0x4008ff['NGFtC'](_0x4008ff[_0x48c2('0x403')],k),_0x4008ff[_0x48c2('0x405')]))[_0x48c2('0x6c')]=document['getElementById'](_0x4008ff[_0x48c2('0x406')](_0x4008ff['qgFQp']+k,_0x4008ff[_0x48c2('0x405')]))[_0x48c2('0x7d')][_0x48c2('0x404')]=_0x861298[_0x48c2('0x115')](0x2)+'%';}}let _0x1ede9d=_0x4008ff[_0x48c2('0x407')](btn_run[_0x48c2('0x3ab')][_0x48c2('0xe')]('/')[_0x48c2('0x3ac')](),_0x4008ff[_0x48c2('0x3ad')])||_0x4008ff[_0x48c2('0x408')](btn_run[_0x48c2('0x3ab')][_0x48c2('0xe')]('/')['pop'](),_0x4008ff[_0x48c2('0x3fc')])&&_0x4008ff[_0x48c2('0x409')](mainWorkspaceCode['indexOf'](_0x4008ff[_0x48c2('0x40a')]),-0x1);if(_0x1ede9d&&selData[_0x48c2('0xb')]==_0x4008ff[_0x48c2('0x40a')]){document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x40b')])[_0x48c2('0x7d')][_0x48c2('0x3b1')]=_0x4008ff[_0x48c2('0x3e7')];}else{document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x40b')])[_0x48c2('0x7d')]['display']=_0x4008ff[_0x48c2('0x3b2')];}if(_0x1ede9d){let _0x11da4e,_0x38f6ac,_0x961b23,_0x3a4fc6;for(k=0x1;_0x4008ff[_0x48c2('0x3b3')](k,0x6);k++){let _0x449349=evenvsodd_noofticks[k][_0x48c2('0xb')]*0x1;_0x4881c3=_0x4f28a8['slice'](-_0x449349);_0x11da4e=_0x38f6ac=0x0;for(i=0x0;_0x4008ff['dKcZZ'](i,_0x4881c3['length']);i++){if(_0x4008ff[_0x48c2('0x40c')](_0x4008ff[_0x48c2('0x40d')](_0x4881c3[i],0x2),0x0)){_0x11da4e++;}}_0x38f6ac=_0x4008ff[_0x48c2('0x3fb')](_0x449349,_0x11da4e);_0x961b23=_0x4008ff['elsxI'](_0x4008ff[_0x48c2('0x401')](_0x11da4e,_0x449349),0x64);_0x3a4fc6=_0x4008ff[_0x48c2('0x40e')](_0x38f6ac/_0x449349,0x64);document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x40f')](_0x4008ff[_0x48c2('0x410')],k)+_0x48c2('0x38e'))[_0x48c2('0x6c')]=document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x411')](_0x48c2('0x38d')+k,_0x4008ff[_0x48c2('0x412')]))[_0x48c2('0x7d')][_0x48c2('0x404')]=_0x4008ff[_0x48c2('0x411')](_0x961b23[_0x48c2('0x115')](0x2),'%');document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x413')](_0x4008ff[_0x48c2('0x413')](_0x48c2('0x38d'),k),_0x4008ff[_0x48c2('0x414')]))[_0x48c2('0x6c')]=document['getElementById'](_0x4008ff[_0x48c2('0x413')](_0x4008ff['zzZPL']+k,_0x48c2('0x38f')))[_0x48c2('0x7d')][_0x48c2('0x404')]=_0x3a4fc6[_0x48c2('0x115')](0x2)+'%';}}let _0x3dc71a=_0x4008ff['OUDnB'](btn_run['src']['split']('/')[_0x48c2('0x3ac')](),_0x4008ff['Ujesd'])||btn_run[_0x48c2('0x3ab')][_0x48c2('0xe')]('/')['pop']()===_0x4008ff[_0x48c2('0x3fc')]&&_0x4008ff[_0x48c2('0x409')](mainWorkspaceCode['indexOf'](_0x48c2('0x390')),-0x1);if(_0x3dc71a&&_0x4008ff['PPscL'](selData[_0x48c2('0xb')],_0x4008ff[_0x48c2('0x415')])){document[_0x48c2('0x2d')](_0x48c2('0x391'))[_0x48c2('0x7d')][_0x48c2('0x3b1')]=_0x4008ff[_0x48c2('0x3e7')];}else{document['getElementById'](_0x4008ff[_0x48c2('0x416')])[_0x48c2('0x7d')][_0x48c2('0x3b1')]=_0x4008ff[_0x48c2('0x3b2')];}if(_0x3dc71a){let _0xc52b52,_0x188f4f,_0x28a8b9,_0x299dc9;for(k=0x1;_0x4008ff[_0x48c2('0x417')](k,0x2);k++){let _0x2a5855=_0x4008ff[_0x48c2('0x40e')](overvsunder_noofticks[k][_0x48c2('0xb')],0x1);_0x4881c3=_0x4f28a8[_0x48c2('0x11e')](-_0x2a5855);_0xc52b52=_0x188f4f=0x0;for(i=0x0;_0x4008ff[_0x48c2('0x418')](i,_0x4881c3[_0x48c2('0x12')]);i++){if(_0x4881c3[i]>_0x4008ff[_0x48c2('0x419')](document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x41a')](_0x4008ff[_0x48c2('0x41b')](_0x4008ff[_0x48c2('0x41c')],k),_0x4008ff[_0x48c2('0x41d')]))['value'],0x1)){_0xc52b52++;}if(_0x4008ff['dKcZZ'](_0x4881c3[i],document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x41b')](_0x4008ff['FHgDS'],k)+_0x4008ff[_0x48c2('0x41e')])[_0x48c2('0xb')]*0x1)){_0x188f4f++;}}_0x28a8b9=_0xc52b52/_0x2a5855*0x64;_0x299dc9=_0x4008ff[_0x48c2('0x41f')](_0x188f4f,_0x2a5855)*0x64;document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x41b')](_0x4008ff[_0x48c2('0x420')](_0x4008ff['FHgDS'],k),_0x4008ff[_0x48c2('0x421')]))[_0x48c2('0x6c')]=_0x4008ff['IqrMh'](_0x28a8b9[_0x48c2('0x115')](0x2),'%');document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x420')](_0x4008ff['fDygH'](_0x48c2('0x392'),k),_0x48c2('0x395')))['style'][_0x48c2('0x404')]=_0x4008ff[_0x48c2('0x422')](_0x4008ff[_0x48c2('0x423')](_0x28a8b9/Math['max'](_0x28a8b9,_0x299dc9),0x64)[_0x48c2('0x115')](0x2),'%');document['getElementById'](_0x4008ff['Xdwcm'](_0x4008ff[_0x48c2('0x424')](_0x48c2('0x392'),k),_0x4008ff['WpxCo']))[_0x48c2('0x6c')]=_0x4008ff[_0x48c2('0x425')](_0x299dc9[_0x48c2('0x115')](0x2),'%');document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x426')](_0x4008ff[_0x48c2('0x427')](_0x4008ff['FHgDS'],k),_0x4008ff['WpxCo']))['style'][_0x48c2('0x404')]=_0x4008ff[_0x48c2('0x427')](_0x4008ff[_0x48c2('0x428')](_0x4008ff['fPEIC'](_0x299dc9,Math[_0x48c2('0x36d')](_0x28a8b9,_0x299dc9)),0x64)[_0x48c2('0x115')](0x2),'%');}}let _0x3f0ad1;let _0xd64e00=_0x4008ff[_0x48c2('0x429')](btn_run['src'][_0x48c2('0xe')]('/')['pop'](),_0x4008ff[_0x48c2('0x3ad')])||btn_run['src'][_0x48c2('0xe')]('/')[_0x48c2('0x3ac')]()===_0x4008ff['dpPms']&&_0x4008ff[_0x48c2('0x42a')](mainWorkspaceCode[_0x48c2('0x1c')](_0x4008ff[_0x48c2('0x42b')]),-0x1);if(_0xd64e00&&_0x4008ff['PPscL'](selData['value'],_0x4008ff[_0x48c2('0x42b')])){document['getElementById'](_0x48c2('0x398'))[_0x48c2('0x7d')][_0x48c2('0x3b1')]=_0x4008ff[_0x48c2('0x3e7')];}else{document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x42c')])['style']['display']=_0x48c2('0x357');}if(_0xd64e00){let _0x3d71c9,_0x62a66a,_0x1bcbf0;_0x226726=_0x15a26b['slice'](-0x27);thelast10ticks_tick_list=[];_0x62a66a=[];thelast10ticks_move_list=[];thelast10ticks_worm_list=[];thelast10ticks_change_list=[];thelast10ticks_sentiment_list=[];_0x1bcbf0=[];thelast10ticks_changeperc_list=[];for(i=0x1d;_0x4008ff['dKcZZ'](i,_0x226726['length']);i++){var _0x431e0c=_0x4008ff[_0x48c2('0x42d')][_0x48c2('0xe')]('|'),_0x3e3fe9=0x0;while(!![]){switch(_0x431e0c[_0x3e3fe9++]){case'0':document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x42e')](_0x4008ff['SXAlR'],_0x2e02b8))[_0x48c2('0x7d')][_0x48c2('0x7e')]=document['getElementById'](_0x4008ff[_0x48c2('0x42e')](_0x4008ff[_0x48c2('0x42f')],_0x2e02b8))[_0x48c2('0x7d')][_0x48c2('0x7e')]=_0x4008ff[_0x48c2('0x430')](_0x226726[_0x4008ff[_0x48c2('0x3fb')](i,0x1)],_0x226726[i])?colorRise:_0x4008ff['UJuNK'](_0x226726[_0x4008ff['JTSLE'](i,0x1)],_0x226726[i])?colorFall:colorNo;continue;case'1':thelast10ticks_sentiment_list[_0x48c2('0x141')](document['getElementById'](_0x4008ff[_0x48c2('0x42e')](_0x48c2('0x39c'),_0x2e02b8))[_0x48c2('0x6c')]);continue;case'2':thelast10ticks_changeperc_list[_0x48c2('0x141')](document['getElementById'](_0x4008ff[_0x48c2('0x42e')](_0x4008ff[_0x48c2('0x431')],_0x2e02b8))[_0x48c2('0x6c')]*0x1);continue;case'3':thelast10ticks_worm_list[_0x48c2('0x141')](document['getElementById'](_0x4008ff[_0x48c2('0x432')]+_0x2e02b8)[_0x48c2('0x6c')]);continue;case'4':document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x433')]+_0x2e02b8)[_0x48c2('0x7d')][_0x48c2('0x7e')]=document['getElementById'](_0x4008ff[_0x48c2('0x42e')](_0x4008ff[_0x48c2('0x431')],_0x2e02b8))[_0x48c2('0x7d')][_0x48c2('0x7e')]=_0x4008ff['UJuNK'](_0xacdd96,0x0)?colorRise:_0x4008ff[_0x48c2('0x434')](_0xacdd96,0x0)?colorFall:colorNo;continue;case'5':thelast10ticks_move_list[_0x48c2('0x141')](document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x435')](_0x4008ff[_0x48c2('0x42f')],_0x2e02b8))[_0x48c2('0x6c')]);continue;case'6':_0x62a66a[_0x48c2('0x141')](document[_0x48c2('0x2d')](_0x4008ff['VQPJn'](_0x48c2('0x399'),_0x2e02b8))[_0x48c2('0x7d')][_0x48c2('0x7e')]);continue;case'7':document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x435')](_0x4008ff[_0x48c2('0x433')],_0x2e02b8))[_0x48c2('0x6c')]=(_0xacdd96>0x0?'+':_0x4008ff[_0x48c2('0x436')](_0xacdd96,0x0)?'-':'')+Math[_0x48c2('0x437')](_0xacdd96)[_0x48c2('0x115')](0x2);continue;case'8':_0x2e02b8=_0x4008ff[_0x48c2('0x438')](_0x226726['length'],i);continue;case'9':_0x3d71c9=_0x4008ff[_0x48c2('0x439')](_0xacdd96,_0x226726[i-0x1])*0x64;continue;case'10':document['getElementById'](_0x4008ff[_0x48c2('0x435')](_0x4008ff[_0x48c2('0x43a')],_0x2e02b8))['innerText']=_0x4008ff[_0x48c2('0x43b')](_0x226726[i-0x3],_0x226726[_0x4008ff[_0x48c2('0x43c')](i,0x2)])&&_0x4008ff['iaCie'](_0x226726[_0x4008ff[_0x48c2('0x43c')](i,0x2)],_0x226726[_0x4008ff['jTZTq'](i,0x1)])&&_0x226726[_0x4008ff[_0x48c2('0x43c')](i,0x1)]<_0x226726[i]?_0x48c2('0x37f'):_0x4008ff[_0x48c2('0x43d')](_0x226726[_0x4008ff[_0x48c2('0x43c')](i,0x3)],_0x226726[_0x4008ff['MGnrn'](i,0x2)])&&_0x4008ff[_0x48c2('0x43e')](_0x226726[_0x4008ff[_0x48c2('0x43f')](i,0x2)],_0x226726[_0x4008ff[_0x48c2('0x440')](i,0x1)])&&_0x4008ff[_0x48c2('0x43e')](_0x226726[i-0x1],_0x226726[i])?'Fall':'No';continue;case'11':document[_0x48c2('0x2d')](_0x4008ff['VQPJn'](_0x4008ff[_0x48c2('0x43a')],_0x2e02b8))['style'][_0x48c2('0x7e')]=_0x4008ff[_0x48c2('0x441')](_0x226726[i-0x3],_0x226726[_0x4008ff[_0x48c2('0x440')](i,0x2)])&&_0x4008ff['hlYoV'](_0x226726[_0x4008ff['SsdXg'](i,0x2)],_0x226726[_0x4008ff[_0x48c2('0x442')](i,0x1)])&&_0x4008ff[_0x48c2('0x443')](_0x226726[_0x4008ff['SsdXg'](i,0x1)],_0x226726[i])?colorRise:_0x226726[i-0x3]>_0x226726[_0x4008ff['WvuHp'](i,0x2)]&&_0x4008ff[_0x48c2('0x444')](_0x226726[_0x4008ff[_0x48c2('0x445')](i,0x2)],_0x226726[_0x4008ff[_0x48c2('0x445')](i,0x1)])&&_0x4008ff[_0x48c2('0x446')](_0x226726[_0x4008ff[_0x48c2('0x445')](i,0x1)],_0x226726[i])?colorFall:colorNo;continue;case'12':document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x447')](_0x4008ff['zkOCf'],_0x2e02b8))[_0x48c2('0x6c')]=_0x4008ff[_0x48c2('0x448')](_0x4008ff['KdDaK'](_0xacdd96,0x0)?'+':_0x4008ff[_0x48c2('0x443')](_0xacdd96,0x0)?'-':'',Math[_0x48c2('0x437')](_0x3d71c9)[_0x48c2('0x115')](0x2));continue;case'13':thelast10ticks_tick_list['push'](_0x4008ff['DUoFN'](document['getElementById'](_0x4008ff[_0x48c2('0x449')]+_0x2e02b8)[_0x48c2('0x6c')],0x1));continue;case'14':_0xacdd96=_0x4008ff[_0x48c2('0x445')](_0x226726[i],_0x226726[_0x4008ff[_0x48c2('0x445')](i,0x1)]);continue;case'15':document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x448')](_0x4008ff[_0x48c2('0x42f')],_0x2e02b8))[_0x48c2('0x6c')]=_0x4008ff['hlYoV'](_0x226726[_0x4008ff['aPFeS'](i,0x1)],_0x226726[i])?_0x4008ff[_0x48c2('0x3d2')]:_0x4008ff[_0x48c2('0x446')](_0x226726[_0x4008ff[_0x48c2('0x44a')](i,0x1)],_0x226726[i])?_0x4008ff[_0x48c2('0x3d4')]:'No';continue;case'16':document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x449')]+_0x2e02b8)[_0x48c2('0x6c')]=_0x226726[i][_0x48c2('0x115')](_0x9a9ef4);continue;case'17':thelast10ticks_change_list[_0x48c2('0x141')](_0x4008ff['wkeqY'](document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x433')]+_0x2e02b8)[_0x48c2('0x6c')],0x1));continue;case'18':_0x1bcbf0[_0x48c2('0x141')](document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x448')](_0x48c2('0x44b'),_0x2e02b8))[_0x48c2('0x7d')]['backgroundColor']);continue;case'19':document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x448')](_0x4008ff[_0x48c2('0x432')],_0x2e02b8))[_0x48c2('0x7d')]['backgroundColor']=_0x226726[i]==Math['max'](..._0x3f0ad1)?colorRise:_0x4008ff[_0x48c2('0x44c')](_0x226726[i],Math[_0x48c2('0x3b5')](..._0x3f0ad1))?colorFall:colorWormNo;continue;case'20':document[_0x48c2('0x2d')](_0x4008ff['gjEFw'](_0x48c2('0x44d'),_0x2e02b8))[_0x48c2('0x6c')]=_0x4008ff[_0x48c2('0x44c')](_0x226726[i],Math[_0x48c2('0x36d')](..._0x3f0ad1))?_0x4008ff[_0x48c2('0x44e')]:_0x4008ff[_0x48c2('0x44f')](_0x226726[i],Math[_0x48c2('0x3b5')](..._0x3f0ad1))?_0x4008ff[_0x48c2('0x450')]:_0x4008ff['wUjiW'];continue;case'21':_0x3f0ad1=_0x226726[_0x48c2('0x11e')](_0x4008ff[_0x48c2('0x44a')](i,0x13),_0x4008ff[_0x48c2('0x451')](i,0x1));continue;}break;}}_0x4008ff[_0x48c2('0x452')](addDataChartLast10Tick_Tick,mainChartLast10Tick_Tick,thelast10ticks_tick_list,_0x62a66a);addDataChartLast10Tick_Change(mainChartLast10Tick_Change,thelast10ticks_change_list,_0x1bcbf0);}let _0x22f87f=_0x4008ff[_0x48c2('0x429')](btn_run[_0x48c2('0x3ab')][_0x48c2('0xe')]('/')[_0x48c2('0x3ac')](),_0x4008ff[_0x48c2('0x3ad')])||_0x4008ff[_0x48c2('0x453')](btn_run[_0x48c2('0x3ab')]['split']('/')[_0x48c2('0x3ac')](),_0x48c2('0x37a'))&&_0x4008ff[_0x48c2('0x454')](mainWorkspaceCode[_0x48c2('0x1c')](_0x48c2('0x455')),-0x1);if(_0x22f87f&&_0x4008ff[_0x48c2('0x44f')](selData[_0x48c2('0xb')],_0x4008ff['VQbAw'])){document[_0x48c2('0x2d')]('div_thelast20tickworm')[_0x48c2('0x7d')][_0x48c2('0x3b1')]=_0x48c2('0x384');}else{document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x456')])[_0x48c2('0x7d')][_0x48c2('0x3b1')]=_0x48c2('0x357');}if(_0x22f87f){let _0x253a4b,_0x5ced71,_0x298db9;_0x226726=_0x15a26b[_0x48c2('0x11e')](-0x27);thelast20tickworm_history_list=[];thelast20tickworm_current_list=[];_0x253a4b=[];_0x5ced71=[];_0x298db9=[];for(i=0x13;_0x4008ff['JeMVv'](i,_0x226726[_0x48c2('0x12')]);i++){var _0x2cfbf9=_0x4008ff[_0x48c2('0x457')][_0x48c2('0xe')]('|'),_0x3009dc=0x0;while(!![]){switch(_0x2cfbf9[_0x3009dc++]){case'0':document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x458')]+_0x2e02b8)['style'][_0x48c2('0x7e')]=_0x4008ff[_0x48c2('0x459')](_0x226726[i],Math['max'](..._0x3f0ad1))?colorRise:_0x4008ff['kJjeR'](_0x226726[i],Math[_0x48c2('0x3b5')](..._0x3f0ad1))?colorFall:colorWormNo;continue;case'1':_0x2e02b8=_0x226726[_0x48c2('0x12')]-i;continue;case'2':document[_0x48c2('0x2d')](_0x4008ff['PiHla'](_0x4008ff[_0x48c2('0x458')],_0x2e02b8))[_0x48c2('0x6c')]=_0x4008ff['uSBCi'](_0x226726[i],Math[_0x48c2('0x36d')](..._0x3f0ad1))?_0x48c2('0x39d'):_0x4008ff[_0x48c2('0x45a')](_0x226726[i],Math['min'](..._0x3f0ad1))?_0x48c2('0x39e'):_0x4008ff[_0x48c2('0x45b')];continue;case'3':thelast20tickworm_history_list[_0x48c2('0x141')](document[_0x48c2('0x2d')](_0x4008ff['EvuPs']+_0x2e02b8)[_0x48c2('0x6c')]);continue;case'4':_0x3f0ad1=_0x226726[_0x48c2('0x11e')](_0x4008ff[_0x48c2('0x44a')](i,0x13),_0x4008ff[_0x48c2('0x45c')](i,0x1));continue;}break;}}_0x3f0ad1=_0x226726['slice'](-0x14);for(i=0x13;_0x4008ff[_0x48c2('0x45d')](i,_0x226726[_0x48c2('0x12')]);i++){var _0x5407f8=_0x4008ff[_0x48c2('0x45e')][_0x48c2('0xe')]('|'),_0x3023f5=0x0;while(!![]){switch(_0x5407f8[_0x3023f5++]){case'0':if(_0x4008ff[_0x48c2('0x454')](i,_0x4008ff[_0x48c2('0x45f')](_0x226726['length'],0x1))){_0x298db9[_0x48c2('0x141')](_0x4008ff[_0x48c2('0x45a')](_0x226726[i],Math[_0x48c2('0x36d')](..._0x3f0ad1))?_0x4008ff[_0x48c2('0x460')]:_0x226726[i]==Math[_0x48c2('0x3b5')](..._0x3f0ad1)?_0x4008ff[_0x48c2('0x460')]:![]);}else{_0x298db9[_0x48c2('0x141')](_0x4008ff[_0x48c2('0x460')]);}continue;case'1':document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x45c')](_0x4008ff[_0x48c2('0x461')],_0x2e02b8))[_0x48c2('0x7d')][_0x48c2('0x7e')]=_0x4008ff[_0x48c2('0x462')](_0x226726[i],Math[_0x48c2('0x36d')](..._0x3f0ad1))?colorRise:_0x4008ff[_0x48c2('0x463')](_0x226726[i],Math['min'](..._0x3f0ad1))?colorFall:colorWormNo;continue;case'2':_0x253a4b[_0x48c2('0x141')](_0x226726[i]);continue;case'3':_0x5ced71[_0x48c2('0x141')](document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x464')](_0x4008ff[_0x48c2('0x461')],_0x2e02b8))[_0x48c2('0x7d')][_0x48c2('0x7e')]);continue;case'4':thelast20tickworm_current_list[_0x48c2('0x141')](document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x465')](_0x4008ff[_0x48c2('0x461')],_0x2e02b8))[_0x48c2('0x6c')]);continue;case'5':document[_0x48c2('0x2d')](_0x4008ff['enivo'](_0x48c2('0x466'),_0x2e02b8))['innerText']=_0x4008ff[_0x48c2('0x467')](_0x226726[i],Math[_0x48c2('0x36d')](..._0x3f0ad1))?_0x4008ff['kKsNP']:_0x4008ff[_0x48c2('0x467')](_0x226726[i],Math[_0x48c2('0x3b5')](..._0x3f0ad1))?_0x4008ff[_0x48c2('0x450')]:_0x4008ff[_0x48c2('0x45b')];continue;case'6':_0x2e02b8=_0x4008ff[_0x48c2('0x468')](_0x226726[_0x48c2('0x12')],i);continue;}break;}}_0x4008ff[_0x48c2('0x469')](addDataChart20TickWorm,mainChart20TickWorm,_0x253a4b,_0x5ced71,_0x298db9);}let _0x1151eb=_0x4008ff['VskZE'](btn_run[_0x48c2('0x3ab')][_0x48c2('0xe')]('/')[_0x48c2('0x3ac')](),_0x48c2('0x376'))||_0x4008ff[_0x48c2('0x453')](btn_run[_0x48c2('0x3ab')][_0x48c2('0xe')]('/')[_0x48c2('0x3ac')](),_0x4008ff['dpPms'])&&(_0x4008ff[_0x48c2('0x454')](mainWorkspaceCode['indexOf'](_0x4008ff['KJGGB']),-0x1)||_0x4008ff['bjner'](mainWorkspaceCode[_0x48c2('0x1c')](_0x4008ff[_0x48c2('0x46a')]),-0x1));if(_0x1151eb&&selData[_0x48c2('0xb')]==_0x4008ff[_0x48c2('0x46b')]){document['getElementById'](_0x48c2('0x3a5'))[_0x48c2('0x7d')][_0x48c2('0x3b1')]=_0x4008ff[_0x48c2('0x3e7')];}else{document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x46c')])['style'][_0x48c2('0x3b1')]=_0x4008ff[_0x48c2('0x3b2')];}if(_0x1151eb){var _0x2ddd4d=_0x48c2('0x46d')['split']('|'),_0x4ae75e=0x0;while(!![]){switch(_0x2ddd4d[_0x4ae75e++]){case'0':for(i=0x51;i<0x65;i++){var _0x4c3127=_0x4008ff['XFtWa'][_0x48c2('0xe')]('|'),_0x272785=0x0;while(!![]){switch(_0x4c3127[_0x272785++]){case'0':document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x46e')](_0x48c2('0x46f'),0x65-i))[_0x48c2('0x6c')]=tempArray1[i]['toFixed'](0x2);continue;case'1':document['getElementById'](_0x4008ff['hEjxA'](_0x4008ff[_0x48c2('0x470')],0x65-i))[_0x48c2('0x7d')][_0x48c2('0x7e')]=_0x4008ff[_0x48c2('0x45d')](tempArray3[_0x4008ff[_0x48c2('0x471')](i,0x1)],tempArray3[i])?colorRise:tempArray3[i-0x1]>tempArray3[i]?colorFall:colorNo;continue;case'2':document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x472')](_0x4008ff['xtHgo'],_0x4008ff[_0x48c2('0x473')](0x65,i)))[_0x48c2('0x7d')][_0x48c2('0x7e')]=_0x4008ff[_0x48c2('0x474')](tempArray2[_0x4008ff[_0x48c2('0x475')](i,0x1)],tempArray2[i])?colorRise:_0x4008ff[_0x48c2('0x476')](tempArray2[_0x4008ff[_0x48c2('0x475')](i,0x1)],tempArray2[i])?colorFall:colorNo;continue;case'3':document[_0x48c2('0x2d')](_0x4008ff['wnMOr'](_0x4008ff['LbBsA'],0x65-i))[_0x48c2('0x6c')]=tempArray3[i][_0x48c2('0x115')](0x2);continue;case'4':document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x472')](_0x4008ff['xtHgo'],_0x4008ff['Ffemw'](0x65,i)))['innerText']=tempArray2[i][_0x48c2('0x115')](0x2);continue;case'5':document[_0x48c2('0x2d')](_0x4008ff['aMThg'](_0x48c2('0x46f'),_0x4008ff[_0x48c2('0x477')](0x65,i)))[_0x48c2('0x7d')][_0x48c2('0x7e')]=_0x4008ff[_0x48c2('0x478')](tempArray1[_0x4008ff['PzliU'](i,0x1)],tempArray1[i])?colorRise:_0x4008ff[_0x48c2('0x479')](tempArray1[_0x4008ff['PzliU'](i,0x1)],tempArray1[i])?colorFall:colorNo;continue;}break;}}continue;case'1':tempArray2=_0x4008ff[_0x48c2('0x47a')](calculateMovingAverage,_0x15a26b,inpTickTrisma_period[0x2]['value']*0x1)['slice'](-0x65);continue;case'2':tick_sma_list[0x1]=tempArray1[_0x48c2('0x11e')](-0x14);continue;case'3':tempArray3=calculateMovingAverage(_0x15a26b,inpTickTrisma_period[0x3][_0x48c2('0xb')]*0x1)[_0x48c2('0x11e')](-0x65);continue;case'4':tick_sma_list[0x3]=tempArray3[_0x48c2('0x11e')](-0x14);continue;case'5':tempArray1=calculateMovingAverage(_0x15a26b,_0x4008ff[_0x48c2('0x47b')](inpTickTrisma_period[0x1][_0x48c2('0xb')],0x1))[_0x48c2('0x11e')](-0x65);continue;case'6':tick_sma_list=[];continue;case'7':tick_sma_list[0x2]=tempArray2[_0x48c2('0x11e')](-0x14);continue;case'8':_0x4008ff[_0x48c2('0x47a')](addDataChartticktrisma,mainChartTickTrisma,[_0x15a26b[_0x48c2('0x11e')](-0x65),tempArray1,tempArray2,tempArray3]);continue;}break;}}let _0x411919=_0x4008ff[_0x48c2('0x47c')](btn_run[_0x48c2('0x3ab')][_0x48c2('0xe')]('/')['pop'](),_0x4008ff[_0x48c2('0x3ad')])||btn_run[_0x48c2('0x3ab')]['split']('/')[_0x48c2('0x3ac')]()==='icon_stop.png'&&_0x4008ff[_0x48c2('0x47d')](mainWorkspaceCode[_0x48c2('0x1c')](_0x4008ff['euUOd']),-0x1);if(_0x411919&&_0x4008ff[_0x48c2('0x47e')](selData[_0x48c2('0xb')],_0x4008ff['euUOd'])){document[_0x48c2('0x2d')](_0x4008ff['wEGTP'])['style'][_0x48c2('0x3b1')]=_0x4008ff[_0x48c2('0x3e7')];}else{document[_0x48c2('0x2d')]('div_detail3ticks')[_0x48c2('0x7d')][_0x48c2('0x3b1')]=_0x48c2('0x357');}if(_0x411919){let _0xf76c1d='';_0x4881c3=_0x15a26b['slice'](-0x3);for(i=0x1;_0x4008ff[_0x48c2('0x47f')](i,0x3);i++){_0xf76c1d=_0x4881c3[_0x4008ff[_0x48c2('0x477')](0x3,i)][_0x48c2('0x115')](_0x9a9ef4)['substring'](0x0,0xd);document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x480')](_0x4008ff[_0x48c2('0x480')](_0x4008ff['iVtBe'],i),_0x48c2('0x481')))[_0x48c2('0x6c')]=_0xf76c1d;for(k=0x0;_0x4008ff[_0x48c2('0x482')](k,0xc);k++){if(_0x4008ff[_0x48c2('0x483')](k,_0xf76c1d[_0x48c2('0x12')])){document[_0x48c2('0x2d')](_0x4008ff[_0x48c2('0x480')](_0x4008ff[_0x48c2('0x484')](_0x4008ff[_0x48c2('0x484')](_0x4008ff['iVtBe'],i),'_'),_0x4008ff[_0x48c2('0x484')](k,0x1)))[_0x48c2('0x6c')]=_0xf76c1d[_0x48c2('0x485')](k);}else{document['getElementById'](_0x4008ff[_0x48c2('0x484')](_0x4008ff[_0x48c2('0x484')](_0x4008ff['YxEUt'](_0x48c2('0x3a9'),i),'_'),k+0x1))[_0x48c2('0x6c')]='';}}}}if(_0x4008ff[_0x48c2('0x486')](_0x4e96da,'history')){sedangForgetAllTicks=![];};_0x4008ff[_0x48c2('0x487')](checkIfReadyToMainLogic);};const showUpAboutMultiMarket_Continuous=(_0x4ba4cb,_0xc14313,_0xce80f1,_0x40c6a9,_0x52e5ed)=>{var _0x5cdcd1={'DzFtj':_0x48c2('0x376'),'EELXT':function(_0xc2207a,_0x2683b7){return _0xc2207a===_0x2683b7;},'CKZIR':_0x48c2('0x37a'),'GupUK':_0x48c2('0xee'),'PyDJG':'block','pBWAX':'div_continuousindices','WaHqJ':function(_0x6e9abd,_0x38d34a){return _0x6e9abd+_0x38d34a;},'iZFgf':'continuousindices_','TLzdV':_0x48c2('0x488'),'VlGrQ':function(_0x6bccb0,_0x365baa){return _0x6bccb0+_0x365baa;},'MFADP':function(_0x5ccf88,_0x44b3ec){return _0x5ccf88==_0x44b3ec;},'osiFU':_0x48c2('0xa1'),'BFItm':function(_0x281837,_0x1a3976){return _0x281837<_0x1a3976;},'DjNgN':function(_0x3567c7,_0x17c4ff){return _0x3567c7-_0x17c4ff;},'nIyNG':function(_0x4d1a81,_0x5a3bdf){return _0x4d1a81(_0x5a3bdf);},'rTreO':function(_0xe3ec76,_0x1c639e){return _0xe3ec76>=_0x1c639e;}};let _0x20e815=btn_run[_0x48c2('0x3ab')][_0x48c2('0xe')]('/')['pop']()===_0x5cdcd1[_0x48c2('0x489')]||_0x5cdcd1['EELXT'](btn_run[_0x48c2('0x3ab')]['split']('/')['pop'](),_0x5cdcd1[_0x48c2('0x48a')])&&mainWorkspaceCode[_0x48c2('0x1c')](_0x5cdcd1[_0x48c2('0x48b')])!=-0x1;if(_0x20e815&&selData[_0x48c2('0xb')]==_0x5cdcd1[_0x48c2('0x48b')]){document[_0x48c2('0x2d')](_0x48c2('0x48c'))[_0x48c2('0x7d')][_0x48c2('0x3b1')]=_0x5cdcd1[_0x48c2('0x48d')];}else{document[_0x48c2('0x2d')](_0x5cdcd1[_0x48c2('0x48e')])[_0x48c2('0x7d')][_0x48c2('0x3b1')]=_0x48c2('0x357');}if(_0x20e815){document['getElementById'](_0x5cdcd1[_0x48c2('0x48f')](_0x5cdcd1[_0x48c2('0x48f')](_0x5cdcd1[_0x48c2('0x490')],_0x4ba4cb),_0x5cdcd1[_0x48c2('0x491')]))[_0x48c2('0xb')]=_0xc14313;document['getElementById'](_0x5cdcd1[_0x48c2('0x492')](_0x5cdcd1['VlGrQ'](_0x5cdcd1[_0x48c2('0x490')],_0x4ba4cb),_0x48c2('0x493')))['value']=_0xce80f1;}if(_0x5cdcd1[_0x48c2('0x494')](_0x52e5ed,_0x5cdcd1[_0x48c2('0x495')])){sedangForgetAllTicks=![];};if(_0x5cdcd1['BFItm'](_0x5cdcd1[_0x48c2('0x496')](Date[_0x48c2('0x497')](),lastTimeCheckIfReadyToMainLogic_continuousindices[_0x4ba4cb]),0x1f4)){return;};lastTimeCheckIfReadyToMainLogic_continuousindices[_0x4ba4cb]=Date[_0x48c2('0x497')]();if(sudahRunOnceAtStart&&_0x5cdcd1[_0x48c2('0x498')](btn_run[_0x48c2('0x3ab')][_0x48c2('0xe')]('/')[_0x48c2('0x3ac')](),_0x5cdcd1[_0x48c2('0x48a')])&&!sedangForgetAllTicks&&navigator[_0x48c2('0x499')]){_0x5cdcd1[_0x48c2('0x49a')](updateStepper,0x1);if(!chkVLose[_0x48c2('0x64')]||inpVLose[_0x48c2('0xb')]<=0x0){conn_nya=_0x1a19x7;}else{if(chkVLose[_0x48c2('0x64')]&&_0x5cdcd1[_0x48c2('0x49b')](countVLose,inpVLose['value'])){if(!slaveAuthorized){return;}conn_nya=_0x1a19x8;}else{conn_nya=_0x1a19x7;}}if(_0x5cdcd1['rTreO'](Date['now'](),timeMayOP)&&navigator[_0x48c2('0x499')]&&!sedangForgetAllTicks){mainTickArray_continuousindices=_0xc14313;mainDigitArray_continuousindices=_0xce80f1;mainMarket_continuousindices=arrMarket_Continuous[_0x5cdcd1[_0x48c2('0x496')](_0x4ba4cb,0x1)];func$1$9$8$7$PurchaseConditions_continuousindices();}}};const showUpCandle=(_0x322051,_0x3b3230,_0x39c420)=>{var _0x15e0ee={'snQlb':function(_0xee1d59,_0x2503a8){return _0xee1d59>_0x2503a8;},'QNIWa':function(_0x303963,_0x57bacc){return _0x303963+_0x57bacc;},'IBmkV':function(_0x3df48f,_0x42bf2d){return _0x3df48f+_0x42bf2d;},'xJvRu':_0x48c2('0x49c'),'YXfUB':function(_0x5baf0f,_0x5b54f4){return _0x5baf0f<_0x5b54f4;},'dQhvv':function(_0x57c99a,_0x14b381){return _0x57c99a-_0x14b381;},'XFoic':'Bull','ojTDL':_0x48c2('0x49d'),'SkIcw':_0x48c2('0x49e'),'GAYJw':function(_0x1d1a19,_0x4a28b7){return _0x1d1a19+_0x4a28b7;},'Lprqb':_0x48c2('0x49f'),'sOPvR':function(_0x51a4be,_0x1fbbbe){return _0x51a4be+_0x1fbbbe;},'IqFjb':function(_0x47f3ac,_0x1306ea){return _0x47f3ac+_0x1306ea;},'XuWYS':function(_0x3f399d,_0x355258){return _0x3f399d+_0x355258;},'dgkyp':_0x48c2('0x4a0'),'zAnXY':function(_0x1d49bb,_0x1d5a22){return _0x1d49bb>_0x1d5a22;},'QuDno':_0x48c2('0x4a1'),'UClta':_0x48c2('0x4a2'),'Ugpba':function(_0xabffd0,_0x1bd69b){return _0xabffd0*_0x1bd69b;},'kgFiF':function(_0x38a81e,_0x77a54e){return _0x38a81e/_0x77a54e;},'PRgpI':function(_0x28b51a,_0x3c10ad){return _0x28b51a+_0x3c10ad;},'rTPPh':function(_0x3e4aa5,_0x1d2140){return _0x3e4aa5+_0x1d2140;},'QIWPK':function(_0x182f23,_0x2b53e9){return _0x182f23+_0x2b53e9;},'dXYuV':_0x48c2('0x4a3'),'tHnuv':function(_0x3abb9d,_0x1be8e6){return _0x3abb9d<_0x1be8e6;},'JKlqj':function(_0x8059c2,_0x543f91){return _0x8059c2-_0x543f91;},'Jenow':function(_0x2f5b4f,_0x2e9f86){return _0x2f5b4f+_0x2e9f86;},'cqkgQ':function(_0x58343d,_0x17f18c){return _0x58343d+_0x17f18c;},'yLUWD':function(_0x36aa74){return _0x36aa74();}};let _0xcf2186,_0x338f61,_0x41d582,_0x2ef980,_0x81d26d;for(i=0xa;_0x15e0ee[_0x48c2('0x4a4')](i,_0x3b3230['length']);i--){_0xcf2186=document['getElementById'](_0x15e0ee['QNIWa'](_0x15e0ee['QNIWa'](_0x15e0ee[_0x48c2('0x4a5')](_0x15e0ee[_0x48c2('0x4a6')],_0x322051),'_'),i));_0xcf2186[_0x48c2('0x6c')]='';_0xcf2186['style']='';}for(i=0x0;_0x15e0ee[_0x48c2('0x4a7')](i,_0x3b3230[_0x48c2('0x12')]);i++){_0xcf2186=document[_0x48c2('0x2d')](_0x15e0ee[_0x48c2('0x4a6')]+_0x322051+'_'+_0x15e0ee['dQhvv'](_0x3b3230[_0x48c2('0x12')],i));if(_0x15e0ee[_0x48c2('0x4a4')](_0x3b3230[i][_0x48c2('0x1f2')],_0x3b3230[i][_0x48c2('0x1d8')])){_0x338f61=_0x15e0ee[_0x48c2('0x4a8')];_0x41d582=colorRise;}else if(_0x3b3230[i][_0x48c2('0x1f2')]<_0x3b3230[i][_0x48c2('0x1d8')]){_0x338f61=_0x15e0ee[_0x48c2('0x4a9')];_0x41d582=colorFall;}else{_0x338f61=_0x15e0ee[_0x48c2('0x4aa')];_0x41d582=colorNo;}_0xcf2186[_0x48c2('0x6c')]=_0x338f61;_0xcf2186[_0x48c2('0x7d')]['backgroundColor']=_0x41d582;}document['getElementById'](_0x15e0ee[_0x48c2('0x4ab')](_0x15e0ee[_0x48c2('0x4ab')](_0x48c2('0x49c'),_0x322051),_0x15e0ee[_0x48c2('0x4ac')]))['innerText']=_0x3b3230[_0x15e0ee['dQhvv'](_0x3b3230[_0x48c2('0x12')],0x1)]['open'][_0x48c2('0x115')](_0x39c420);document['getElementById'](_0x15e0ee[_0x48c2('0x4ab')](_0x15e0ee[_0x48c2('0x4ab')](_0x15e0ee[_0x48c2('0x4a6')],_0x322051),_0x48c2('0x4ad')))['innerText']=_0x3b3230[_0x15e0ee[_0x48c2('0x4ae')](_0x3b3230[_0x48c2('0x12')],0x1)]['high'][_0x48c2('0x115')](_0x39c420);document[_0x48c2('0x2d')](_0x15e0ee[_0x48c2('0x4af')](_0x15e0ee[_0x48c2('0x4b0')](_0x15e0ee['xJvRu'],_0x322051),_0x48c2('0x4b1')))[_0x48c2('0x6c')]=_0x3b3230[_0x3b3230['length']-0x1][_0x48c2('0x4b2')][_0x48c2('0x115')](_0x39c420);document[_0x48c2('0x2d')](_0x15e0ee[_0x48c2('0x4b3')](_0x15e0ee[_0x48c2('0x4b3')](_0x15e0ee['xJvRu'],_0x322051),_0x15e0ee['dgkyp']))['innerText']=_0x3b3230[_0x3b3230[_0x48c2('0x12')]-0x1][_0x48c2('0x1f2')][_0x48c2('0x115')](_0x39c420);if(_0x15e0ee[_0x48c2('0x4b4')](_0x3b3230[_0x48c2('0x12')],0x1)){var _0x320398=_0x15e0ee[_0x48c2('0x4b5')][_0x48c2('0xe')]('|'),_0x26a13a=0x0;while(!![]){switch(_0x320398[_0x26a13a++]){case'0':document[_0x48c2('0x2d')](_0x15e0ee[_0x48c2('0x4b3')](_0x15e0ee[_0x48c2('0x4b3')](_0x15e0ee[_0x48c2('0x4a6')],_0x322051),_0x15e0ee[_0x48c2('0x4b6')]))[_0x48c2('0x6c')]=_0x15e0ee[_0x48c2('0x4b3')](_0x15e0ee['zAnXY'](_0x2ef980,0x0)?'+':_0x2ef980<0x0?'-':'',Math[_0x48c2('0x437')](_0x2ef980)['toFixed'](0x2));continue;case'1':_0x81d26d=_0x15e0ee[_0x48c2('0x4b7')](_0x15e0ee['kgFiF'](_0x2ef980,_0x3b3230[_0x15e0ee[_0x48c2('0x4ae')](_0x3b3230[_0x48c2('0x12')],0x2)][_0x48c2('0x1f2')]),0x64);continue;case'2':document[_0x48c2('0x2d')](_0x15e0ee['xJvRu']+_0x322051+_0x48c2('0x4a3'))[_0x48c2('0x6c')]=_0x15e0ee[_0x48c2('0x4b3')](_0x15e0ee[_0x48c2('0x4b4')](_0x2ef980,0x0)?'+':_0x15e0ee[_0x48c2('0x4a7')](_0x2ef980,0x0)?'-':'',Math[_0x48c2('0x437')](_0x81d26d)['toFixed'](0x2));continue;case'3':document[_0x48c2('0x2d')](_0x15e0ee['PRgpI'](_0x15e0ee[_0x48c2('0x4b8')](_0x15e0ee[_0x48c2('0x4a6')],_0x322051),_0x48c2('0x4a2')))[_0x48c2('0x7d')][_0x48c2('0x7e')]=document[_0x48c2('0x2d')](_0x15e0ee['rTPPh'](_0x15e0ee[_0x48c2('0x4b9')](_0x15e0ee[_0x48c2('0x4a6')],_0x322051),_0x15e0ee[_0x48c2('0x4ba')]))[_0x48c2('0x7d')][_0x48c2('0x7e')]=_0x15e0ee['zAnXY'](_0x2ef980,0x0)?colorRise:_0x15e0ee[_0x48c2('0x4bb')](_0x2ef980,0x0)?colorFall:colorNo;continue;case'4':_0x2ef980=_0x15e0ee[_0x48c2('0x4bc')](_0x3b3230[_0x15e0ee[_0x48c2('0x4bc')](_0x3b3230[_0x48c2('0x12')],0x1)][_0x48c2('0x1f2')],_0x3b3230[_0x15e0ee[_0x48c2('0x4bc')](_0x3b3230[_0x48c2('0x12')],0x2)][_0x48c2('0x1f2')]);continue;}break;}}else{document['getElementById'](_0x15e0ee[_0x48c2('0x4b9')](_0x15e0ee[_0x48c2('0x4bd')](_0x15e0ee[_0x48c2('0x4a6')],_0x322051),_0x48c2('0x4a2')))['innerText']=document['getElementById'](_0x15e0ee[_0x48c2('0x4bd')](_0x15e0ee[_0x48c2('0x4bd')](_0x15e0ee[_0x48c2('0x4a6')],_0x322051),_0x48c2('0x4a3')))[_0x48c2('0x6c')]=document['getElementById'](_0x15e0ee[_0x48c2('0x4be')](_0x48c2('0x49c')+_0x322051,_0x15e0ee[_0x48c2('0x4b6')]))['style']=document[_0x48c2('0x2d')](_0x15e0ee['cqkgQ'](_0x15e0ee['cqkgQ']('thelast10candles_',_0x322051),_0x15e0ee[_0x48c2('0x4ba')]))['style']='';}_0x15e0ee['yLUWD'](checkIfReadyToMainLogic);};const checkIfReadyToMainLogic=()=>{var _0x1b96b7={'zSLuu':function(_0x3fb887,_0x25521){return _0x3fb887-_0x25521;},'qBBip':function(_0x1bc51e){return _0x1bc51e();},'iggmQ':function(_0x5609e2,_0x48b0b5){return _0x5609e2!=_0x48b0b5;}};if(_0x1b96b7[_0x48c2('0x4bf')](Date['now'](),lastTimeCheckIfReadyToMainLogic)<0x1f4){return;};lastTimeCheckIfReadyToMainLogic=Date[_0x48c2('0x497')]();if(sudahRunOnceAtStart&&btn_run[_0x48c2('0x3ab')][_0x48c2('0xe')]('/')['pop']()==='icon_stop.png'&&!sedangForgetAllTicks&&navigator[_0x48c2('0x499')]){_0x1b96b7[_0x48c2('0x4c0')](mainLogic);}else if(_0x1b96b7[_0x48c2('0x4c1')](prContract[_0x48c2('0x12')],0x0)){}};const btn_runClickResponse=()=>{var _0x29ffbf={'DLSVc':'icon_run.png','fKeNj':function(_0x4886c0,_0x2543a4){return _0x4886c0==_0x2543a4;},'eeJuG':_0x48c2('0x4c2'),'OeVVb':_0x48c2('0x7b'),'MQlUD':_0x48c2('0x4c3'),'nJZza':function(_0x1f8dee,_0x5f503e){return _0x1f8dee>_0x5f503e;},'lrzhf':function(_0x19d19b){return _0x19d19b();},'ykvMR':'stop','ktdlh':function(_0xd012d7,_0x2a7359){return _0xd012d7(_0x2a7359);},'KVWsG':function(_0x1a1c44,_0x3308b6){return _0x1a1c44(_0x3308b6);},'PtaGE':_0x48c2('0x4c4'),'TEuWH':function(_0x57f741,_0x2f2aee){return _0x57f741==_0x2f2aee;},'DzPMT':_0x48c2('0x37a'),'ilSdw':function(_0x5b50a4,_0x342099){return _0x5b50a4(_0x342099);},'viEng':_0x48c2('0x4c5')};if(btn_run[_0x48c2('0x3ab')][_0x48c2('0xe')]('/')[_0x48c2('0x3ac')]()==_0x29ffbf[_0x48c2('0x4c6')]){if(_0x29ffbf[_0x48c2('0x4c7')](inpMToken[_0x48c2('0xb')][_0x48c2('0x4c8')]()[_0x48c2('0x12')],0x0)){$[_0x48c2('0x80')](_0x29ffbf[_0x48c2('0x4c9')],{'position':_0x48c2('0x76'),'className':_0x29ffbf[_0x48c2('0x4ca')]});document[_0x48c2('0x2d')](_0x29ffbf[_0x48c2('0x4cb')])[_0x48c2('0x7d')][_0x48c2('0x3b1')]=_0x48c2('0x384');inpMToken[_0x48c2('0x4cc')]();}else{var _0xf459f2=_0x48c2('0x4cd')[_0x48c2('0xe')]('|'),_0x4c0088=0x0;while(!![]){switch(_0xf459f2[_0x4c0088++]){case'0':showBoxSummary();continue;case'1':mainWorkspaceCode=javascript['javascriptGenerator'][_0x48c2('0x4ce')](Blockly[_0x48c2('0x4cf')]());continue;case'2':countVLose=0x0;continue;case'3':if(_0x29ffbf[_0x48c2('0x4d0')](inpSToken[_0x48c2('0xb')][_0x48c2('0x4c8')]()[_0x48c2('0x12')],0x0)){_0x29ffbf['lrzhf'](authorizeV);}continue;case'4':ubahbtn_run(_0x29ffbf[_0x48c2('0x4d1')]);continue;case'5':authorize();continue;case'6':sudahRunOnceAtStart=![];continue;case'7':_0x29ffbf[_0x48c2('0x4d2')](updateStatusBotRunning,'Bot\x20is\x20preparing...');continue;case'8':_0x29ffbf[_0x48c2('0x4d3')](updateStepper,0x0);continue;case'9':document[_0x48c2('0x2d')](_0x29ffbf[_0x48c2('0x4d4')])[_0x48c2('0x4d5')]=!![];continue;}break;}}}else if(_0x29ffbf[_0x48c2('0x4d6')](btn_run[_0x48c2('0x3ab')][_0x48c2('0xe')]('/')['pop'](),_0x29ffbf[_0x48c2('0x4d7')])){var _0x3cb5a4=_0x48c2('0x4d8')[_0x48c2('0xe')]('|'),_0x26a4b3=0x0;while(!![]){switch(_0x3cb5a4[_0x26a4b3++]){case'0':sedangAuthorize=![];continue;case'1':emptyAllFunc();continue;case'2':refreshBoxData(selData[_0x48c2('0xb')]);continue;case'3':_0x29ffbf[_0x48c2('0x4d9')](ubahbtn_run,_0x48c2('0x1d0'));continue;case'4':sudahRunOnceAtStart=![];continue;case'5':_0x29ffbf[_0x48c2('0x4d9')](updateStatusBotRunning,_0x29ffbf['viEng']);continue;case'6':timeMayOP=0x0;continue;case'7':sedangAuthorizeV=![];continue;case'8':document[_0x48c2('0x2d')](_0x29ffbf[_0x48c2('0x4d4')])['hidden']=![];continue;}break;}}};const emptyAllFunc=()=>{var _0x5d51d9={'JAcwK':_0x48c2('0x4da')};var _0xbd9df5=_0x5d51d9[_0x48c2('0x4db')][_0x48c2('0xe')]('|'),_0x240083=0x0;while(!![]){switch(_0xbd9df5[_0x240083++]){case'0':func$1$9$8$7$PurchaseConditions_continuousindices=()=>{};continue;case'1':func$1$9$8$7$RunOnceAtStart=()=>{izinRun2=![];};continue;case'2':func$1$9$8$7$RestartTradingConditions=()=>{};continue;case'3':func$1$9$8$7$SellConditions=()=>{};continue;case'4':func$1$9$8$7$PurchaseConditions=()=>{if(izinRun2){izinRun2=![];};};continue;}break;}};emptyAllFunc();const openResponse=()=>{var _0x3df99e={'vpScb':function(_0x2e18cc){return _0x2e18cc();},'Tlzow':function(_0x40f6c6){return _0x40f6c6();},'RkmMn':function(_0x67c043){return _0x67c043();}};wsMasterOpened=!![];_0x3df99e[_0x48c2('0x4dc')](getSymbols);_0x3df99e[_0x48c2('0x4dd')](cekWSOpened);if(sedangAuthorize){_0x3df99e[_0x48c2('0x4de')](authorize);}};const openResponseV=()=>{wsSlaveOpened=!![];cekWSOpened();if(sedangAuthorizeV){authorizeV();}};const getSymbols=()=>{var _0x2bc7cc={'VfQSH':'brief'};_0x1a19x7[_0x48c2('0x1c4')](JSON['stringify']({'active_symbols':_0x2bc7cc[_0x48c2('0x4df')],'passthrough':{'app_id':app_id}}));};const arrangeSymbols=_0x34ae12=>{var _0x504ff1={'kVdOP':_0x48c2('0x4e0'),'dZxXz':function(_0x43bd7f,_0x4ac7e7){return _0x43bd7f<_0x4ac7e7;},'mkHlB':function(_0x308850,_0x27e0f8){return _0x308850+_0x27e0f8;},'mMCMT':function(_0x3c37b8,_0x37e0f6){return _0x3c37b8+_0x37e0f6;},'fZMpq':function(_0x35d945,_0x4736ef){return _0x35d945+_0x4736ef;},'yAomy':function(_0x49cd17,_0x2903d1){return _0x49cd17+_0x2903d1;},'cnglH':function(_0xfc2ce9,_0x3ce5dd){return _0xfc2ce9<_0x3ce5dd;},'JsAYy':_0x48c2('0x4e1'),'GDLbg':function(_0x2028b0,_0x1da889){return _0x2028b0!=_0x1da889;},'CcVIq':function(_0xaedb27,_0x783184){return _0xaedb27(_0x783184);},'VtTKj':_0x48c2('0x4e2'),'CMObp':_0x48c2('0xef')};var _0x37d633=_0x504ff1['kVdOP'][_0x48c2('0xe')]('|'),_0x31f205=0x0;while(!![]){switch(_0x37d633[_0x31f205++]){case'0':for(i=0x0;_0x504ff1[_0x48c2('0x4e3')](i,_0x34ae12[_0x48c2('0x9b')][_0x48c2('0x12')]);i++){if(!arrMarket[_0x48c2('0x61')](_0x34ae12[_0x48c2('0x9b')][i][_0x48c2('0x4e4')])){arrMarket['push'](_0x34ae12[_0x48c2('0x9b')][i][_0x48c2('0x4e4')]);}if(!arrMarketToSubMarket[_0x48c2('0x61')](_0x504ff1['mkHlB'](_0x504ff1[_0x48c2('0x4e5')](_0x34ae12[_0x48c2('0x9b')][i][_0x48c2('0x4e4')],'|'),_0x34ae12[_0x48c2('0x9b')][i][_0x48c2('0x4e6')]))){arrMarketToSubMarket['push'](_0x504ff1['fZMpq'](_0x34ae12[_0x48c2('0x9b')][i][_0x48c2('0x4e4')]+'|',_0x34ae12['active_symbols'][i][_0x48c2('0x4e6')]));}if(!arrSubMarketToSymbol[_0x48c2('0x61')](_0x504ff1['fZMpq'](_0x504ff1[_0x48c2('0x4e7')](_0x504ff1['fZMpq'](_0x504ff1[_0x48c2('0x4e7')](_0x34ae12[_0x48c2('0x9b')][i][_0x48c2('0x4e6')],'|'),_0x34ae12[_0x48c2('0x9b')][i][_0x48c2('0x4e8')]),'|'),_0x34ae12[_0x48c2('0x9b')][i][_0x48c2('0x4e9')]))){arrSubMarketToSymbol[_0x48c2('0x141')](_0x504ff1[_0x48c2('0x4e7')](_0x504ff1[_0x48c2('0x4ea')](_0x504ff1[_0x48c2('0x4ea')](_0x34ae12[_0x48c2('0x9b')][i][_0x48c2('0x4e6')],'|'),_0x34ae12[_0x48c2('0x9b')][i]['display_name'])+'|',_0x34ae12[_0x48c2('0x9b')][i][_0x48c2('0x4e9')]));}}continue;case'1':for(i=0x0;_0x504ff1['cnglH'](i,arrMarket[_0x48c2('0x12')]);i++){el=document[_0x48c2('0x4eb')](_0x504ff1[_0x48c2('0x4ec')]);el[_0x48c2('0x4ed')]=arrMarket[i];el['value']=arrMarket[i];selMarket['appendChild'](el);}continue;case'2':selMarket[_0x48c2('0x4ee')]='';continue;case'3':arrMarket=[],arrMarketToSubMarket=[],arrSubMarketToSymbol=[];continue;case'4':if(_0x504ff1[_0x48c2('0x4ef')](localStorage[_0x48c2('0x62')](_0x48c2('0x4e2')),null)){_0x504ff1['CcVIq'](setMarket,localStorage[_0x48c2('0x62')](_0x504ff1[_0x48c2('0x4f0')]));}else{setMarket(_0x504ff1[_0x48c2('0x4f1')]);}continue;}break;}};const setMarket=_0x4d87d7=>{var _0x51a9f5={'jFKPP':function(_0x474a88,_0x297b28){return _0x474a88<_0x297b28;},'xstbn':function(_0x5cabe2,_0x3779ef){return _0x5cabe2==_0x3779ef;},'QLTsg':function(_0x2954d2,_0x33e067,_0x384281){return _0x2954d2(_0x33e067,_0x384281);}};let _0xae4410,_0x59d3aa;for(i=0x0;_0x51a9f5[_0x48c2('0x4f2')](i,arrSubMarketToSymbol[_0x48c2('0x12')]);i++){if(_0x51a9f5[_0x48c2('0x4f3')](arrSubMarketToSymbol[i][_0x48c2('0xe')]('|')[0x2],_0x4d87d7)){_0x59d3aa=arrSubMarketToSymbol[i][_0x48c2('0xe')]('|')[0x0];break;}}for(i=0x0;_0x51a9f5['jFKPP'](i,arrMarketToSubMarket['length']);i++){if(_0x51a9f5[_0x48c2('0x4f3')](arrMarketToSubMarket[i]['split']('|')[0x1],_0x59d3aa)){_0xae4410=arrMarketToSubMarket[i][_0x48c2('0xe')]('|')[0x0];break;}}selMarket[_0x48c2('0xb')]=_0xae4410;_0x51a9f5[_0x48c2('0x4f4')](fillSubMarket,_0x59d3aa,_0x4d87d7);};const fillSubMarket=(_0x276737,_0x3cc57f)=>{var _0x1b343f={'JqFPY':function(_0x4d1cb0,_0x324a57){return _0x4d1cb0<_0x324a57;},'QzJjl':function(_0x32e2df,_0x42991e){return _0x32e2df==_0x42991e;},'YuWqr':'option','pJDmV':function(_0xc8f93a,_0x1394b2){return _0xc8f93a!=_0x1394b2;},'fRJWg':function(_0x284e56,_0x13231f){return _0x284e56(_0x13231f);}};selSubMarket['innerHTML']='';for(i=0x0;_0x1b343f[_0x48c2('0x4f5')](i,arrMarketToSubMarket[_0x48c2('0x12')]);i++){if(_0x1b343f['QzJjl'](arrMarketToSubMarket[i]['split']('|')[0x0],selMarket[_0x48c2('0xb')])){el=document['createElement'](_0x1b343f[_0x48c2('0x4f6')]);el[_0x48c2('0x4ed')]=arrMarketToSubMarket[i][_0x48c2('0xe')]('|')[0x1];el[_0x48c2('0xb')]=arrMarketToSubMarket[i][_0x48c2('0xe')]('|')[0x1];selSubMarket['appendChild'](el);}}if(_0x1b343f[_0x48c2('0x4f7')](_0x276737,_0x48c2('0x357'))){selSubMarket[_0x48c2('0xb')]=_0x276737;}_0x1b343f[_0x48c2('0x4f8')](fillSymbol,_0x3cc57f);};const fillSymbol=_0x2e0bac=>{var _0x5940ae={'jfVUg':_0x48c2('0x4f9'),'OOAbZ':function(_0x5611d7,_0x429ad3){return _0x5611d7!=_0x429ad3;},'KYmuu':'none','nDcnI':function(_0x762c2d,_0x979d90){return _0x762c2d<_0x979d90;},'WwLCG':function(_0x3c9a17,_0x2705f2){return _0x3c9a17==_0x2705f2;},'WAAUJ':_0x48c2('0x4e1'),'ipBHa':'selSymbol','hOQba':_0x48c2('0x4fa')};var _0x4676a9=_0x5940ae[_0x48c2('0x4fb')][_0x48c2('0xe')]('|'),_0x779854=0x0;while(!![]){switch(_0x4676a9[_0x779854++]){case'0':selSymbol[_0x48c2('0x4ee')]='';continue;case'1':forgetAllTicks();continue;case'2':if(_0x5940ae[_0x48c2('0x4fc')](_0x2e0bac,_0x5940ae[_0x48c2('0x4fd')])){selSymbol['value']=_0x2e0bac;}continue;case'3':for(i=0x0;_0x5940ae[_0x48c2('0x4fe')](i,arrSubMarketToSymbol[_0x48c2('0x12')]);i++){if(_0x5940ae[_0x48c2('0x4ff')](arrSubMarketToSymbol[i][_0x48c2('0xe')]('|')[0x0],selSubMarket[_0x48c2('0xb')])){el=document[_0x48c2('0x4eb')](_0x5940ae[_0x48c2('0x500')]);el['textContent']=arrSubMarketToSymbol[i][_0x48c2('0xe')]('|')[0x1];el[_0x48c2('0xb')]=arrSubMarketToSymbol[i][_0x48c2('0xe')]('|')[0x2];selSymbol[_0x48c2('0x501')](el);}}continue;case'4':localStorage[_0x48c2('0x5f')](_0x5940ae['ipBHa'],selSymbol[_0x48c2('0xb')]);continue;case'5':mainSymbol=selSymbol['value'];continue;case'6':document['getElementById'](_0x5940ae[_0x48c2('0x502')])[_0x48c2('0x6c')]=selSymbol['options'][selSymbol[_0x48c2('0x503')]][_0x48c2('0x504')];continue;}break;}};const marketChanged=()=>{var _0x51400d={'IvKZH':function(_0x33081c,_0x5010e2,_0x4be492){return _0x33081c(_0x5010e2,_0x4be492);},'DxiXl':_0x48c2('0x357')};_0x51400d[_0x48c2('0x505')](fillSubMarket,_0x48c2('0x357'),_0x51400d['DxiXl']);};const subMarketChanged=()=>{var _0xf91175={'ZogpP':function(_0x5b0cab,_0x41123d){return _0x5b0cab(_0x41123d);}};_0xf91175[_0x48c2('0x506')](fillSymbol,'none');};const cekWSOpened=()=>{var _0x2fa1e1={'KoqYQ':'visible','gMYMy':function(_0x5b4b6a,_0x44b1d6){return _0x5b4b6a+_0x44b1d6;},'fJiaR':_0x48c2('0x507'),'MAPfi':function(_0x442121,_0x175bd6){return _0x442121==_0x175bd6;},'SNJcL':_0x48c2('0x508'),'SVlzT':function(_0x4b802d,_0x2999c8,_0x329c37){return _0x4b802d(_0x2999c8,_0x329c37);}};if(!wsSlaveSudahFirstOpened&&wsMasterOpened&&wsSlaveOpened){wsSlaveSudahFirstOpened=!![];btn_run[_0x48c2('0x8f')]=btn_run2[_0x48c2('0x8f')]=btnSimpleRun[_0x48c2('0x8f')]=![];btn_run[_0x48c2('0x7d')][_0x48c2('0x509')]=btn_run2[_0x48c2('0x7d')][_0x48c2('0x509')]=btnSimpleRun['style']['visibility']=_0x2fa1e1['KoqYQ'];btnSimpleRun['style'][_0x48c2('0x50a')]=0x1;ubahbtn_run('run');spanSimpleRobotName[_0x48c2('0x6c')]=_0x2fa1e1[_0x48c2('0x50b')](_0x2fa1e1[_0x48c2('0x50c')],_0x2fa1e1['MAPfi'](localStorage[_0x48c2('0x62')](_0x2fa1e1['SNJcL']),null)?'-':localStorage['getItem']('mainRobotName'));_0x2fa1e1[_0x48c2('0x50d')](writeLog,'','Initialized.');}};const closeResponse=()=>{wsMasterOpened=![];};const closeResponseV=()=>{wsSlaveOpened=![];slaveAuthorized=![];};const authorize=()=>{_0x1a19x7[_0x48c2('0x1c4')](JSON[_0x48c2('0x16a')]({'forget':idSubBalance,'passthrough':{'app_id':app_id}}));summary_balance[_0x48c2('0x6c')]='-';_0x1a19x7['send'](JSON[_0x48c2('0x16a')]({'authorize':inpMToken[_0x48c2('0xb')],'passthrough':{'app_id':app_id}}));};const authorizeV=()=>{var _0x588f8a={'YGCmH':function(_0x30c4a8,_0x257431){return _0x30c4a8==_0x257431;},'qtxXL':function(_0x1890de){return _0x1890de();}};slaveAuthorized=![];setTimeout(()=>{if(_0x588f8a[_0x48c2('0x50e')](_0x1a19x8['readyState'],0x1)){_0x1a19x8['send'](JSON[_0x48c2('0x16a')]({'authorize':inpSToken[_0x48c2('0xb')],'passthrough':{'app_id':app_id}}));}else{_0x588f8a[_0x48c2('0x50f')](authorizeV);}},0x1388);};const randomArray=_0xe62c48=>{return _0xe62c48[Math[_0x48c2('0x510')](Math[_0x48c2('0x511')]()*_0xe62c48['length'])];};const mainPurchase=(_0x3f7cb2,_0x6311be,_0x49826e,_0x4880ef,_0x3282c7,_0x57bc3a,_0x45fc11,_0x4807ba,_0x34fb77,_0x367169,_0x598ac2,_0x532e7c,_0x2a7807,_0x56e1b7,_0x48c283,_0x3b003d,_0x485ab4,_0x2bb599,_0x5a158c)=>{var _0x1f84c8={'YioUS':function(_0x11e967,_0x45eedd){return _0x11e967*_0x45eedd;},'CwrNT':function(_0x393d27,_0x35cc4f){return _0x393d27==_0x35cc4f;},'iuQGt':_0x48c2('0x512'),'dHALc':function(_0x271b3b,_0x5c3333){return _0x271b3b==_0x5c3333;},'hTSJJ':_0x48c2('0x513'),'ybqNG':_0x48c2('0x514'),'sUHIX':_0x48c2('0x515'),'HxTIo':_0x48c2('0x516'),'qibjJ':'PUT','laDHN':_0x48c2('0x517'),'NkEHv':_0x48c2('0x518'),'WlPCs':_0x48c2('0x519'),'veyKC':_0x48c2('0x51a'),'GHZRW':_0x48c2('0x51b'),'OLwzM':_0x48c2('0x51c'),'iMkmg':_0x48c2('0x51d'),'EkAkj':'TURBOSLONG','Vjcdo':_0x48c2('0x51e'),'UOgCm':_0x48c2('0x51f'),'tCSvF':'DIGITUNDER','BwFyJ':function(_0xcdd373,_0x58dc0b){return _0xcdd373==_0x58dc0b;},'cZfDy':function(_0x493f8b,_0x494628,_0x3add99){return _0x493f8b(_0x494628,_0x3add99);},'hHcTY':function(_0x320a09,_0x1032c1){return _0x320a09+_0x1032c1;},'DWKEq':function(_0x4ad196,_0x3649dc){return _0x4ad196+_0x3649dc;},'XaDnr':function(_0xcc5e8a,_0xe4af7c){return _0xcc5e8a+_0xe4af7c;},'DOqWa':function(_0x43ef0d,_0x2c288f){return _0x43ef0d+_0x2c288f;},'yjhUe':function(_0x2bdde9,_0x21906e){return _0x2bdde9+_0x21906e;},'muRkW':function(_0x518eac,_0x32ac77){return _0x518eac+_0x32ac77;},'MQUKo':function(_0x14696b,_0x41f96e){return _0x14696b+_0x41f96e;},'WyONw':'[Virtual]\x20','MaSGi':_0x48c2('0x520'),'grPZx':_0x48c2('0x521'),'DBcHd':function(_0x42df8c,_0x48c081){return _0x42df8c(_0x48c081);},'TxWhj':_0x48c2('0x522'),'zdvji':_0x48c2('0x523'),'AnaXj':function(_0x174797,_0x44bebd,_0x5c6d33){return _0x174797(_0x44bebd,_0x5c6d33);},'MZvLT':function(_0x385324,_0x5add71){return _0x385324+_0x5add71;},'GwrnK':function(_0x1986c4,_0x2d9724){return _0x1986c4+_0x2d9724;},'ONZhE':function(_0x11c56b,_0x27b7c2){return _0x11c56b+_0x27b7c2;},'FCCul':function(_0x559bb1,_0x3bcc7a){return _0x559bb1+_0x3bcc7a;},'VNYrU':function(_0xd8855a,_0x69f554){return _0xd8855a+_0x69f554;},'Fdxka':function(_0xe9bcde,_0x3a543e){return _0xe9bcde+_0x3a543e;},'wvSYr':function(_0x1f1fce,_0x5ec1b5){return _0x1f1fce+_0x5ec1b5;},'MrvBB':function(_0x45b081,_0x2fb96c){return _0x45b081(_0x2fb96c);},'PCrhM':_0x48c2('0x524'),'AsJSl':_0x48c2('0x525'),'DzNCv':function(_0x152558,_0x3c32b5,_0x151aa2){return _0x152558(_0x3c32b5,_0x151aa2);},'tDTCy':function(_0x5530b5,_0x47934d){return _0x5530b5+_0x47934d;},'zObLy':function(_0x43d390,_0x4fd562){return _0x43d390+_0x4fd562;},'ohkXM':function(_0x32e308,_0x5c0dfe){return _0x32e308+_0x5c0dfe;},'TjONM':function(_0x2fdd23,_0x24ca32){return _0x2fdd23==_0x24ca32;},'oBYRB':function(_0x153866,_0x17dc1d){return _0x153866==_0x17dc1d;},'CHfqw':_0x48c2('0x526'),'VghJS':'ASIAND','ljnjR':'DIGITEVEN','eIhfv':_0x48c2('0x527'),'lCDHN':_0x48c2('0x528'),'cRgKU':_0x48c2('0x529'),'OWvgG':'RUNLOW','Zdnmn':function(_0x2c7d1e,_0x21407f){return _0x2c7d1e+_0x21407f;},'KyPfa':function(_0x3f6ed9,_0x3f5ac2){return _0x3f6ed9+_0x3f5ac2;},'Yfuur':function(_0x4b75b8,_0x40f988){return _0x4b75b8+_0x40f988;},'NSrBD':function(_0x133a15,_0x103793){return _0x133a15+_0x103793;},'WfbhU':function(_0x1596b5,_0x332582){return _0x1596b5+_0x332582;},'RJVSH':function(_0x16ff37,_0x3e518b){return _0x16ff37+_0x3e518b;},'mzlWW':function(_0x182212,_0x31e233){return _0x182212(_0x31e233);},'EjFor':function(_0x2944f9,_0x4526f1){return _0x2944f9(_0x4526f1);},'OGNYm':function(_0x112162,_0x649ec){return _0x112162==_0x649ec;},'VDTdW':_0x48c2('0x52a'),'KNVwF':_0x48c2('0x52b'),'hWfPI':'LBHIGHLOW','RgfoJ':function(_0x441469,_0x2591d5,_0x199df8){return _0x441469(_0x2591d5,_0x199df8);},'hyEzt':function(_0x26a9f0,_0x312323){return _0x26a9f0+_0x312323;},'jXLmA':function(_0x5c5005,_0x144006){return _0x5c5005==_0x144006;},'YAaIU':function(_0x5ba772,_0x35aa53){return _0x5ba772+_0x35aa53;},'CyGRr':function(_0x41e8d4,_0x4e3922){return _0x41e8d4+_0x4e3922;},'BAPSA':function(_0x29bf98,_0x4ce7fe){return _0x29bf98+_0x4ce7fe;},'UPZSB':function(_0x586eca,_0x7fb152){return _0x586eca+_0x7fb152;},'MzQFr':function(_0x5f1683,_0x5844e4,_0x49489e){return _0x5f1683(_0x5844e4,_0x49489e);},'rOsnb':function(_0x5c7368,_0x10a3d6){return _0x5c7368+_0x10a3d6;},'KCKSH':function(_0x11b008,_0x2e3f7a){return _0x11b008+_0x2e3f7a;},'KDIpE':function(_0x1767f9,_0x2e7c75){return _0x1767f9+_0x2e7c75;},'zGPbV':function(_0x140cab,_0x1ffffc){return _0x140cab==_0x1ffffc;},'RWkEt':',\x20growth\x20rate:\x20','jigvx':_0x48c2('0x52c'),'mTLCr':function(_0x25439f,_0x19e5cb){return _0x25439f(_0x19e5cb);},'cfeSp':function(_0x3b7836,_0x73eace){return _0x3b7836/_0x73eace;},'mLevO':function(_0x239023,_0x1c4045){return _0x239023==_0x1c4045;},'ZxHDa':_0x48c2('0x52d'),'hYiHB':function(_0x30479e,_0x20a71b){return _0x30479e+_0x20a71b;},'NwEaE':function(_0x4124fa,_0x3fa6b8){return _0x4124fa+_0x3fa6b8;},'TKAcj':function(_0x281786,_0x2b6820){return _0x281786+_0x2b6820;},'jxACX':function(_0x155c62,_0x1497fb){return _0x155c62+_0x1497fb;},'foZKV':_0x48c2('0x52e')};if(sedangForgetAllTicks){return;}updateStepper(0x2);tempDuration=_0x45fc11=='rt'?Math['floor'](_0x1f84c8['YioUS'](Math['random'](),0xa))+0x1:_0x57bc3a;tempDurationUnit=_0x1f84c8[_0x48c2('0x52f')](_0x45fc11,'rt')?'t':_0x45fc11;if(tempDurationUnit=='t'){tempDetikPengali=_0x3282c7[_0x48c2('0x61')](_0x1f84c8[_0x48c2('0x530')])?0x1:0x2;}else if(_0x1f84c8[_0x48c2('0x52f')](tempDurationUnit,'s')){tempDetikPengali=0x1;}else if(tempDurationUnit=='m'){tempDetikPengali=0x3c;}else if(_0x1f84c8[_0x48c2('0x52f')](tempDurationUnit,'h')){tempDetikPengali=0xe10;}else if(_0x1f84c8[_0x48c2('0x52f')](tempDurationUnit,'d')){tempDetikPengali=0x15180;}if(_0x1f84c8['dHALc'](_0x3f7cb2,_0x1f84c8[_0x48c2('0x531')])){conn_nya=_0x1a19x7;}else if(_0x1f84c8[_0x48c2('0x532')](_0x3f7cb2,_0x1f84c8[_0x48c2('0x533')])){conn_nya=_0x1a19x8;};if(_0x1f84c8[_0x48c2('0x532')](_0x6311be,_0x1f84c8[_0x48c2('0x534')])){stakeNow=_0x49826e;};if([_0x1f84c8[_0x48c2('0x535')],_0x1f84c8[_0x48c2('0x536')],_0x1f84c8[_0x48c2('0x537')],'PUTE',_0x1f84c8[_0x48c2('0x538')],_0x1f84c8[_0x48c2('0x539')],_0x1f84c8[_0x48c2('0x53a')],_0x1f84c8[_0x48c2('0x53b')],_0x48c2('0x51f'),_0x48c2('0x53c'),_0x1f84c8[_0x48c2('0x53d')],_0x1f84c8['iMkmg'],_0x1f84c8[_0x48c2('0x53e')],_0x1f84c8[_0x48c2('0x53f')]][_0x48c2('0x61')](_0x4880ef)){let _0x250e61;if([_0x1f84c8['HxTIo'],'PUT',_0x48c2('0x517'),'PUTE',_0x1f84c8[_0x48c2('0x538')],_0x48c2('0x519'),_0x1f84c8['OLwzM'],_0x1f84c8[_0x48c2('0x540')],_0x1f84c8[_0x48c2('0x53e')],_0x1f84c8[_0x48c2('0x53f')]]['includes'](_0x4880ef)){_0x250e61=_0x4807ba;}else if([_0x48c2('0x51a'),_0x1f84c8[_0x48c2('0x53b')]][_0x48c2('0x61')](_0x4880ef)){_0x250e61=_0x598ac2;}else if([_0x1f84c8['UOgCm']][_0x48c2('0x61')](_0x4880ef)){_0x250e61=_0x532e7c;}else if([_0x1f84c8[_0x48c2('0x541')]][_0x48c2('0x61')](_0x4880ef)){_0x250e61=_0x2a7807;}if([_0x48c2('0x516'),_0x48c2('0x542'),_0x1f84c8[_0x48c2('0x537')],'PUTE'][_0x48c2('0x61')](_0x4880ef)&&(_0x250e61=='+0'||_0x250e61=='-0'||_0x1f84c8[_0x48c2('0x543')](_0x250e61,0x0))){_0x1f84c8[_0x48c2('0x544')](writeLog,'',_0x1f84c8['hHcTY'](_0x1f84c8[_0x48c2('0x545')](_0x1f84c8['DWKEq'](_0x1f84c8[_0x48c2('0x545')](_0x1f84c8[_0x48c2('0x546')](_0x1f84c8[_0x48c2('0x547')](_0x1f84c8['yjhUe'](_0x1f84c8[_0x48c2('0x548')](_0x1f84c8[_0x48c2('0x549')](conn_nya==_0x1a19x8?_0x1f84c8['WyONw']:'',_0x1f84c8[_0x48c2('0x54a')]),_0x4880ef),_0x1f84c8['grPZx']),_0x1f84c8[_0x48c2('0x54b')](parseFloat,stakeNow)['toFixed'](0x2)),_0x1f84c8[_0x48c2('0x54c')]),tempDuration),tempDurationUnit),',\x20')+_0x3282c7,']'));conn_nya[_0x48c2('0x1c4')](JSON[_0x48c2('0x16a')]({'subscribe':0x1,'buy':0x1,'parameters':{'amount':parseFloat(stakeNow)[_0x48c2('0x115')](0x2),'basis':_0x1f84c8['zdvji'],'contract_type':_0x4880ef,'currency':conn_nya==_0x1a19x8?slaveCurrency:masterCurrency,'duration':tempDuration,'duration_unit':tempDurationUnit,'symbol':_0x3282c7},'price':0xf423f,'passthrough':{'app_id':app_id,'tempDuration':tempDuration,'tempDetikPengali':tempDetikPengali}}));}else{_0x1f84c8[_0x48c2('0x54d')](writeLog,'',_0x1f84c8[_0x48c2('0x549')](_0x1f84c8[_0x48c2('0x54e')](_0x1f84c8[_0x48c2('0x54f')](_0x1f84c8[_0x48c2('0x550')](_0x1f84c8[_0x48c2('0x550')](_0x1f84c8[_0x48c2('0x551')](_0x1f84c8[_0x48c2('0x552')](_0x1f84c8['Fdxka'](_0x1f84c8['wvSYr'](_0x1f84c8[_0x48c2('0x553')](_0x1f84c8[_0x48c2('0x553')](conn_nya==_0x1a19x8?_0x1f84c8[_0x48c2('0x554')]:'','Purchasing\x20'),_0x4880ef),'\x20'),_0x250e61),_0x1f84c8[_0x48c2('0x555')]),_0x1f84c8[_0x48c2('0x54b')](parseFloat,stakeNow)[_0x48c2('0x115')](0x2)),',\x20duration:\x20'),tempDuration)+tempDurationUnit,',\x20'),_0x3282c7),']'));conn_nya[_0x48c2('0x1c4')](JSON[_0x48c2('0x16a')]({'subscribe':0x1,'buy':0x1,'parameters':{'amount':_0x1f84c8[_0x48c2('0x556')](parseFloat,stakeNow)[_0x48c2('0x115')](0x2),'barrier':_0x250e61,'basis':_0x1f84c8['zdvji'],'contract_type':_0x4880ef,'currency':_0x1f84c8[_0x48c2('0x543')](conn_nya,_0x1a19x8)?slaveCurrency:masterCurrency,'duration':tempDuration,'duration_unit':tempDurationUnit,'symbol':_0x3282c7},'price':0xf423f,'passthrough':{'app_id':app_id,'tempDuration':tempDuration,'tempDetikPengali':tempDetikPengali}}));}}else if([_0x48c2('0x557'),_0x1f84c8[_0x48c2('0x558')],_0x1f84c8['AsJSl'],_0x48c2('0x559')][_0x48c2('0x61')](_0x4880ef)){_0x1f84c8[_0x48c2('0x55a')](writeLog,'',_0x1f84c8[_0x48c2('0x55b')](_0x1f84c8[_0x48c2('0x55b')](_0x1f84c8[_0x48c2('0x55b')](_0x1f84c8[_0x48c2('0x55b')](_0x1f84c8['tDTCy'](_0x1f84c8[_0x48c2('0x55c')](_0x1f84c8[_0x48c2('0x55c')](_0x1f84c8['zObLy'](_0x1f84c8[_0x48c2('0x55d')](_0x1f84c8[_0x48c2('0x55e')](conn_nya,_0x1a19x8)?_0x1f84c8[_0x48c2('0x554')]:'',_0x1f84c8[_0x48c2('0x54a')])+_0x4880ef+'\x20',_0x34fb77),'\x20'),_0x367169),_0x48c2('0x521'))+_0x1f84c8['MrvBB'](parseFloat,stakeNow)[_0x48c2('0x115')](0x2)+_0x1f84c8[_0x48c2('0x54c')]+tempDuration,tempDurationUnit),',\x20'),_0x3282c7),']'));conn_nya['send'](JSON[_0x48c2('0x16a')]({'subscribe':0x1,'buy':0x1,'parameters':{'amount':_0x1f84c8[_0x48c2('0x556')](parseFloat,stakeNow)['toFixed'](0x2),'barrier':_0x34fb77,'barrier2':_0x367169,'basis':_0x1f84c8[_0x48c2('0x55f')],'contract_type':_0x4880ef,'currency':_0x1f84c8['oBYRB'](conn_nya,_0x1a19x8)?slaveCurrency:masterCurrency,'duration':tempDuration,'duration_unit':tempDurationUnit,'symbol':_0x3282c7},'price':0xf423f,'passthrough':{'app_id':app_id,'tempDuration':tempDuration,'tempDetikPengali':tempDetikPengali}}));}else if([_0x1f84c8['CHfqw'],_0x1f84c8[_0x48c2('0x560')],_0x1f84c8[_0x48c2('0x561')],_0x1f84c8['eIhfv'],_0x1f84c8['lCDHN'],_0x1f84c8[_0x48c2('0x562')],'RUNHIGH',_0x1f84c8['OWvgG']][_0x48c2('0x61')](_0x4880ef)){writeLog('',_0x1f84c8[_0x48c2('0x563')](_0x1f84c8['KyPfa'](_0x1f84c8['Yfuur'](_0x1f84c8[_0x48c2('0x564')](_0x1f84c8[_0x48c2('0x565')](_0x1f84c8['RJVSH'](_0x1f84c8[_0x48c2('0x566')](_0x1f84c8['RJVSH'](_0x1f84c8[_0x48c2('0x566')]((conn_nya==_0x1a19x8?_0x1f84c8[_0x48c2('0x554')]:'')+_0x1f84c8['MaSGi'],_0x4880ef),_0x1f84c8['grPZx']),_0x1f84c8[_0x48c2('0x567')](parseFloat,stakeNow)[_0x48c2('0x115')](0x2)),_0x1f84c8[_0x48c2('0x54c')]),tempDuration),tempDurationUnit),',\x20'),_0x3282c7),']'));conn_nya[_0x48c2('0x1c4')](JSON[_0x48c2('0x16a')]({'subscribe':0x1,'buy':0x1,'parameters':{'amount':_0x1f84c8[_0x48c2('0x568')](parseFloat,stakeNow)['toFixed'](0x2),'basis':_0x1f84c8[_0x48c2('0x55f')],'contract_type':_0x4880ef,'currency':_0x1f84c8[_0x48c2('0x569')](conn_nya,_0x1a19x8)?slaveCurrency:masterCurrency,'duration':tempDuration,'duration_unit':tempDurationUnit,'symbol':_0x3282c7},'price':0xf423f,'passthrough':{'app_id':app_id,'tempDuration':tempDuration,'tempDetikPengali':tempDetikPengali}}));}else if([_0x1f84c8['VDTdW'],_0x1f84c8['KNVwF'],_0x1f84c8['hWfPI']]['includes'](_0x4880ef)){_0x1f84c8['RgfoJ'](writeLog,'',_0x1f84c8[_0x48c2('0x566')](_0x1f84c8[_0x48c2('0x56a')](_0x1f84c8[_0x48c2('0x56a')](_0x1f84c8[_0x48c2('0x56a')]((_0x1f84c8[_0x48c2('0x56b')](conn_nya,_0x1a19x8)?_0x48c2('0x56c'):'')+_0x1f84c8[_0x48c2('0x54a')]+_0x4880ef+'\x20[multiplier:\x20'+_0x56e1b7+_0x48c2('0x522')+tempDuration,tempDurationUnit),',\x20'),_0x3282c7),']'));conn_nya[_0x48c2('0x1c4')](JSON[_0x48c2('0x16a')]({'subscribe':0x1,'buy':0x1,'parameters':{'amount':_0x1f84c8[_0x48c2('0x568')](parseFloat,stakeNow)[_0x48c2('0x115')](0x2),'multiplier':_0x56e1b7,'contract_type':_0x4880ef,'currency':_0x1f84c8['jXLmA'](conn_nya,_0x1a19x8)?slaveCurrency:masterCurrency,'duration':tempDuration,'duration_unit':tempDurationUnit,'symbol':_0x3282c7},'price':0xf423f,'passthrough':{'app_id':app_id,'tempDuration':tempDuration,'tempDetikPengali':tempDetikPengali}}));}else if([_0x48c2('0x56d'),_0x48c2('0x56e')]['includes'](_0x4880ef)){_0x1f84c8[_0x48c2('0x56f')](writeLog,'',_0x1f84c8[_0x48c2('0x56a')](_0x1f84c8['hyEzt'](_0x1f84c8[_0x48c2('0x56a')](_0x1f84c8[_0x48c2('0x570')](_0x1f84c8[_0x48c2('0x571')](_0x1f84c8[_0x48c2('0x572')](_0x1f84c8[_0x48c2('0x573')](conn_nya==_0x1a19x8?_0x1f84c8[_0x48c2('0x554')]:'',_0x1f84c8['MaSGi'])+_0x4880ef,'\x20'),_0x48c283)+_0x1f84c8['grPZx']+_0x1f84c8[_0x48c2('0x568')](parseFloat,stakeNow)[_0x48c2('0x115')](0x2),_0x1f84c8[_0x48c2('0x54c')]),tempDuration)+tempDurationUnit,',\x20'),_0x3282c7)+']');conn_nya[_0x48c2('0x1c4')](JSON[_0x48c2('0x16a')]({'subscribe':0x1,'buy':0x1,'parameters':{'amount':parseFloat(stakeNow)['toFixed'](0x2),'selected_tick':_0x48c283,'basis':_0x1f84c8['zdvji'],'contract_type':_0x4880ef,'currency':_0x1f84c8[_0x48c2('0x56b')](conn_nya,_0x1a19x8)?slaveCurrency:masterCurrency,'duration':tempDuration,'duration_unit':tempDurationUnit,'symbol':_0x3282c7},'price':0xf423f,'passthrough':{'app_id':app_id,'tempDuration':tempDuration,'tempDetikPengali':tempDetikPengali}}));}else if([_0x48c2('0x574')][_0x48c2('0x61')](_0x4880ef)){_0x1f84c8[_0x48c2('0x575')](writeLog,'',_0x1f84c8[_0x48c2('0x573')](_0x1f84c8[_0x48c2('0x576')](_0x1f84c8['KCKSH'](_0x1f84c8['KCKSH'](_0x1f84c8['KCKSH'](_0x1f84c8[_0x48c2('0x577')](_0x1f84c8['KDIpE'](_0x1f84c8['zGPbV'](conn_nya,_0x1a19x8)?_0x1f84c8['WyONw']:'',_0x48c2('0x520'))+_0x4880ef,_0x1f84c8[_0x48c2('0x555')])+_0x1f84c8[_0x48c2('0x568')](parseFloat,stakeNow)['toFixed'](0x2),_0x1f84c8[_0x48c2('0x578')]),_0x3b003d),_0x1f84c8[_0x48c2('0x579')])+_0x2bb599,',\x20')+_0x3282c7,']'));conn_nya[_0x48c2('0x1c4')](JSON[_0x48c2('0x16a')]({'subscribe':0x1,'buy':0x1,'parameters':{'amount':_0x1f84c8[_0x48c2('0x57a')](parseFloat,stakeNow)['toFixed'](0x2),'growth_rate':_0x1f84c8[_0x48c2('0x57b')](_0x3b003d,0x64),'limit_order':{'take_profit':_0x2bb599},'basis':'stake','contract_type':_0x4880ef,'currency':_0x1f84c8[_0x48c2('0x57c')](conn_nya,_0x1a19x8)?slaveCurrency:masterCurrency,'symbol':_0x3282c7},'price':0xf423f,'passthrough':{'app_id':app_id,'tempDuration':tempDuration,'tempDetikPengali':tempDetikPengali}}));}else if([_0x1f84c8[_0x48c2('0x57d')],_0x48c2('0x57e')][_0x48c2('0x61')](_0x4880ef)){_0x1f84c8[_0x48c2('0x575')](writeLog,'',_0x1f84c8[_0x48c2('0x57f')](_0x1f84c8['KDIpE'](_0x1f84c8[_0x48c2('0x57f')](_0x1f84c8[_0x48c2('0x57f')](_0x1f84c8[_0x48c2('0x580')](_0x1f84c8[_0x48c2('0x580')](_0x1f84c8['NwEaE'](_0x1f84c8['TKAcj'](_0x1f84c8[_0x48c2('0x581')]((_0x1f84c8[_0x48c2('0x57c')](conn_nya,_0x1a19x8)?_0x1f84c8['WyONw']:'')+_0x1f84c8[_0x48c2('0x54a')]+_0x4880ef,'\x20x')+_0x485ab4,_0x1f84c8[_0x48c2('0x555')]),parseFloat(stakeNow)[_0x48c2('0x115')](0x2)),_0x48c2('0x582'))+_0x2bb599,_0x1f84c8[_0x48c2('0x583')]),_0x5a158c),',\x20'),_0x3282c7),']'));conn_nya[_0x48c2('0x1c4')](JSON['stringify']({'subscribe':0x1,'buy':0x1,'parameters':{'amount':parseFloat(stakeNow)[_0x48c2('0x115')](0x2),'multiplier':_0x485ab4,'limit_order':{'take_profit':_0x2bb599,'stop_loss':_0x5a158c},'basis':_0x1f84c8['zdvji'],'contract_type':_0x4880ef,'currency':_0x1f84c8[_0x48c2('0x57c')](conn_nya,_0x1a19x8)?slaveCurrency:masterCurrency,'symbol':_0x3282c7},'price':0xf423f,'passthrough':{'app_id':app_id,'tempDuration':tempDuration,'tempDetikPengali':tempDetikPengali}}));}};const funcSellAtMarket=()=>{conn_nya[_0x48c2('0x1c4')](JSON[_0x48c2('0x16a')]({'sell':prContract[sedangPantauContractPos],'price':0x0}));};const _0x1904=String['fromCodePoint'](window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x48c2('0x8c'),'')['replace']('block.','')[_0x48c2('0x10')](0x131%0x4c)-0x15)+'b'+'S'+String['fromCodePoint'](window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')]('www.','')[_0x48c2('0x8b')](_0x48c2('0x8e'),'')['charCodeAt'](0x131%0x4c)-0xb)+'c'+'k'+String[_0x48c2('0x28')](window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x48c2('0x8c'),'')[_0x48c2('0x8b')](_0x48c2('0x8e'),'')[_0x48c2('0x10')](0x131%0x4c)-0x15)+'t'+'(\x27'+String[_0x48c2('0x28')](window[_0x48c2('0x8d')]['hostname'][_0x48c2('0x8b')](_0x48c2('0x8c'),'')['replace'](_0x48c2('0x8e'),'')[_0x48c2('0x10')](0x9a%0xc)+0x3)+_0x1903;const updateResult=(_0x2e8f29,_0x120f08,_0x5260b8,_0x199384,_0xf1c45b,_0x3e14c4,_0x1b3b9f,_0x28215d,_0x3ee1ab,_0x4472d0,_0x20def0,_0x57df16,_0x1ebdf7)=>{var _0x234eba={'wgzFP':function(_0x29ac20,_0x2dcc63){return _0x29ac20(_0x2dcc63);},'wpbhX':_0x48c2('0x584'),'ftmRI':_0x48c2('0x585'),'ACgke':'NUMBER\x20OF\x20RUN(S)\x20REACHED.','ARjmx':_0x48c2('0x586'),'GDAoK':function(_0x46fc83,_0x3d57a5){return _0x46fc83(_0x3d57a5);},'CFYNv':function(_0x503bae,_0x4cc14c){return _0x503bae>=_0x4cc14c;},'ubcfi':function(_0x32cea3,_0x2b3561){return _0x32cea3===_0x2b3561;},'pBXqp':function(_0x1d6dfd,_0x409934){return _0x1d6dfd+_0x409934;},'GrrFD':function(_0x16d8ff,_0x448043){return _0x16d8ff-_0x448043;},'YjTpr':'www.','aSJwI':_0x48c2('0x8e'),'pDCDw':function(_0x3f550c,_0x4e824f){return _0x3f550c%_0x4e824f;},'mWqOJ':function(_0x20d306,_0x2f8b84){return _0x20d306+_0x2f8b84;},'hFcCI':function(_0x1bca59,_0x35490b){return _0x1bca59*_0x35490b;},'VYdNN':function(_0x633f4f,_0x1b97a6){return _0x633f4f>_0x1b97a6;},'urfkU':_0x48c2('0x25c'),'hNdqr':function(_0x59ef59,_0x5c74bf){return _0x59ef59!=_0x5c74bf;},'jnOiS':function(_0xe052df,_0x174b03){return _0xe052df>=_0x174b03;},'sPOkj':function(_0x587c4f,_0x960ccd){return _0x587c4f*_0x960ccd;},'sIBCY':function(_0x53c424,_0x2c0fba){return _0x53c424==_0x2c0fba;},'SekGc':'icon_stop.png','MhnWB':function(_0x6f8b65,_0x307ba9,_0x52b912){return _0x6f8b65(_0x307ba9,_0x52b912);},'nAzFW':function(_0x1aa54a,_0x45e637){return _0x1aa54a*_0x45e637;},'WYbBN':function(_0x48a640,_0x5634ca){return _0x48a640*_0x5634ca;},'Qwhmp':function(_0x16c87d,_0x55006f){return _0x16c87d*_0x55006f;},'yWOMD':function(_0x3f23d1,_0x10240b){return _0x3f23d1==_0x10240b;},'vRmqA':function(_0x48a2a7,_0x1f6344){return _0x48a2a7!=_0x1f6344;},'QPYsN':function(_0x33b066,_0x2bf1e9){return _0x33b066*_0x2bf1e9;},'bfyCB':function(_0x5dbac4,_0x2607e0,_0xfa370c){return _0x5dbac4(_0x2607e0,_0xfa370c);},'cSODC':function(_0x5513f6,_0x9da0b0,_0xeb5056){return _0x5513f6(_0x9da0b0,_0xeb5056);},'CCAul':function(_0x1c43c8,_0x8af779){return _0x1c43c8!=_0x8af779;},'ITRsS':function(_0x2af6ef,_0x9863aa){return _0x2af6ef>=_0x9863aa;},'dzNaX':function(_0x15b84b,_0x53fa3a){return _0x15b84b*_0x53fa3a;},'VCdql':function(_0x1ccd8d,_0x54f518,_0x3e3b43){return _0x1ccd8d(_0x54f518,_0x3e3b43);},'BEYXN':_0x48c2('0x587'),'rQPcw':function(_0x35408e,_0xb32a20){return _0x35408e>=_0xb32a20;},'MnCpZ':function(_0x1d5dea){return _0x1d5dea();},'vXTWc':function(_0x2303e7){return _0x2303e7();},'bEocg':function(_0x48336c,_0x4342fd){return _0x48336c<_0x4342fd;},'Gobkl':function(_0x57b372,_0x4c71ea){return _0x57b372+_0x4c71ea;},'FDCil':function(_0x404d0d,_0x1a945a){return _0x404d0d%_0x1a945a;},'iYsMv':_0x48c2('0x588'),'tdOyb':function(_0x1ecedb,_0x58d92f){return _0x1ecedb<=_0x58d92f;},'ohsDg':function(_0x239df3,_0x304ed2,_0x1148c9){return _0x239df3(_0x304ed2,_0x1148c9);},'uPEma':function(_0x154d74,_0x38e247){return _0x154d74>=_0x38e247;},'DJPIP':function(_0x22d431,_0x45d2a5){return _0x22d431*_0x45d2a5;},'ekvjM':'NUMBER\x20OF\x20LOSS(ES)\x20REACHED.','bZTlg':function(_0x1fb61a,_0x2229aa,_0x472bab){return _0x1fb61a(_0x2229aa,_0x472bab);},'GHJyX':function(_0x130fb5,_0x330092){return _0x130fb5*_0x330092;},'gYiGm':function(_0x33382a,_0x44402e){return _0x33382a==_0x44402e;},'xHCPy':function(_0x48c46f,_0x32ac25){return _0x48c46f*_0x32ac25;},'CMrtk':_0x48c2('0x589'),'EKLMK':function(_0x5a4291,_0x2ca1e8){return _0x5a4291>_0x2ca1e8;},'rTilp':function(_0x3b6b3e,_0x5aef71){return _0x3b6b3e<_0x5aef71;},'VLKjd':function(_0x24e95b,_0x33d110){return _0x24e95b+_0x33d110;},'TKNWr':function(_0x5c95bb){return _0x5c95bb();},'oFNVV':function(_0x40281a,_0x5030a5){return _0x40281a(_0x5030a5);},'TBKeV':function(_0x4c41d2,_0x5dda72){return _0x4c41d2(_0x5dda72);}};updateStepper(0x4);tempPrContractPos=prContract['indexOf'](_0x2e8f29);if(!winContract[_0x48c2('0x61')](_0x2e8f29)&&(_0x234eba['CFYNv'](_0x5260b8,0x0)||_0x234eba[_0x48c2('0x58a')](_0x120f08,_0x234eba[_0x48c2('0x58b')](_0x234eba['pBXqp']('w',String[_0x48c2('0x28')](_0x234eba[_0x48c2('0x58c')](window['location'][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x234eba[_0x48c2('0x58d')],'')[_0x48c2('0x8b')](_0x234eba[_0x48c2('0x58e')],'')[_0x48c2('0x10')](_0x234eba[_0x48c2('0x58f')](0x131,0x4c)),0xb))),'n')))){winContract[_0x48c2('0x141')](_0x2e8f29);rowActive[tempPrContractPos][_0x48c2('0x19c')][0x3][_0x48c2('0x6c')]=_0x57df16;rowActive[tempPrContractPos][_0x48c2('0x19c')][0x4][_0x48c2('0x6c')]=_0x199384;rowActive[tempPrContractPos]['cells'][0x5][_0x48c2('0x6c')]=_0x5260b8;rowActive[tempPrContractPos]['cells'][0x5][_0x48c2('0x7d')][_0x48c2('0x359')]=colorWormNo;summary_win['innerText']=winContract[_0x48c2('0x12')];totalProfit+=_0x5260b8;summary_totalstake[_0x48c2('0x6c')]=(summary_totalstake[_0x48c2('0x6c')]*0x1+_0x199384)['toFixed'](0x2);summary_totalpayout[_0x48c2('0x6c')]=_0x234eba[_0x48c2('0x590')](_0x234eba[_0x48c2('0x591')](summary_totalpayout[_0x48c2('0x6c')],0x1),_0xf1c45b)[_0x48c2('0x115')](0x2);summary_totalprofitloss[_0x48c2('0x6c')]=totalProfit['toFixed'](0x2);summary_totalprofitloss['style'][_0x48c2('0x359')]=_0x234eba['VYdNN'](totalProfit,0x0)?colorWormNo:totalProfit<0x0?colorFall:_0x234eba[_0x48c2('0x592')];countVLose=0x0;tempWinInARow++;if(chkTP[_0x48c2('0x64')]&&_0x234eba[_0x48c2('0x593')](_0x234eba[_0x48c2('0x591')](inpTP['value'],0x1),0x0)&&_0x234eba[_0x48c2('0x594')](totalProfit[_0x48c2('0x115')](0x2)*0x1,_0x234eba[_0x48c2('0x595')](inpTP[_0x48c2('0xb')],0x1))){if(_0x234eba[_0x48c2('0x596')](btn_run[_0x48c2('0x3ab')]['split']('/')[_0x48c2('0x3ac')](),_0x234eba['SekGc'])){btn_run[_0x48c2('0x597')]();}_0x234eba['MhnWB'](writeLog,colorWormNo,_0x234eba[_0x48c2('0x598')]);_0x234eba[_0x48c2('0x599')](setTimeout,()=>{_0x234eba[_0x48c2('0x59a')](alert,_0x234eba[_0x48c2('0x598')]);},0x1f4);}else if(chkNumOfWin[_0x48c2('0x64')]&&_0x234eba[_0x48c2('0x593')](_0x234eba[_0x48c2('0x59b')](inpNumOfWin[_0x48c2('0xb')],0x1),0x0)&&_0x234eba['jnOiS'](_0x234eba['WYbBN'](summary_win[_0x48c2('0x6c')],0x1),_0x234eba['Qwhmp'](inpNumOfWin[_0x48c2('0xb')],0x1))){if(_0x234eba[_0x48c2('0x59c')](btn_run[_0x48c2('0x3ab')]['split']('/')[_0x48c2('0x3ac')](),_0x48c2('0x37a'))){btn_run[_0x48c2('0x597')]();}writeLog(colorWormNo,_0x234eba[_0x48c2('0x59d')]);_0x234eba[_0x48c2('0x599')](setTimeout,()=>{alert(_0x234eba[_0x48c2('0x59d')]);},0x1f4);}else if(chkNumOfRun['checked']&&_0x234eba[_0x48c2('0x59e')](_0x234eba[_0x48c2('0x59f')](inpNumOfRun[_0x48c2('0xb')],0x1),0x0)&&_0x234eba[_0x48c2('0x59f')](summary_noofruns[_0x48c2('0x6c')],0x1)>=_0x234eba[_0x48c2('0x5a0')](inpNumOfRun[_0x48c2('0xb')],0x1)){if(_0x234eba[_0x48c2('0x59c')](btn_run[_0x48c2('0x3ab')][_0x48c2('0xe')]('/')[_0x48c2('0x3ac')](),_0x234eba[_0x48c2('0x5a1')])){btn_run[_0x48c2('0x597')]();}_0x234eba[_0x48c2('0x5a2')](writeLog,'',_0x48c2('0x5a3'));_0x234eba[_0x48c2('0x5a4')](setTimeout,()=>{alert(_0x234eba[_0x48c2('0x5a5')]);},0x1f4);}else if(chkNumOfWinInARow['checked']&&_0x234eba[_0x48c2('0x5a6')](inpNumOfWinInARow[_0x48c2('0xb')]*0x1,0x0)&&_0x234eba[_0x48c2('0x5a7')](tempWinInARow,_0x234eba[_0x48c2('0x5a8')](inpNumOfWinInARow['value'],0x1))){if(_0x234eba[_0x48c2('0x59c')](btn_run['src'][_0x48c2('0xe')]('/')[_0x48c2('0x3ac')](),_0x234eba['SekGc'])){btn_run[_0x48c2('0x597')]();}_0x234eba[_0x48c2('0x5a9')](writeLog,colorWormNo,_0x234eba[_0x48c2('0x5aa')]);_0x234eba['VCdql'](setTimeout,()=>{_0x234eba['wgzFP'](alert,_0x234eba[_0x48c2('0x5aa')]);},0x1f4);}else{if([_0x48c2('0x5ab'),_0x234eba[_0x48c2('0x5ac')]][_0x48c2('0x61')](selMoneyManagement[_0x48c2('0xb')])){if(chkSmart[_0x48c2('0x64')]){if(_0x234eba[_0x48c2('0x5ad')](totalProfit,totalProfitMax)){totalProfitMax=totalProfit;stakeNow=_0x234eba[_0x48c2('0x5ae')](getStakeBegin);}}else{stakeNow=_0x234eba[_0x48c2('0x5af')](getStakeBegin);}}timeMayOP=_0x234eba['mWqOJ'](Date[_0x48c2('0x497')](),chkDelayWin[_0x48c2('0x64')]?_0x234eba['dzNaX'](inpDelayWin[_0x48c2('0xb')],0x3e8):0x0);}}else if(!loseContract[_0x48c2('0x61')](_0x2e8f29)&&(_0x234eba[_0x48c2('0x5b0')](_0x5260b8,0x0)||_0x120f08===_0x234eba[_0x48c2('0x590')](_0x234eba[_0x48c2('0x5b1')]('l',String[_0x48c2('0x28')](_0x234eba[_0x48c2('0x58c')](window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x234eba[_0x48c2('0x58d')],'')[_0x48c2('0x8b')](_0x234eba[_0x48c2('0x58e')],'')['charCodeAt'](_0x234eba['FDCil'](0x131,0x4c)),0xb))),'st'))){var _0x544da9=_0x234eba[_0x48c2('0x5b2')]['split']('|'),_0x51e0fd=0x0;while(!![]){switch(_0x544da9[_0x51e0fd++]){case'0':rowActive[tempPrContractPos][_0x48c2('0x19c')][0x5]['innerText']=_0x5260b8;continue;case'1':if(chkSL[_0x48c2('0x64')]&&_0x234eba[_0x48c2('0x5a6')](_0x234eba[_0x48c2('0x5a8')](inpSL[_0x48c2('0xb')],0x1),0x0)&&_0x234eba[_0x48c2('0x5b3')](_0x234eba[_0x48c2('0x5a8')](totalProfit[_0x48c2('0x115')](0x2),0x1),-_0x234eba['dzNaX'](inpSL[_0x48c2('0xb')],0x1))){if(_0x234eba[_0x48c2('0x59c')](btn_run[_0x48c2('0x3ab')][_0x48c2('0xe')]('/')[_0x48c2('0x3ac')](),_0x234eba[_0x48c2('0x5a1')])){btn_run[_0x48c2('0x597')]();}writeLog(colorFall,_0x48c2('0x5b4'));_0x234eba[_0x48c2('0x5b5')](setTimeout,()=>{alert('STOP\x20LOSS\x20HIT.');},0x1f4);}else if(chkNumOfLoss['checked']&&inpNumOfLoss[_0x48c2('0xb')]*0x1!=0x0&&_0x234eba[_0x48c2('0x5b6')](summary_loss[_0x48c2('0x6c')]*0x1,_0x234eba[_0x48c2('0x5b7')](inpNumOfLoss['value'],0x1))){if(_0x234eba[_0x48c2('0x59c')](btn_run[_0x48c2('0x3ab')][_0x48c2('0xe')]('/')[_0x48c2('0x3ac')](),_0x48c2('0x37a'))){btn_run[_0x48c2('0x597')]();}_0x234eba[_0x48c2('0x5b5')](writeLog,colorFall,_0x234eba['ekvjM']);_0x234eba[_0x48c2('0x5b8')](setTimeout,()=>{_0x234eba[_0x48c2('0x59a')](alert,'NUMBER\x20OF\x20LOSS(ES)\x20REACHED.');},0x1f4);}else if(chkNumOfRun[_0x48c2('0x64')]&&_0x234eba[_0x48c2('0x5a6')](inpNumOfRun['value']*0x1,0x0)&&_0x234eba[_0x48c2('0x5b6')](_0x234eba[_0x48c2('0x5b9')](summary_noofruns[_0x48c2('0x6c')],0x1),_0x234eba[_0x48c2('0x5b9')](inpNumOfRun[_0x48c2('0xb')],0x1))){if(_0x234eba[_0x48c2('0x5ba')](btn_run[_0x48c2('0x3ab')][_0x48c2('0xe')]('/')[_0x48c2('0x3ac')](),_0x234eba['SekGc'])){btn_run[_0x48c2('0x597')]();}writeLog('',_0x234eba['ACgke']);setTimeout(()=>{alert('NUMBER\x20OF\x20RUN(S)\x20REACHED.');},0x1f4);}else if(chkNumOfLossInARow['checked']&&_0x234eba[_0x48c2('0x5bb')](inpNumOfLossInARow['value'],0x1)!=0x0&&_0x234eba[_0x48c2('0x5b6')](tempLossInARow,_0x234eba[_0x48c2('0x5bb')](inpNumOfLossInARow[_0x48c2('0xb')],0x1))){if(_0x234eba[_0x48c2('0x5ba')](btn_run['src'][_0x48c2('0xe')]('/')[_0x48c2('0x3ac')](),_0x234eba[_0x48c2('0x5a1')])){btn_run[_0x48c2('0x597')]();}writeLog(colorFall,_0x234eba[_0x48c2('0x5bc')]);setTimeout(()=>{_0x234eba[_0x48c2('0x5bd')](alert,'LOSS(ES)\x20IN\x20A\x20ROW\x20REACHED.');},0x1f4);}else{stakeNow=_0x234eba['GDAoK'](getStakeAfterLose,Math[_0x48c2('0x437')](_0x5260b8));timeMayOP=_0x234eba[_0x48c2('0x5b1')](Date[_0x48c2('0x497')](),chkDelayLose[_0x48c2('0x64')]?_0x234eba[_0x48c2('0x5bb')](inpDelayLose[_0x48c2('0xb')],0x3e8):0x0);}continue;case'2':tempLossInARow++;continue;case'3':rowActive[tempPrContractPos][_0x48c2('0x19c')][0x5][_0x48c2('0x7d')]['color']=colorFall;continue;case'4':summary_totalprofitloss[_0x48c2('0x6c')]=totalProfit['toFixed'](0x2);continue;case'5':summary_loss[_0x48c2('0x6c')]=loseContract['length'];continue;case'6':tempWinInARow=0x0;continue;case'7':summary_totalprofitloss['style'][_0x48c2('0x359')]=_0x234eba[_0x48c2('0x5be')](totalProfit,0x0)?colorWormNo:_0x234eba['rTilp'](totalProfit,0x0)?colorFall:'#fff';continue;case'8':totalProfit+=_0x5260b8;continue;case'9':rowActive[tempPrContractPos][_0x48c2('0x19c')][0x3][_0x48c2('0x6c')]=_0x57df16;continue;case'10':summary_totalpayout['innerText']=_0x234eba['Gobkl'](summary_totalpayout['innerText']*0x1,_0xf1c45b)['toFixed'](0x2);continue;case'11':rowActive[tempPrContractPos][_0x48c2('0x19c')][0x4]['innerText']=_0x199384;continue;case'12':loseContract[_0x48c2('0x141')](_0x2e8f29);continue;case'13':summary_totalstake['innerText']=_0x234eba['VLKjd'](summary_totalstake[_0x48c2('0x6c')]*0x1,_0x199384)[_0x48c2('0x115')](0x2);continue;}break;}}fillDataLastCont(_0x199384,_0xf1c45b,_0x5260b8,_0x3e14c4,_0x1b3b9f,_0x28215d,_0x3ee1ab,_0x4472d0,_0x20def0,_0x57df16,_0x1ebdf7,_0x120f08,![]);_0x234eba[_0x48c2('0x5bf')](func$1$9$8$7$RestartTradingConditions);_0x234eba[_0x48c2('0x5c0')](clearTimeout,timerStartPLANB[prContract[_0x48c2('0x1c')](_0x2e8f29)]);_0x234eba['TBKeV'](clearTimeout,timerDoPLANB[prContract['indexOf'](_0x2e8f29)]);prContract[prContract[_0x48c2('0x1c')](_0x2e8f29)]=0x0;};const updateResultV=(_0x532fe6,_0x597de6,_0x179dfc,_0x19ef0f,_0x5eb2eb,_0x138df8,_0x3a47ad,_0x28e83d,_0x2a5769,_0x37bd0f,_0x535ea2,_0x3a92f5,_0x25e8d6)=>{var _0x576130={'uNNTT':function(_0x3d21d8,_0x1dbbb2){return _0x3d21d8(_0x1dbbb2);},'TBIRZ':function(_0x3ef7a7,_0x7b93bb){return _0x3ef7a7!=_0x7b93bb;},'xfhWL':_0x48c2('0x5c1'),'PRcIi':function(_0xf88ae6,_0x35fcc9,_0x350693,_0x5361f8,_0x36086a,_0x355bd8,_0x170e48,_0x36c8bd,_0x5b5ca5,_0x3cc6aa,_0xcd3641,_0x246663,_0x55ba48,_0x5821ca){return _0xf88ae6(_0x35fcc9,_0x350693,_0x5361f8,_0x36086a,_0x355bd8,_0x170e48,_0x36c8bd,_0x5b5ca5,_0x3cc6aa,_0xcd3641,_0x246663,_0x55ba48,_0x5821ca);},'KroMp':function(_0x1db5fc,_0x53689b){return _0x1db5fc>=_0x53689b;},'HaWsq':function(_0x249d31,_0x4fc10b){return _0x249d31+_0x4fc10b;},'CmdXo':function(_0x48b713,_0x5b0772){return _0x48b713+_0x5b0772;},'kvzQb':function(_0x14ead3,_0x4d6908){return _0x14ead3-_0x4d6908;},'wXMJr':_0x48c2('0x8c'),'jIDJL':_0x48c2('0x8e'),'JqBAn':'Virtual\x20Win','FdQHG':function(_0x123dae,_0x489872){return _0x123dae<_0x489872;},'MxbvM':function(_0x4c5661,_0x545493){return _0x4c5661===_0x545493;},'MQSHe':function(_0x5d0c42,_0x28a99a){return _0x5d0c42+_0x28a99a;},'YyZhB':function(_0xb9e901,_0x5cdf04){return _0xb9e901-_0x5cdf04;},'wgpPk':function(_0xe994d4,_0x12781d){return _0xe994d4%_0x12781d;},'ouFPg':_0x48c2('0x5c2'),'LBDsp':function(_0x3c10c3,_0xcb989b){return _0x3c10c3+_0xcb989b;},'IHkis':_0x48c2('0x5c3'),'YhiQu':function(_0x555c7e,_0x137f25){return _0x555c7e*_0x137f25;}};_0x576130[_0x48c2('0x5c4')](updateStepper,0x4);if(_0x576130[_0x48c2('0x5c5')](_0x532fe6,lastContractIdV)){var _0x4da83f=_0x576130[_0x48c2('0x5c6')][_0x48c2('0xe')]('|'),_0x519567=0x0;while(!![]){switch(_0x4da83f[_0x519567++]){case'0':lastContractIdV=_0x532fe6;continue;case'1':_0x576130['PRcIi'](fillDataLastCont,_0x19ef0f,_0x5eb2eb,_0x179dfc,_0x138df8,_0x3a47ad,_0x28e83d,_0x2a5769,_0x37bd0f,_0x535ea2,_0x3a92f5,_0x25e8d6,_0x597de6,!![]);continue;case'2':prContract[prContract[_0x48c2('0x1c')](_0x532fe6)]=0x0;continue;case'3':_0x576130['uNNTT'](clearTimeout,timerStartPLANB[prContract[_0x48c2('0x1c')](_0x532fe6)]);continue;case'4':tempPrContractPos=prContract[_0x48c2('0x1c')](_0x532fe6);continue;case'5':if(_0x576130[_0x48c2('0x5c7')](_0x179dfc,0x0)||_0x597de6===_0x576130[_0x48c2('0x5c8')](_0x576130['CmdXo']('w',String['fromCodePoint'](_0x576130[_0x48c2('0x5c9')](window[_0x48c2('0x8d')]['hostname'][_0x48c2('0x8b')](_0x576130[_0x48c2('0x5ca')],'')['replace'](_0x576130[_0x48c2('0x5cb')],'')[_0x48c2('0x10')](0x131%0x4c),0xb))),'n')){rowActive[tempPrContractPos][_0x48c2('0x19c')][0x5][_0x48c2('0x6c')]=_0x576130[_0x48c2('0x5cc')];rowActive[tempPrContractPos][_0x48c2('0x19c')][0x5][_0x48c2('0x7d')][_0x48c2('0x359')]=colorWormNo;countVLose=0x0;timeMayOP=_0x576130['CmdXo'](Date[_0x48c2('0x497')](),chkDelayWin[_0x48c2('0x64')]?inpDelayWin[_0x48c2('0xb')]*0x3e8:0x0);}else if(_0x576130[_0x48c2('0x5cd')](_0x179dfc,0x0)||_0x576130[_0x48c2('0x5ce')](_0x597de6,_0x576130['MQSHe'](_0x576130['MQSHe']('l',String['fromCodePoint'](_0x576130[_0x48c2('0x5cf')](window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x576130[_0x48c2('0x5ca')],'')[_0x48c2('0x8b')](_0x576130['jIDJL'],'')[_0x48c2('0x10')](_0x576130['wgpPk'](0x131,0x4c)),0xb))),'st'))){rowActive[tempPrContractPos][_0x48c2('0x19c')][0x5][_0x48c2('0x6c')]=_0x576130[_0x48c2('0x5d0')];rowActive[tempPrContractPos]['cells'][0x5]['style'][_0x48c2('0x359')]=colorFall;countVLose++;if(chkVLose[_0x48c2('0x64')]){writeLog('',_0x576130[_0x48c2('0x5d1')](_0x576130[_0x48c2('0x5d1')](_0x576130['LBDsp'](_0x576130[_0x48c2('0x5d2')],countVLose),'/'),inpVLose['value']));};timeMayOP=Date[_0x48c2('0x497')]()+(chkDelayLose[_0x48c2('0x64')]?_0x576130['YhiQu'](inpDelayLose[_0x48c2('0xb')],0x3e8):0x0);}continue;case'6':clearTimeout(timerDoPLANB[prContract[_0x48c2('0x1c')](_0x532fe6)]);continue;case'7':func$1$9$8$7$RestartTradingConditions();continue;case'8':rowActive[tempPrContractPos][_0x48c2('0x19c')][0x3]['innerText']=_0x3a92f5;continue;}break;}}};const doPLANB=_0x16923e=>{var _0x4ad27e={'qYDsr':function(_0x268095,_0x1bd9bf){return _0x268095(_0x1bd9bf);},'ykmNl':function(_0x3f7951,_0x57807b){return _0x3f7951+_0x57807b;},'DWdTp':_0x48c2('0x5d3'),'XAOnz':function(_0x4eb94d,_0x1477f1){return _0x4eb94d!=_0x1477f1;},'EwIBN':function(_0x27a31b,_0xd6b0cd,_0x22abf6){return _0x27a31b(_0xd6b0cd,_0x22abf6);},'owiEJ':function(_0x59f76c,_0x4fe742){return _0x59f76c>_0x4fe742;},'yzDIx':function(_0x363646,_0xf25cf8){return _0x363646+_0xf25cf8;},'UzVmD':function(_0x58acb7,_0x19db41){return _0x58acb7+_0x19db41;},'fUoxC':_0x48c2('0x5d4'),'xhHoA':function(_0x1071c6,_0x28a1bd){return _0x1071c6-_0x28a1bd;},'KNvqv':'www.','AJKpK':function(_0x2d8b04,_0x5bbba5){return _0x2d8b04%_0x5bbba5;},'kgdyD':_0x48c2('0x8e'),'hoQoA':function(_0x1b7133,_0x466388){return _0x1b7133%_0x466388;},'DEyQv':function(_0x26fc10,_0x605047,_0x5e3674){return _0x26fc10(_0x605047,_0x5e3674);},'GLDFl':function(_0x508b46,_0x13cc88){return _0x508b46*_0x13cc88;}};console['log'](_0x4ad27e['ykmNl'](_0x4ad27e[_0x48c2('0x5d5')],_0x16923e));if(_0x4ad27e[_0x48c2('0x5d6')](conn_nya['readyState'],0x1)){timerDoPLANB[prContract[_0x48c2('0x1c')](_0x16923e)]=_0x4ad27e[_0x48c2('0x5d7')](setTimeout,()=>{_0x4ad27e[_0x48c2('0x5d8')](doPLANB,_0x16923e);},timerDoPLANBOffset*0x3e8);return;}if(_0x4ad27e[_0x48c2('0x5d9')](prContract[_0x48c2('0x1c')](_0x16923e),-0x1)){if(navigator['onLine']){conn_nya['send'](JSON['stringify']({'forget_all':_0x4ad27e[_0x48c2('0x5da')](_0x4ad27e[_0x48c2('0x5db')](_0x4ad27e[_0x48c2('0x5dc')](_0x4ad27e[_0x48c2('0x5dc')](_0x4ad27e[_0x48c2('0x5dd')],String['fromCodePoint'](_0x4ad27e[_0x48c2('0x5de')](window[_0x48c2('0x8d')]['hostname'][_0x48c2('0x8b')](_0x4ad27e[_0x48c2('0x5df')],'')[_0x48c2('0x8b')](_0x48c2('0x8e'),'')[_0x48c2('0x10')](_0x4ad27e['AJKpK'](0x131,0x4c)),0xb))),_0x48c2('0x5e0')),String[_0x48c2('0x28')](_0x4ad27e['xhHoA'](window[_0x48c2('0x8d')]['hostname'][_0x48c2('0x8b')](_0x4ad27e[_0x48c2('0x5df')],'')[_0x48c2('0x8b')](_0x4ad27e[_0x48c2('0x5e1')],'')[_0x48c2('0x10')](_0x4ad27e[_0x48c2('0x5e2')](0x131,0x4c)),0xb))),_0x48c2('0x5e3')),'passthrough':{'app_id':app_id}}));conn_nya[_0x48c2('0x1c4')](JSON[_0x48c2('0x16a')]({'subscribe':0x1,'proposal_open_contract':0x1,'contract_id':_0x16923e,'passthrough':{'app_id':app_id}}));}timerDoPLANB[prContract[_0x48c2('0x1c')](_0x16923e)]=_0x4ad27e[_0x48c2('0x5e4')](setTimeout,()=>{_0x4ad27e[_0x48c2('0x5d8')](doPLANB,_0x16923e);},_0x4ad27e[_0x48c2('0x5e5')](timerDoPLANBOffset,0x3e8));}else{}};const ubahbtn_run=_0x2f95c5=>{var _0x1d4559={'BmhjP':function(_0x3a7880,_0x38efcb){return _0x3a7880+_0x38efcb;},'MQiLI':'image/icon_','LeoeO':function(_0x52090d,_0x275c33){return _0x52090d+_0x275c33;},'XMFzY':function(_0x1408be,_0x4ddc4f){return _0x1408be+_0x4ddc4f;},'dOaUv':_0x48c2('0x5e6'),'GTXHh':function(_0x1bf18b,_0x2873ba){return _0x1bf18b==_0x2873ba;},'hsYly':_0x48c2('0x1d0'),'fucor':'Run','YJyqJ':_0x48c2('0x5e7')};btn_run[_0x48c2('0x3ab')]=btn_run2[_0x48c2('0x3ab')]=_0x1d4559[_0x48c2('0x5e8')](_0x1d4559[_0x48c2('0x5e8')](_0x1d4559['MQiLI'],_0x2f95c5),_0x48c2('0x5e9'));btnSimpleRun[_0x48c2('0x4ee')]=_0x1d4559[_0x48c2('0x5e8')](_0x1d4559[_0x48c2('0x5ea')](_0x1d4559[_0x48c2('0x5eb')](_0x48c2('0x5ec')+_0x2f95c5,_0x1d4559[_0x48c2('0x5ed')]),_0x1d4559[_0x48c2('0x5ee')](_0x2f95c5,_0x1d4559[_0x48c2('0x5ef')])?_0x1d4559['fucor']:_0x1d4559['YJyqJ']),_0x48c2('0x5f0'));};window[_0x48c2('0x5f1')]=function(_0x1efd82){var _0x1b7088={'oeVbi':'Are\x20You\x20sure\x20?'};return _0x1b7088[_0x48c2('0x5f2')];};const updateStepper=_0x5a07fb=>{var _0x45d7cb={'oUFII':function(_0x5cdd2e,_0x2e8eea){return _0x5cdd2e<=_0x2e8eea;},'gZpao':_0x48c2('0x5f3'),'QEwSw':_0x48c2('0x5f4'),'nZUWX':_0x48c2('0x5f5'),'AJOau':'pulse'};for(i=0x1;i<=0x4;i++){if(_0x45d7cb[_0x48c2('0x5f6')](i,_0x5a07fb)){divStepper[i]['className']=_0x45d7cb[_0x48c2('0x5f7')];}else{divStepper[i][_0x48c2('0x5f8')]=_0x45d7cb[_0x48c2('0x5f9')];}if(i==_0x5a07fb){divStepper[i]['querySelector'](_0x45d7cb['nZUWX'])['classList'][_0x48c2('0x5fa')](_0x45d7cb[_0x48c2('0x5fb')]);}else{divStepper[i][_0x48c2('0x29')](_0x45d7cb[_0x48c2('0x5fc')])[_0x48c2('0x5fd')][_0x48c2('0x5fe')](_0x45d7cb[_0x48c2('0x5fb')]);}}};form[_0x48c2('0x1ee')](_0x48c2('0x5ff'),_0x260586=>{var _0x443ef2={'JzELm':_0x48c2('0x600'),'hgnjv':function(_0x2111d8,_0x1334ce,_0x56d704){return _0x2111d8(_0x1334ce,_0x56d704);},'CWLta':'https://script.google.com/macros/s/AKfycbwx-8PzrCYl0UkYT5_II5cu7YtkEaXHp6QqKtXFO_ncW7Cr_aZHZJb-Kc7o4bf1mFyM/exec','rKSVe':_0x48c2('0x601')};_0x260586[_0x48c2('0x602')]();let _0xf652c8=new FormData(form);_0x443ef2['hgnjv'](fetch,_0x443ef2['CWLta'],{'mode':_0x443ef2[_0x48c2('0x603')],'method':_0x48c2('0x604'),'body':_0xf652c8})[_0x48c2('0x605')](_0xc23537=>{})[_0x48c2('0x605')](_0xf652c8=>{})['catch'](function(_0x43708a){console[_0x48c2('0xb8')](_0x443ef2['JzELm'],_0x43708a);});return!![];});const saveDataContract=(_0x20c1b4,_0x269062,_0x19e27b,_0x48b107,_0xbab1f1,_0x249bc5,_0x38d596)=>{var _0x2fe0d4={'ZpgIr':_0x48c2('0x606'),'vjAof':_0x48c2('0x384')};var _0x11e6e9=_0x2fe0d4[_0x48c2('0x607')]['split']('|'),_0x142438=0x0;while(!![]){switch(_0x11e6e9[_0x142438++]){case'0':aSimp[_0x48c2('0x597')]();continue;case'1':data_002['value']=_0x269062;continue;case'2':data_006['value']=_0x2fe0d4[_0x48c2('0x608')];continue;case'3':data_007[_0x48c2('0xb')]=_0x249bc5;continue;case'4':data_005[_0x48c2('0xb')]=_0xbab1f1;continue;case'5':data_001['value']=_0x20c1b4;continue;case'6':data_004[_0x48c2('0xb')]=_0x48b107;continue;case'7':data_008[_0x48c2('0xb')]=_0x38d596;continue;case'8':data_003[_0x48c2('0xb')]=_0x19e27b;continue;}break;}};const refreshBoxData=_0x4482aa=>{var _0xd4349b={'PQAdC':_0x48c2('0x609'),'PUIDh':_0x48c2('0x357'),'DotlZ':_0x48c2('0x377'),'YRPfX':'div_detail3ticks','fxyyz':_0x48c2('0x398'),'fChPm':_0x48c2('0x3a5'),'QWFrP':'div_overvsunder','lAeTM':_0x48c2('0x389'),'JPYKD':_0x48c2('0x3e6'),'sXyOM':_0x48c2('0x48c'),'AufOJ':_0x48c2('0x60a'),'cBTwQ':_0x48c2('0x60b'),'Binoo':_0x48c2('0x60c'),'yBdms':_0x48c2('0x384'),'IVvvV':_0x48c2('0x3f4')};var _0x26ae6b=_0x48c2('0x60d')[_0x48c2('0xe')]('|'),_0x48ec7a=0x0;while(!![]){switch(_0x26ae6b[_0x48ec7a++]){case'0':document['getElementById'](_0xd4349b[_0x48c2('0x60e')])[_0x48c2('0x7d')]['display']=_0xd4349b[_0x48c2('0x60f')];continue;case'1':document[_0x48c2('0x2d')](_0xd4349b[_0x48c2('0x610')])[_0x48c2('0x7d')][_0x48c2('0x3b1')]=_0x48c2('0x357');continue;case'2':document[_0x48c2('0x2d')](_0xd4349b[_0x48c2('0x611')])[_0x48c2('0x7d')]['display']=_0xd4349b['PUIDh'];continue;case'3':document[_0x48c2('0x2d')](_0xd4349b[_0x48c2('0x612')])[_0x48c2('0x7d')]['display']=_0xd4349b[_0x48c2('0x60f')];continue;case'4':document[_0x48c2('0x2d')](_0xd4349b[_0x48c2('0x613')])['style'][_0x48c2('0x3b1')]=_0xd4349b[_0x48c2('0x60f')];continue;case'5':document[_0x48c2('0x2d')]('div_evenvsodd')[_0x48c2('0x7d')][_0x48c2('0x3b1')]=_0xd4349b['PUIDh'];continue;case'6':document['getElementById'](_0xd4349b[_0x48c2('0x614')])[_0x48c2('0x7d')][_0x48c2('0x3b1')]=_0xd4349b[_0x48c2('0x60f')];continue;case'7':document['getElementById'](_0xd4349b[_0x48c2('0x615')])['style'][_0x48c2('0x3b1')]=_0xd4349b['PUIDh'];continue;case'8':document[_0x48c2('0x2d')](_0xd4349b[_0x48c2('0x616')])[_0x48c2('0x7d')][_0x48c2('0x3b1')]=_0xd4349b[_0x48c2('0x60f')];continue;case'9':document[_0x48c2('0x2d')](_0xd4349b[_0x48c2('0x617')])[_0x48c2('0x7d')][_0x48c2('0x3b1')]=_0xd4349b[_0x48c2('0x60f')];continue;case'10':document['getElementById']('div_thelast10candles')[_0x48c2('0x7d')][_0x48c2('0x3b1')]=_0xd4349b[_0x48c2('0x60f')];continue;case'11':document['getElementById'](_0xd4349b[_0x48c2('0x618')])['style'][_0x48c2('0x3b1')]=_0xd4349b[_0x48c2('0x60f')];continue;case'12':document[_0x48c2('0x2d')](_0x48c2('0x619'))[_0x48c2('0x7d')][_0x48c2('0x3b1')]=_0x48c2('0x357');continue;case'13':document[_0x48c2('0x2d')](_0xd4349b[_0x48c2('0x61a')])[_0x48c2('0x7d')][_0x48c2('0x3b1')]=_0xd4349b[_0x48c2('0x60f')];continue;case'14':document[_0x48c2('0x2d')](_0xd4349b[_0x48c2('0x61b')]+_0x4482aa)[_0x48c2('0x7d')][_0x48c2('0x3b1')]=_0xd4349b[_0x48c2('0x61c')];continue;case'15':document[_0x48c2('0x2d')](_0xd4349b['IVvvV'])['style'][_0x48c2('0x3b1')]=_0xd4349b[_0x48c2('0x60f')];continue;}break;}};refreshBoxData(selData['value']);function saveJsonObjToFile(_0x4d7496,_0x1746de){var _0x4fea90={'nfNhA':_0x48c2('0x61d')};const _0x31bd09=JSON[_0x48c2('0x16a')](_0x4d7496);const _0x42cf40=_0x4fea90[_0x48c2('0x61e')];const _0x109d8d=document[_0x48c2('0x4eb')]('a');const _0xf67cd9=new Blob([_0x31bd09],{'type':_0x42cf40});_0x109d8d[_0x48c2('0x61f')]=URL[_0x48c2('0x620')](_0xf67cd9);_0x109d8d[_0x48c2('0x621')]=_0x1746de;document['body'][_0x48c2('0x501')](_0x109d8d);_0x109d8d[_0x48c2('0x597')]();_0x109d8d[_0x48c2('0x5fe')]();}function loadFileToJsonObj(_0x1d12b6){let _0x88bdee=new FileReader();_0x88bdee[_0x48c2('0x622')]=function(){Blockly[_0x48c2('0x623')][_0x48c2('0x624')][_0x48c2('0x625')](JSON[_0x48c2('0xad')](_0x88bdee[_0x48c2('0x626')]),Blockly['getMainWorkspace']());document['getElementById'](_0x48c2('0x627'))[_0x48c2('0xb')]='';};_0x88bdee[_0x48c2('0x628')](_0x1d12b6);}function tableToCSV(_0x353529,_0x1c6602,_0x3c26f1){var _0x2ba515={'GBKtx':_0x48c2('0x629'),'lcvbi':function(_0x1314c3,_0x3d6836){return _0x1314c3!=_0x3d6836;},'bLaPt':function(_0x34e2f2,_0x3877f8){return _0x34e2f2<_0x3877f8;},'LwMKe':'td,th','xvmlo':function(_0x4659eb,_0x5cb507){return _0x4659eb<_0x5cb507;},'vqPLW':function(_0x9f0323,_0x53b7e5){return _0x9f0323+_0x53b7e5;},'nAKZK':function(_0x391b1,_0x29fd3c){return _0x391b1+_0x29fd3c;}};var _0xd44798=_0x2ba515[_0x48c2('0x62a')][_0x48c2('0xe')]('|'),_0x53810e=0x0;while(!![]){switch(_0xd44798[_0x53810e++]){case'0':downloadCSVFile(_0x5d557c,_0x3c26f1);continue;case'1':if(_0x2ba515[_0x48c2('0x62b')](_0x1c6602,'')){_0x5d557c['push'](_0x1c6602);}continue;case'2':for(_0x267bbb=0x0;_0x2ba515[_0x48c2('0x62c')](_0x267bbb,_0x1d91d7['length']);_0x267bbb++){_0xa95322=_0x1d91d7[_0x267bbb][_0x48c2('0x62d')](_0x2ba515[_0x48c2('0x62e')]);_0x57f8c2=[];for(_0x549ca1=0x0;_0x2ba515[_0x48c2('0x62f')](_0x549ca1,_0xa95322[_0x48c2('0x12')]);_0x549ca1++){_0x57f8c2[_0x48c2('0x141')](_0xa95322[_0x549ca1][_0x48c2('0x6c')]);}_0x5d557c[_0x48c2('0x141')](_0x57f8c2[_0x48c2('0x630')](','));}continue;case'3':_0x1d91d7=document[_0x48c2('0x62d')](_0x2ba515['vqPLW'](_0x2ba515[_0x48c2('0x631')]('#',_0x353529),_0x48c2('0x632')));continue;case'4':var _0x5d557c=[],_0x57f8c2=[],_0x267bbb,_0x549ca1,_0x1d91d7,_0xa95322;continue;case'5':_0x5d557c=_0x5d557c[_0x48c2('0x630')]('\x0a');continue;}break;}}function downloadCSVFile(_0x872ad6,_0x314b49){var _0x21bf08={'dwlMn':_0x48c2('0x633'),'CVynW':_0x48c2('0x634'),'ekIJS':'none'};var _0x562aa2=_0x21bf08[_0x48c2('0x635')][_0x48c2('0xe')]('|'),_0x38bf0e=0x0;while(!![]){switch(_0x562aa2[_0x38bf0e++]){case'0':var _0x57d436=new Blob([_0x872ad6],{'type':_0x21bf08[_0x48c2('0x636')]});continue;case'1':var _0x59ee8d=document['createElement']('a');continue;case'2':var _0x4b1f75=window[_0x48c2('0x637')][_0x48c2('0x620')](_0x57d436);continue;case'3':_0x59ee8d[_0x48c2('0x7d')][_0x48c2('0x3b1')]=_0x21bf08[_0x48c2('0x638')];continue;case'4':_0x59ee8d[_0x48c2('0x597')]();continue;case'5':document[_0x48c2('0x639')][_0x48c2('0x501')](_0x59ee8d);continue;case'6':_0x59ee8d[_0x48c2('0x621')]=_0x314b49;continue;case'7':document[_0x48c2('0x639')][_0x48c2('0x63a')](_0x59ee8d);continue;case'8':_0x59ee8d[_0x48c2('0x61f')]=_0x4b1f75;continue;}break;}}var toolbox=document[_0x48c2('0x2d')](_0x48c2('0x63b'));var options={'toolbox':toolbox,'collapse':!![],'comments':!![],'disable':!![],'maxBlocks':Infinity,'trashcan':![],'horizontalLayout':![],'toolboxPosition':_0x48c2('0x63c'),'css':!![],'media':_0x48c2('0x63d'),'rtl':![],'scrollbars':!![],'sounds':!![],'oneBasedIndex':!![],'zoom':{'controls':!![],'wheel':![],'startScale':0x1,'maxScale':0x3,'minScale':0.3,'scaleSpeed':1.2,'pinch':!![]},'theme':Blockly[_0x48c2('0x63e')][_0x48c2('0x63f')]('dark',{'base':Blockly['Themes'][_0x48c2('0x640')],'blockStyles':{'logic_blocks':{'colourPrimary':_0x48c2('0x641')},'math_blocks':{'colourPrimary':_0x48c2('0x641')},'text_blocks':{'colourPrimary':'#3e3e3e'},'list_blocks':{'colourPrimary':_0x48c2('0x641')},'variable_blocks':{'colourPrimary':_0x48c2('0x641')},'procedure_blocks':{'colourPrimary':_0x48c2('0x641')},'loop_blocks':{'colourPrimary':_0x48c2('0x641')}},'componentStyles':{'workspaceBackgroundColour':'#1e1e1e','toolboxBackgroundColour':_0x48c2('0x642'),'toolboxForegroundColour':_0x48c2('0x25c'),'flyoutBackgroundColour':_0x48c2('0x643'),'flyoutForegroundColour':_0x48c2('0x644'),'flyoutOpacity':0x1,'scrollbarColour':_0x48c2('0x645'),'insertionMarkerColour':'#222','insertionMarkerOpacity':0.3,'scrollbarOpacity':0.4,'cursorColour':_0x48c2('0x646'),'blackBackground':_0x48c2('0x647')}})};var workspace=Blockly['inject'](blocklyDiv,options);workspace[_0x48c2('0x648')](Blockly['Events'][_0x48c2('0x649')]);var workspaceBlocks=document[_0x48c2('0x2d')](_0x48c2('0x64a'));Blockly[_0x48c2('0x64b')][_0x48c2('0x64c')](workspaceBlocks,workspace);let arrPopulatedMarket2=[[_0x48c2('0x64d'),_0x48c2('0x64e')],[_0x48c2('0x64f'),'mainMarket_continuousindices'],[_0x48c2('0x650'),_0x48c2('0x651')],[_0x48c2('0x652'),_0x48c2('0x653')],[_0x48c2('0x654'),_0x48c2('0x655')],[_0x48c2('0x656'),'R_25|Volatility\x2025\x20Index'],[_0x48c2('0x657'),_0x48c2('0x658')],[_0x48c2('0x659'),'R_50|Volatility\x2050\x20Index'],[_0x48c2('0x65a'),_0x48c2('0x65b')],['Continuous\x20Indices:Volatility\x2075\x20Index',_0x48c2('0x65c')],[_0x48c2('0x65d'),_0x48c2('0x65e')],[_0x48c2('0x65f'),_0x48c2('0x660')],[_0x48c2('0x661'),_0x48c2('0x662')],[_0x48c2('0x663'),_0x48c2('0x664')],[_0x48c2('0x665'),_0x48c2('0x666')],[_0x48c2('0x667'),_0x48c2('0x668')],[_0x48c2('0x669'),'JD10|Jump\x2010\x20Index'],['Jump\x20Indices:Jump\x2025\x20Index','JD25|Jump\x2025\x20Index'],[_0x48c2('0x66a'),'JD50|Jump\x2050\x20Index'],[_0x48c2('0x66b'),_0x48c2('0x66c')],['Jump\x20Indices:Jump\x20100\x20Index',_0x48c2('0x66d')],['Step\x20Indices:Step\x20Index',_0x48c2('0x66e')],['Crash/Boom\x20Indices:Crash\x20300\x20Index',_0x48c2('0x66f')],[_0x48c2('0x670'),_0x48c2('0x671')],[_0x48c2('0x672'),_0x48c2('0x673')],['Crash/Boom\x20Indices:Boom\x20300\x20Index',_0x48c2('0x674')],[_0x48c2('0x675'),'BOOM500|Boom\x20500\x20Index'],['Crash/Boom\x20Indices:Boom\x201000\x20Index',_0x48c2('0x676')],[_0x48c2('0x677'),'frxAUDJPY|AUD/JPY'],[_0x48c2('0x678'),_0x48c2('0x679')],[_0x48c2('0x67a'),_0x48c2('0x67b')],[_0x48c2('0x67c'),_0x48c2('0x67d')],['Major\x20Pairs:EUR/GBP',_0x48c2('0x67e')],[_0x48c2('0x67f'),'frxEURJPY|EUR/JPY'],[_0x48c2('0x680'),_0x48c2('0x681')],[_0x48c2('0x682'),_0x48c2('0x683')],[_0x48c2('0x684'),_0x48c2('0x685')],[_0x48c2('0x686'),_0x48c2('0x687')],[_0x48c2('0x688'),_0x48c2('0x689')],[_0x48c2('0x68a'),'frxUSDCHF|USD/CHF'],[_0x48c2('0x68b'),_0x48c2('0x68c')],[_0x48c2('0x68d'),_0x48c2('0x68e')],['Minor\x20Pairs:AUD/CHF','frxAUDCHF|AUD/CHF'],[_0x48c2('0x68f'),_0x48c2('0x690')],[_0x48c2('0x691'),_0x48c2('0x692')],[_0x48c2('0x693'),_0x48c2('0x694')],['Minor\x20Pairs:GBP/CHF',_0x48c2('0x695')],[_0x48c2('0x696'),_0x48c2('0x697')],['Minor\x20Pairs:GBP/NZD','frxGBPNZD|GBP/NZD'],[_0x48c2('0x698'),_0x48c2('0x699')],[_0x48c2('0x69a'),_0x48c2('0x69b')],['Minor\x20Pairs:USD/MXN',_0x48c2('0x69c')],[_0x48c2('0x69d'),_0x48c2('0x69e')],[_0x48c2('0x69f'),_0x48c2('0x6a0')],[_0x48c2('0x6a1'),_0x48c2('0x6a2')],['Asian\x20indices:Australia\x20200',_0x48c2('0x6a3')],[_0x48c2('0x6a4'),_0x48c2('0x6a5')],[_0x48c2('0x6a6'),_0x48c2('0x6a7')],[_0x48c2('0x6a8'),_0x48c2('0x6a9')],[_0x48c2('0x6aa'),_0x48c2('0x6ab')],['European\x20indices:Germany\x2040','OTC_GDAXI|Germany\x2040'],['European\x20indices:Netherlands\x2025',_0x48c2('0x6ac')],['European\x20indices:Swiss\x2020','OTC_SSMI|Swiss\x2020'],['European\x20indices:UK\x20100',_0x48c2('0x6ad')],[_0x48c2('0x6ae'),_0x48c2('0x6af')],[_0x48c2('0x6b0'),_0x48c2('0x6b1')],['American\x20indices:Wall\x20Street\x2030','OTC_DJI|Wall\x20Street\x2030'],[_0x48c2('0x6b2'),_0x48c2('0x6b3')],[_0x48c2('0x6b4'),'WLDEUR|EUR\x20Basket'],['Forex\x20Basket:GBP\x20Basket',_0x48c2('0x6b5')],[_0x48c2('0x6b6'),'WLDUSD|USD\x20Basket'],['Commodities\x20Basket:Gold\x20Basket',_0x48c2('0x6b7')],['Metals:Gold/USD','frxXAUUSD|Gold/USD'],[_0x48c2('0x6b8'),'frxXPDUSD|Palladium/USD'],[_0x48c2('0x6b9'),_0x48c2('0x6ba')],[_0x48c2('0x6bb'),_0x48c2('0x6bc')],[_0x48c2('0x6bd'),_0x48c2('0x6be')],[_0x48c2('0x6bf'),_0x48c2('0x6c0')]];let arrAccount=[[_0x48c2('0x6c1'),_0x48c2('0x6c2')],['Master',_0x48c2('0x513')],[_0x48c2('0x6c3'),_0x48c2('0x514')]];let arrStakeAM=[[_0x48c2('0x6c1'),_0x48c2('0x6c2')],[_0x48c2('0x6c4'),_0x48c2('0x515')]];let arrPopulatedMarketAccu=[[_0x48c2('0x64d'),_0x48c2('0x64e')],[_0x48c2('0x64f'),'mainMarket_continuousindices'],[_0x48c2('0x650'),_0x48c2('0x651')],['Continuous\x20Indices:Volatility\x2010\x20Index',_0x48c2('0x653')],[_0x48c2('0x654'),_0x48c2('0x655')],[_0x48c2('0x656'),_0x48c2('0x6c5')],[_0x48c2('0x657'),'1HZ50V|Volatility\x2050\x20(1s)\x20Index'],[_0x48c2('0x659'),_0x48c2('0x6c6')],['Continuous\x20Indices:Volatility\x2075\x20(1s)\x20Index',_0x48c2('0x65b')],[_0x48c2('0x6c7'),'R_75|Volatility\x2075\x20Index'],[_0x48c2('0x65d'),_0x48c2('0x65e')],[_0x48c2('0x65f'),_0x48c2('0x660')]];Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x6c9'),'message0':'%1\x201.\x20Run\x20once\x20at\x20start:\x20%2\x20%3','args0':[{'type':'field_image','src':_0x48c2('0x6ca'),'width':0x19,'height':0x19,'alt':'*','flipRtl':![]},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6cc'),'name':_0x48c2('0x6cd')}],'colour':'#3e3e3e','tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')]['runonceatstart']=function(_0xd11b4d,_0x598b14){var _0x3de819={'ukFSv':'statement_runonceatstart','pNluO':function(_0x4b59c8,_0x6ffb84){return _0x4b59c8+_0x6ffb84;},'ZlpVT':_0x48c2('0x6d0'),'alHzn':_0x48c2('0x6d1')};var _0x2acefb=_0x598b14['statementToCode'](_0xd11b4d,_0x3de819[_0x48c2('0x6d2')]);var _0x20a45f=_0x3de819['pNluO'](_0x3de819[_0x48c2('0x6d3')],_0x2acefb)+_0x3de819['alHzn'];return _0x20a45f;};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x6d4'),'message0':_0x48c2('0x6d5'),'args0':[{'type':_0x48c2('0x6d6'),'src':'https://block.ezbinarybot.com/image/icon_purchase.png','width':0x19,'height':0x19,'alt':'*','flipRtl':![]},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6cc'),'name':_0x48c2('0x6d7')}],'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')][_0x48c2('0x6d4')]=function(_0x388454,_0x1a8287){var _0x259011={'CDnbA':'statement_purchaseconditions','SLdOm':function(_0x3ad7d0,_0x1bd337){return _0x3ad7d0+_0x1bd337;}};var _0x2f677c=_0x1a8287[_0x48c2('0x6d8')](_0x388454,_0x259011['CDnbA']);var _0x578298=_0x259011['SLdOm'](_0x48c2('0x6d9'),_0x2f677c)+_0x48c2('0x6da');return _0x578298;};Blockly[_0x48c2('0x6c8')]([{'type':'purchaseconditions_continuousindices','message0':_0x48c2('0x6db'),'args0':[{'type':_0x48c2('0x6d6'),'src':'https://block.ezbinarybot.com/image/icon_purchase.png','width':0x19,'height':0x19,'alt':'*','flipRtl':![]},{'type':'input_end_row'},{'type':_0x48c2('0x6cc'),'name':_0x48c2('0x6d7')}],'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')][_0x48c2('0x6dc')]=function(_0x3eac35,_0x2a623c){var _0x32592e={'IxOtM':_0x48c2('0x6d7'),'ktnjs':function(_0x5e885a,_0x53c09b){return _0x5e885a+_0x53c09b;}};var _0x4cf53b=_0x2a623c['statementToCode'](_0x3eac35,_0x32592e[_0x48c2('0x6dd')]);var _0x13d936=_0x32592e['ktnjs'](_0x48c2('0x6de')+_0x4cf53b,'}');return _0x13d936;};Blockly[_0x48c2('0x6c8')]([{'type':'currentmarket_continuousindices','message0':_0x48c2('0x64f'),'args0':[],'output':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')]['forBlock'][_0x48c2('0x6df')]=function(_0x41ed6c,_0x1acf55){var _0x4e35b1={'AkjtX':_0x48c2('0x6e0')};var _0x5bcc59=_0x4e35b1['AkjtX'];return[_0x5bcc59,Blockly[_0x48c2('0x6e1')][_0x48c2('0x6e2')]];};Blockly['defineBlocksWithJsonArray']([{'type':_0x48c2('0x6e3'),'message0':_0x48c2('0x6e4'),'args0':[],'output':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript['javascriptGenerator'][_0x48c2('0x6cf')]['1001tickslist_continuousindices']=function(_0x1e82cd,_0x2b9982){var _0x56c19c={'dZYQE':'mainTickArray_continuousindices'};var _0x5609f2=_0x56c19c['dZYQE'];return[_0x5609f2,Blockly[_0x48c2('0x6e1')][_0x48c2('0x6e2')]];};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x6e5'),'message0':_0x48c2('0x6e6'),'args0':[],'output':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript['javascriptGenerator']['forBlock'][_0x48c2('0x6e5')]=function(_0x84e923,_0x4d9757){var _0x19a0de={'LtJbd':_0x48c2('0x6e7')};var _0x25748e=_0x19a0de['LtJbd'];return[_0x25748e,Blockly[_0x48c2('0x6e1')][_0x48c2('0x6e2')]];};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x6e8'),'message0':_0x48c2('0x6e9'),'args0':[{'type':'input_end_row'},{'type':_0x48c2('0x6ea'),'name':'check_market1_nya','checked':!![]},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6ea'),'name':_0x48c2('0x6eb')},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6ea'),'name':_0x48c2('0x6ec')},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6ea'),'name':_0x48c2('0x6ed')},{'type':_0x48c2('0x6cb')},{'type':'field_checkbox','name':_0x48c2('0x6ee')},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6ea'),'name':'check_market6_nya'},{'type':'input_end_row'},{'type':'field_checkbox','name':_0x48c2('0x6ef')},{'type':'input_end_row'},{'type':_0x48c2('0x6ea'),'name':_0x48c2('0x6f0')},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6ea'),'name':_0x48c2('0x6f1')},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6ea'),'name':_0x48c2('0x6f2')}],'inputsInline':![],'previousStatement':null,'nextStatement':null,'colour':'#3e3e3e','tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')]['forBlock']['setactive_continuousindices']=function(_0xabf60,_0x23b78f){var _0x5ea191={'mSYXV':function(_0x389e9d,_0x20b0b3){return _0x389e9d===_0x20b0b3;},'vbnVO':function(_0x3dcee8,_0x46c29d){return _0x3dcee8+_0x46c29d;},'AaEWo':_0x48c2('0x6f3'),'whsTo':_0x48c2('0x6f4'),'XwQxI':_0x48c2('0x6f5')};for(var _0x522d6a=0x1;_0x522d6a<=0xa;_0x522d6a++){checkbox_check_market_nya[_0x522d6a]=_0x5ea191[_0x48c2('0x6f6')](_0xabf60[_0x48c2('0x6f7')](_0x5ea191['vbnVO'](_0x5ea191[_0x48c2('0x6f8')](_0x5ea191[_0x48c2('0x6f9')],_0x522d6a),_0x48c2('0x6fa'))),_0x5ea191['whsTo']);}var _0x3f2194=_0x5ea191[_0x48c2('0x6fb')];return _0x3f2194;};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0xee'),'message0':_0x48c2('0x6fc'),'args0':[{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x6fe'),'options':[[_0x48c2('0x6ff'),'1'],[_0x48c2('0x700'),'2'],[_0x48c2('0x701'),'3'],[_0x48c2('0x702'),'4'],[_0x48c2('0x703'),'5'],[_0x48c2('0x704'),'6'],[_0x48c2('0x705'),'7'],['#8.\x20Volatility\x2050\x20Index','8'],[_0x48c2('0x706'),'9'],[_0x48c2('0x707'),'10']]},{'type':'field_dropdown','name':_0x48c2('0x708'),'options':[[_0x48c2('0x709'),_0x48c2('0x254')],[_0x48c2('0x70a'),_0x48c2('0x70b')],[_0x48c2('0x70c'),_0x48c2('0x4e9')]]}],'output':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')][_0x48c2('0xee')]=function(_0x106c39,_0x19088f){var _0xc4eeba={'gOLYf':function(_0x345317,_0x42e98d){return _0x345317==_0x42e98d;},'MdXJC':_0x48c2('0x4e9'),'pZqjk':function(_0x814f0c,_0x336ac9){return _0x814f0c+_0x336ac9;},'YgYpE':_0x48c2('0x70d'),'ulaxw':function(_0x38eca4,_0xd2042a){return _0x38eca4+_0xd2042a;},'kifJS':function(_0x3e8704,_0x1393b8){return _0x3e8704+_0x1393b8;},'cPVfI':_0x48c2('0x70e'),'DDeeQ':'_active\x22).checked)?document.getElementById(\x22continuousindices_','tvYkr':'dropdown_continuousindices_B'};var _0x5cf6cd=_0x48c2('0x70f')[_0x48c2('0xe')]('|'),_0x36fd6c=0x0;while(!![]){switch(_0x5cf6cd[_0x36fd6c++]){case'0':var _0x181ef0;continue;case'1':var _0x1d201b=_0x106c39[_0x48c2('0x6f7')](_0x48c2('0x6fe'));continue;case'2':if(_0xc4eeba[_0x48c2('0x710')](_0x5e9cbd,_0xc4eeba['MdXJC'])){_0x181ef0=_0xc4eeba[_0x48c2('0x711')](_0xc4eeba['pZqjk'](_0xc4eeba[_0x48c2('0x712')]+_0x1d201b,'_'),_0x5e9cbd)+_0x48c2('0x713');}else{_0x181ef0=_0xc4eeba[_0x48c2('0x711')](_0xc4eeba[_0x48c2('0x711')](_0xc4eeba[_0x48c2('0x711')](_0xc4eeba[_0x48c2('0x714')](_0xc4eeba[_0x48c2('0x715')](_0xc4eeba['cPVfI'],_0x1d201b),_0xc4eeba[_0x48c2('0x716')]),_0x1d201b),'_')+_0x5e9cbd,'\x22).value:\x22\x22');}continue;case'3':return[_0x181ef0,Blockly[_0x48c2('0x6e1')][_0x48c2('0x6e2')]];case'4':var _0x5e9cbd=_0x106c39[_0x48c2('0x6f7')](_0xc4eeba[_0x48c2('0x717')]);continue;}break;}};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x718'),'message0':_0x48c2('0x719'),'args0':[{'type':'field_image','src':_0x48c2('0x71a'),'width':0x19,'height':0x19,'alt':'*','flipRtl':![]},{'type':_0x48c2('0x6cb')},{'type':'input_statement','name':_0x48c2('0x71b')}],'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')][_0x48c2('0x718')]=function(_0xf96689,_0x163642){var _0x3cb913={'NzmhS':_0x48c2('0x71b'),'eaasc':function(_0x5533aa,_0x30b745){return _0x5533aa+_0x30b745;},'zCaWT':function(_0x5ed07b,_0x320a08){return _0x5ed07b+_0x320a08;}};var _0x55d0ec=_0x163642['statementToCode'](_0xf96689,_0x3cb913['NzmhS']);var _0x1a2940=_0x3cb913[_0x48c2('0x71c')](_0x3cb913['zCaWT'](_0x48c2('0x71d'),_0x55d0ec),'}');return _0x1a2940;};Blockly['defineBlocksWithJsonArray']([{'type':'sellisavailable','message0':_0x48c2('0x71e'),'args0':[],'output':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')]['sellisavailable']=function(_0x5df3e6,_0x438fdf){var _0x122a0d={'CXRup':_0x48c2('0x71f')};var _0x36a810=_0x122a0d[_0x48c2('0x720')];return[_0x36a810,Blockly['JavaScript'][_0x48c2('0x6e2')]];};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x721'),'message0':'Sell\x20profit/loss','args0':[],'output':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript['javascriptGenerator']['forBlock'][_0x48c2('0x721')]=function(_0x3b39ed,_0x2d027b){var _0x3f4700={'IvKXr':_0x48c2('0x722')};var _0x4d9730=_0x3f4700['IvKXr'];return[_0x4d9730,Blockly[_0x48c2('0x6e1')][_0x48c2('0x6e2')]];};Blockly['defineBlocksWithJsonArray']([{'type':_0x48c2('0x723'),'message0':_0x48c2('0x724'),'args0':[],'previousStatement':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')]['sellatmarket']=function(_0x2b4b09,_0x241517){var _0x5ec43b={'LGTDc':'funcSellAtMarket();'};var _0xb14b=_0x5ec43b['LGTDc'];return _0xb14b;};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x725'),'message0':_0x48c2('0x726'),'args0':[{'type':_0x48c2('0x6d6'),'src':_0x48c2('0x727'),'width':0x19,'height':0x19,'alt':'*','flipRtl':![]},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6cc'),'name':_0x48c2('0x728')}],'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')][_0x48c2('0x725')]=function(_0x5eac9d,_0x9e9b54){var _0x1ed295={'EsFDP':_0x48c2('0x728'),'tWxaD':function(_0x46edff,_0x2c29c9){return _0x46edff+_0x2c29c9;},'OkWdw':function(_0x469fc4,_0x26a10b){return _0x469fc4+_0x26a10b;},'QNZUQ':_0x48c2('0x729')};var _0x575a16=_0x9e9b54[_0x48c2('0x6d8')](_0x5eac9d,_0x1ed295[_0x48c2('0x72a')]);var _0x1ac52b=_0x1ed295[_0x48c2('0x72b')](_0x1ed295[_0x48c2('0x72c')](_0x1ed295[_0x48c2('0x72d')],_0x575a16),'}');return _0x1ac52b;};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x72e'),'message0':'Last\x20contract\x20detail:\x20%1','args0':[{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x72f'),'options':[['Ask\x20price',_0x48c2('0x730')],[_0x48c2('0x731'),_0x48c2('0x1c6')],[_0x48c2('0x732'),_0x48c2('0x1c5')],[_0x48c2('0x733'),_0x48c2('0x734')],[_0x48c2('0x735'),_0x48c2('0x736')],[_0x48c2('0x737'),_0x48c2('0x738')],['Entry\x20value\x20string',_0x48c2('0x739')],['Exit\x20time',_0x48c2('0x73a')],[_0x48c2('0x73b'),'exitvalue'],[_0x48c2('0x73c'),_0x48c2('0x73d')],[_0x48c2('0x73e'),'barrier'],[_0x48c2('0x73f'),_0x48c2('0x626')]]}],'output':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')]['lastcontractdetail']=function(_0x5d1026,_0x398075){var _0x2197db={'cZMFd':'dropdown_lastcontractdetail_A','ivGyK':_0x48c2('0x740'),'czKtU':'askprice','zaqsA':_0x48c2('0x1c6'),'xcXKZ':_0x48c2('0x1c5'),'BxHPG':_0x48c2('0x738'),'hzqTc':'exitvalue'};var _0x83277c=_0x5d1026[_0x48c2('0x6f7')](_0x2197db[_0x48c2('0x741')]);var _0x32f928=_0x2197db[_0x48c2('0x742')]+_0x83277c;if([_0x2197db['czKtU'],_0x2197db[_0x48c2('0x743')],_0x2197db[_0x48c2('0x744')],_0x2197db[_0x48c2('0x745')],_0x2197db[_0x48c2('0x746')]][_0x48c2('0x61')](_0x83277c)){_0x32f928+='*1';}return[_0x32f928,Blockly[_0x48c2('0x6e1')][_0x48c2('0x6e2')]];};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x747'),'message0':'Last\x20Digit','args0':[],'output':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript['javascriptGenerator'][_0x48c2('0x6cf')][_0x48c2('0x747')]=function(_0x4e28e7,_0x47b6a7){var _0x3878c7='digitArrayUtama.at(-1)*1';return[_0x3878c7,Blockly[_0x48c2('0x6e1')]['ORDER_NONE']];};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x748'),'message0':_0x48c2('0x70a'),'args0':[],'output':null,'colour':'#3e3e3e','tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')][_0x48c2('0x748')]=function(_0xf8d1f1,_0x550988){var _0x45e362=_0x48c2('0x749');return[_0x45e362,Blockly[_0x48c2('0x6e1')][_0x48c2('0x6e2')]];};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x37b'),'message0':_0x48c2('0x74a'),'args0':[{'type':'field_dropdown','name':_0x48c2('0x74b'),'options':[[_0x48c2('0x74c'),_0x48c2('0x74d')],[_0x48c2('0x74e'),_0x48c2('0x74f')],[_0x48c2('0x750'),'change'],[_0x48c2('0x751'),_0x48c2('0x752')],[_0x48c2('0x753'),'digitgraph']]},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x754'),'options':[[_0x48c2('0x755'),'list'],[_0x48c2('0x25e'),'10'],[_0x48c2('0x28c'),'9'],[_0x48c2('0x25f'),'8'],[_0x48c2('0x272'),'7'],[_0x48c2('0x260'),'6'],[_0x48c2('0x273'),'5'],[_0x48c2('0x261'),'4'],[_0x48c2('0x262'),'3'],[_0x48c2('0x274'),'2'],['1st','1']]}],'output':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')][_0x48c2('0x37b')]=function(_0x3df132,_0x4aa202){var _0x1dde12={'ZtGGE':_0x48c2('0x756'),'nGFmn':'list','lQYBn':function(_0x1df186,_0x1344b7){return _0x1df186+_0x1344b7;},'LrgNQ':_0x48c2('0x757'),'swzLV':'_list','XBVWi':_0x48c2('0x713'),'CBEdr':_0x48c2('0x74d'),'VodIp':'change','PECUb':'dropdown_thelast10digits_B'};var _0x1e792f=_0x1dde12[_0x48c2('0x758')][_0x48c2('0xe')]('|'),_0x3de5c7=0x0;while(!![]){switch(_0x1e792f[_0x3de5c7++]){case'0':var _0x3ad4ec=_0x3df132['getFieldValue']('dropdown_thelast10digits_A');continue;case'1':if(_0x432d96==_0x1dde12[_0x48c2('0x759')]){_0x490c2c=_0x1dde12['lQYBn'](_0x1dde12[_0x48c2('0x75a')],_0x3ad4ec)+_0x1dde12['swzLV'];}else{_0x490c2c=_0x1dde12['lQYBn'](_0x1dde12['lQYBn'](_0x1dde12[_0x48c2('0x75b')](_0x48c2('0x75c'),_0x3ad4ec)+'_',_0x432d96),_0x1dde12[_0x48c2('0x75d')]);if([_0x1dde12[_0x48c2('0x75e')],_0x1dde12[_0x48c2('0x75f')],'digitgraph'][_0x48c2('0x61')](_0x3ad4ec)){_0x490c2c+='*1';}}continue;case'2':return[_0x490c2c,Blockly[_0x48c2('0x6e1')]['ORDER_NONE']];case'3':var _0x490c2c;continue;case'4':var _0x432d96=_0x3df132[_0x48c2('0x6f7')](_0x1dde12[_0x48c2('0x760')]);continue;}break;}};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x761'),'message0':_0x48c2('0x762'),'args0':[{'type':_0x48c2('0x6fd'),'name':'row_nya','options':[[_0x48c2('0x763'),'1'],[_0x48c2('0x764'),'2'],[_0x48c2('0x765'),'3'],[_0x48c2('0x766'),'4'],['Row#5','5'],[_0x48c2('0x767'),'6']]},{'type':_0x48c2('0x768'),'name':_0x48c2('0x769')}],'inputsInline':!![],'previousStatement':null,'nextStatement':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')]['digitstatisticsetnoofticks']=function(_0x51ae1a,_0xfdef2f){var _0x38fe49={'Tehjq':'ticks_nya','wvdot':function(_0x51986a,_0xb8f5ed){return _0x51986a+_0xb8f5ed;},'OwBzB':function(_0x12280f,_0x285520){return _0x12280f+_0x285520;},'stONb':_0x48c2('0x76a'),'DrMdV':_0x48c2('0x76b'),'inClp':_0x48c2('0x76c')};var _0x194d43=_0x51ae1a[_0x48c2('0x6f7')](_0x48c2('0x76d'));var _0x3056af=_0xfdef2f[_0x48c2('0x76e')](_0x51ae1a,_0x38fe49[_0x48c2('0x76f')],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);var _0x4f288e=_0x38fe49[_0x48c2('0x772')](_0x38fe49['OwBzB'](_0x38fe49[_0x48c2('0x773')],_0x194d43)+_0x38fe49[_0x48c2('0x774')],_0x3056af)+_0x38fe49[_0x48c2('0x775')];return _0x4f288e;};Blockly['defineBlocksWithJsonArray']([{'type':_0x48c2('0x776'),'message0':'Digit\x20statistic:\x20%1\x20%2','args0':[{'type':'field_dropdown','name':'dropdown_digitstatistic_A','options':[[_0x48c2('0x763'),'1'],[_0x48c2('0x764'),'2'],[_0x48c2('0x765'),'3'],[_0x48c2('0x766'),'4'],[_0x48c2('0x777'),'5'],[_0x48c2('0x767'),'6'],[_0x48c2('0x778'),'summ']]},{'type':'field_dropdown','name':_0x48c2('0x779'),'options':[[_0x48c2('0x755'),_0x48c2('0x77a')],[_0x48c2('0x77b'),'0'],[_0x48c2('0x77c'),'1'],[_0x48c2('0x77d'),'2'],[_0x48c2('0x77e'),'3'],['Digit\x204','4'],['Digit\x205','5'],[_0x48c2('0x77f'),'6'],[_0x48c2('0x780'),'7'],['Digit\x208','8'],[_0x48c2('0x781'),'9'],[_0x48c2('0x782'),_0x48c2('0x783')],[_0x48c2('0x784'),'most']]}],'output':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript['javascriptGenerator']['forBlock'][_0x48c2('0x776')]=function(_0x201e0a,_0x4d1aa6){var _0x172028={'sDuEC':'0|3|2|4|1','BecMy':_0x48c2('0x785'),'NfGay':_0x48c2('0x779'),'rDJkN':function(_0x4d49df,_0x32360f){return _0x4d49df==_0x32360f;},'SXDMk':'list','cvHAm':'summ','qzjDk':function(_0x1d33ca,_0x3448c7){return _0x1d33ca+_0x3448c7;},'cyISl':function(_0x400afc,_0x11dc40){return _0x400afc+_0x11dc40;},'XbFeq':function(_0xdae04f,_0x4006fa){return _0xdae04f+_0x4006fa;},'VTMSw':function(_0x2e7a7c,_0x38c1e0){return _0x2e7a7c+_0x38c1e0;},'MlARs':'document.getElementById(\x22digitstatistic_','nCGDp':_0x48c2('0x713')};var _0x200247=_0x172028['sDuEC'][_0x48c2('0xe')]('|'),_0x585466=0x0;while(!![]){switch(_0x200247[_0x585466++]){case'0':var _0xaadea5=_0x201e0a[_0x48c2('0x6f7')](_0x172028['BecMy']);continue;case'1':return[_0x867398,Blockly['JavaScript'][_0x48c2('0x6e2')]];case'2':var _0x867398;continue;case'3':var _0x1cd551=_0x201e0a[_0x48c2('0x6f7')](_0x172028['NfGay']);continue;case'4':if(_0x172028[_0x48c2('0x786')](_0x1cd551,_0x172028[_0x48c2('0x787')])){if(_0x172028[_0x48c2('0x786')](_0xaadea5,_0x172028[_0x48c2('0x788')])){_0x867398=_0x48c2('0x789');}else{_0x867398=_0x172028[_0x48c2('0x78a')](_0x172028['cyISl'](_0x48c2('0x78b'),_0xaadea5),']');}}else{_0x867398=_0x172028[_0x48c2('0x78c')](_0x172028[_0x48c2('0x78c')](_0x172028[_0x48c2('0x78c')](_0x172028[_0x48c2('0x78d')](_0x172028[_0x48c2('0x78e')],_0xaadea5),'_'),_0x1cd551),_0x172028[_0x48c2('0x78f')]);if(['0','1','2','3','4','5','6','7','8','9'][_0x48c2('0x61')](_0x1cd551)){_0x867398+='*1';}}continue;}break;}};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x790'),'message0':_0x48c2('0x791'),'args0':[{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x792'),'options':[[_0x48c2('0x755'),_0x48c2('0x77a')],[_0x48c2('0x28e'),'20'],[_0x48c2('0x288'),'19'],[_0x48c2('0x289'),'18'],[_0x48c2('0x290'),'17'],[_0x48c2('0x793'),'16'],[_0x48c2('0x28a'),'15'],[_0x48c2('0x292'),'14'],['13th','13'],[_0x48c2('0x294'),'12'],[_0x48c2('0x2b8'),'11'],[_0x48c2('0x25e'),'10'],[_0x48c2('0x28c'),'9'],[_0x48c2('0x25f'),'8'],[_0x48c2('0x272'),'7'],['6th','6'],[_0x48c2('0x273'),'5'],[_0x48c2('0x261'),'4'],[_0x48c2('0x262'),'3'],['2nd','2'],[_0x48c2('0x275'),'1']]}],'output':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript['javascriptGenerator'][_0x48c2('0x6cf')]['caterzian20']=function(_0x4b12f6,_0x5bfe2d){var _0x5ca6eb={'tKwGH':function(_0x21fd80,_0x4bdcf9){return _0x21fd80==_0x4bdcf9;},'XYXvE':_0x48c2('0x77a'),'KmTQl':_0x48c2('0x794'),'TFYCA':function(_0x341810,_0x74dfce){return _0x341810+_0x74dfce;},'xJUbI':'document.getElementById(\x22thelast20digits_digitcater_','GbgBA':'\x22).innerText*1'};var _0x2c48cf=_0x4b12f6['getFieldValue'](_0x48c2('0x792'));var _0x181af8;if(_0x5ca6eb[_0x48c2('0x795')](_0x2c48cf,_0x5ca6eb['XYXvE'])){_0x181af8=_0x5ca6eb['KmTQl'];}else{_0x181af8=_0x5ca6eb[_0x48c2('0x796')](_0x5ca6eb[_0x48c2('0x796')](_0x5ca6eb['xJUbI'],_0x2c48cf),_0x5ca6eb[_0x48c2('0x797')]);}return[_0x181af8,Blockly['JavaScript'][_0x48c2('0x6e2')]];};Blockly['defineBlocksWithJsonArray']([{'type':_0x48c2('0x798'),'message0':_0x48c2('0x799'),'args0':[{'type':'field_dropdown','name':_0x48c2('0x79a'),'options':[[_0x48c2('0x755'),_0x48c2('0x77a')],['20th','20'],['19th','19'],[_0x48c2('0x289'),'18'],[_0x48c2('0x290'),'17'],['16th','16'],[_0x48c2('0x28a'),'15'],[_0x48c2('0x292'),'14'],['13th','13'],[_0x48c2('0x294'),'12'],[_0x48c2('0x2b8'),'11'],[_0x48c2('0x25e'),'10'],[_0x48c2('0x28c'),'9'],[_0x48c2('0x25f'),'8'],['7th','7'],[_0x48c2('0x260'),'6'],[_0x48c2('0x273'),'5'],[_0x48c2('0x261'),'4'],[_0x48c2('0x262'),'3'],[_0x48c2('0x274'),'2'],['1st','1']]}],'output':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')]['evenodd20']=function(_0x1c9c2c,_0x2194ea){var _0x187a64={'GOcxy':_0x48c2('0x79a'),'ovscY':_0x48c2('0x77a'),'TdcGj':'thelast20digits_digitevenodd_list','ztlbu':function(_0x221fac,_0x22be85){return _0x221fac+_0x22be85;},'omFLU':_0x48c2('0x79b')};var _0x475b64=_0x1c9c2c[_0x48c2('0x6f7')](_0x187a64[_0x48c2('0x79c')]);var _0x4cac64;if(_0x475b64==_0x187a64['ovscY']){_0x4cac64=_0x187a64['TdcGj'];}else{_0x4cac64=_0x187a64[_0x48c2('0x79d')](_0x187a64[_0x48c2('0x79e')]+_0x475b64,'\x22).innerText');}return[_0x4cac64,Blockly[_0x48c2('0x6e1')]['ORDER_NONE']];};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x79f'),'message0':'Even\x20VS\x20Odd\x20|\x20Set\x20%1\x20:\x20%2\x20ticks','args0':[{'type':'field_dropdown','name':_0x48c2('0x76d'),'options':[[_0x48c2('0x763'),'1'],[_0x48c2('0x764'),'2'],[_0x48c2('0x765'),'3'],[_0x48c2('0x766'),'4'],[_0x48c2('0x777'),'5'],[_0x48c2('0x767'),'6']]},{'type':_0x48c2('0x768'),'name':'ticks_nya'}],'inputsInline':!![],'previousStatement':null,'nextStatement':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')][_0x48c2('0x79f')]=function(_0x5070e7,_0x40fb7d){var _0x1a0187={'umhBs':_0x48c2('0x76d'),'ipzTe':_0x48c2('0x769'),'NQnFp':function(_0x2235b5,_0x5a3834){return _0x2235b5+_0x5a3834;},'YvEYB':function(_0x55fc85,_0x1de19d){return _0x55fc85+_0x1de19d;},'yyFBU':_0x48c2('0x7a0'),'ZLGyP':_0x48c2('0x76c')};var _0x56a805=_0x5070e7[_0x48c2('0x6f7')](_0x1a0187[_0x48c2('0x7a1')]);var _0x1dec49=_0x40fb7d[_0x48c2('0x76e')](_0x5070e7,_0x1a0187[_0x48c2('0x7a2')],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);var _0x2e1e97=_0x1a0187['NQnFp'](_0x1a0187[_0x48c2('0x7a3')](_0x1a0187[_0x48c2('0x7a3')](_0x1a0187[_0x48c2('0x7a3')](_0x1a0187['yyFBU'],_0x56a805),'].value='),_0x1dec49),_0x1a0187[_0x48c2('0x7a4')]);return _0x2e1e97;};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x38b'),'message0':_0x48c2('0x7a5'),'args0':[{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x7a6'),'options':[[_0x48c2('0x763'),'1'],['Row#2','2'],[_0x48c2('0x765'),'3'],[_0x48c2('0x766'),'4'],[_0x48c2('0x777'),'5'],[_0x48c2('0x767'),'6']]},{'type':_0x48c2('0x6fd'),'name':'dropdown_evenvsodd_B','options':[[_0x48c2('0x7a7'),_0x48c2('0x7a8')],[_0x48c2('0x7a9'),'odd']]}],'output':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')][_0x48c2('0x38b')]=function(_0x13aee2,_0x1e2eee){var _0x446ba1={'mUBGU':_0x48c2('0x7a6'),'upOpX':function(_0x149613,_0x570193){return _0x149613+_0x570193;},'clywA':function(_0x562704,_0x25ccfb){return _0x562704+_0x25ccfb;},'JfbAC':function(_0x5150b5,_0x32421a){return _0x5150b5+_0x32421a;},'LEXSv':'document.getElementById(\x22evenvsodd_','BHJwn':_0x48c2('0x7aa')};var _0x2ad9e3=_0x13aee2[_0x48c2('0x6f7')](_0x446ba1['mUBGU']);var _0x2df9d5=_0x13aee2['getFieldValue']('dropdown_evenvsodd_B');var _0x371b5e=_0x446ba1[_0x48c2('0x7ab')](_0x446ba1[_0x48c2('0x7ac')](_0x446ba1[_0x48c2('0x7ac')](_0x446ba1[_0x48c2('0x7ad')](_0x446ba1[_0x48c2('0x7ae')],_0x2ad9e3),'_'),_0x2df9d5),_0x446ba1[_0x48c2('0x7af')]);return[_0x371b5e,Blockly[_0x48c2('0x6e1')][_0x48c2('0x6e2')]];};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x7b0'),'message0':_0x48c2('0x7b1'),'args0':[{'type':'field_dropdown','name':_0x48c2('0x76d'),'options':[[_0x48c2('0x763'),'1'],[_0x48c2('0x764'),'2']]},{'type':_0x48c2('0x768'),'name':_0x48c2('0x769')}],'inputsInline':!![],'previousStatement':null,'nextStatement':null,'colour':'#3e3e3e','tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')]['forBlock'][_0x48c2('0x7b0')]=function(_0x5836cd,_0x498917){var _0x4c1028={'eGhVx':_0x48c2('0x76d'),'UAhry':'ticks_nya','XwqKA':function(_0x270721,_0x2488a3){return _0x270721+_0x2488a3;},'aFKVL':_0x48c2('0x7b2'),'Sviqt':'].value=','nogDX':_0x48c2('0x76c')};var _0x10ed54=_0x5836cd[_0x48c2('0x6f7')](_0x4c1028[_0x48c2('0x7b3')]);var _0x3bce02=_0x498917[_0x48c2('0x76e')](_0x5836cd,_0x4c1028['UAhry'],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);var _0x10ac6b=_0x4c1028[_0x48c2('0x7b4')](_0x4c1028[_0x48c2('0x7b4')](_0x4c1028[_0x48c2('0x7b4')](_0x4c1028[_0x48c2('0x7b5')]+_0x10ed54,_0x4c1028[_0x48c2('0x7b6')]),_0x3bce02),_0x4c1028[_0x48c2('0x7b7')]);return _0x10ac6b;};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x7b8'),'message0':_0x48c2('0x7b9'),'args0':[{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x76d'),'options':[[_0x48c2('0x7ba'),'1'],[_0x48c2('0x7bb'),'2']]},{'type':'field_dropdown','name':'type_nya','options':[[_0x48c2('0x7bc'),'over'],['Under',_0x48c2('0x7bd')]]},{'type':_0x48c2('0x768'),'name':'digit_nya'}],'inputsInline':![],'previousStatement':null,'nextStatement':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')]['forBlock'][_0x48c2('0x7b8')]=function(_0x903b5,_0x36fd5b){var _0x2e890e={'Fykgu':_0x48c2('0x76d'),'VwwEr':_0x48c2('0x7be'),'Llvbp':_0x48c2('0x7bf'),'meHqI':function(_0x512152,_0x19fc77){return _0x512152+_0x19fc77;},'lCnuw':function(_0x2ec381,_0x374c95){return _0x2ec381+_0x374c95;},'IyYEv':function(_0x462d35,_0x37862b){return _0x462d35+_0x37862b;},'ibUPT':function(_0x41b126,_0x5e1232){return _0x41b126+_0x5e1232;},'QrNdG':function(_0x23e878,_0x49458a){return _0x23e878+_0x49458a;},'LUzem':'document.getElementById(\x22overvsunder_','iSkGu':_0x48c2('0x7c0')};var _0xd3660e=_0x903b5[_0x48c2('0x6f7')](_0x2e890e[_0x48c2('0x7c1')]);var _0xb971d4=_0x903b5[_0x48c2('0x6f7')](_0x2e890e['VwwEr']);var _0x552f8a=_0x36fd5b['valueToCode'](_0x903b5,_0x2e890e[_0x48c2('0x7c2')],javascript[_0x48c2('0x770')]['ATOMIC']);var _0x2f6a66=_0x2e890e[_0x48c2('0x7c3')](_0x2e890e[_0x48c2('0x7c4')](_0x2e890e[_0x48c2('0x7c5')](_0x2e890e[_0x48c2('0x7c5')](_0x2e890e[_0x48c2('0x7c6')](_0x2e890e[_0x48c2('0x7c7')](_0x2e890e[_0x48c2('0x7c8')],_0xd3660e),'_'),_0xb971d4),_0x2e890e[_0x48c2('0x7c9')]),_0x552f8a),';');return _0x2f6a66;};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x390'),'message0':_0x48c2('0x7ca'),'args0':[{'type':'field_dropdown','name':_0x48c2('0x7cb'),'options':[[_0x48c2('0x763'),'1'],[_0x48c2('0x764'),'2']]},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x7cc'),'options':[[_0x48c2('0x7cd'),_0x48c2('0x7ce')],['Under(%)',_0x48c2('0x7bd')]]}],'output':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')]['overvsunder']=function(_0x1092c3,_0x3882af){var _0x4d8189={'iJMuP':_0x48c2('0x7cb'),'YhDuA':_0x48c2('0x7cc'),'SnzpW':function(_0x3f7629,_0xa2293d){return _0x3f7629+_0xa2293d;},'fSkJg':function(_0x48a23f,_0xe967d2){return _0x48a23f+_0xe967d2;},'CJnvL':_0x48c2('0x7cf'),'lHCrF':_0x48c2('0x7aa')};var _0x36d9f4=_0x1092c3[_0x48c2('0x6f7')](_0x4d8189['iJMuP']);var _0x1c125b=_0x1092c3['getFieldValue'](_0x4d8189[_0x48c2('0x7d0')]);var _0xe474e7=_0x4d8189[_0x48c2('0x7d1')](_0x4d8189[_0x48c2('0x7d2')](_0x4d8189[_0x48c2('0x7d2')](_0x4d8189[_0x48c2('0x7d3')],_0x36d9f4),'_')+_0x1c125b,_0x4d8189['lHCrF']);return[_0xe474e7,Blockly[_0x48c2('0x6e1')][_0x48c2('0x6e2')]];};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x7d4'),'message0':'Last\x20Tick','args0':[],'output':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')][_0x48c2('0x7d4')]=function(_0x204286,_0x52e223){var _0xeab9e7={'sGvom':_0x48c2('0x7d5')};var _0x52738f=_0xeab9e7['sGvom'];return[_0x52738f,Blockly[_0x48c2('0x6e1')]['ORDER_NONE']];};Blockly['defineBlocksWithJsonArray']([{'type':_0x48c2('0x7d6'),'message0':_0x48c2('0x7d7'),'args0':[],'output':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')][_0x48c2('0x7d6')]=function(_0x177822,_0x2dc506){var _0x30b631={'EQBGo':_0x48c2('0x7d8')};var _0x4485ab=_0x30b631[_0x48c2('0x7d9')];return[_0x4485ab,Blockly['JavaScript']['ORDER_NONE']];};Blockly[_0x48c2('0x6c8')]([{'type':'1001tickslist','message0':_0x48c2('0x709'),'args0':[],'output':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')]['forBlock']['1001tickslist']=function(_0x288cee,_0x3e8369){var _0x1d52be='tickArrayUtama';return[_0x1d52be,Blockly[_0x48c2('0x6e1')][_0x48c2('0x6e2')]];};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x7da'),'message0':_0x48c2('0x7db'),'args0':[],'output':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')][_0x48c2('0x7da')]=function(_0x25b985,_0x47022f){var _0x26d32e={'KZBUc':'tickArrayUtamaText'};var _0x18ffdd=_0x26d32e[_0x48c2('0x7dc')];return[_0x18ffdd,Blockly[_0x48c2('0x6e1')][_0x48c2('0x6e2')]];};Blockly['defineBlocksWithJsonArray']([{'type':'thelast10ticks','message0':_0x48c2('0x7dd'),'args0':[{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x7de'),'options':[['Tick',_0x48c2('0xa3')],[_0x48c2('0x7df'),_0x48c2('0x7e0')],[_0x48c2('0x7e1'),_0x48c2('0x7e2')],[_0x48c2('0x7e3'),'sentiment'],['Change','change'],['%','%']]},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x7e4'),'options':[[_0x48c2('0x755'),_0x48c2('0x77a')],[_0x48c2('0x25e'),'10'],[_0x48c2('0x28c'),'9'],[_0x48c2('0x25f'),'8'],[_0x48c2('0x272'),'7'],[_0x48c2('0x260'),'6'],[_0x48c2('0x273'),'5'],[_0x48c2('0x261'),'4'],[_0x48c2('0x262'),'3'],['2nd','2'],[_0x48c2('0x275'),'1']]}],'output':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')]['forBlock'][_0x48c2('0x397')]=function(_0x18ef65,_0x351f51){var _0x31e5ca={'ZqStg':'dropdown_thelast10ticks_B','lTnyd':function(_0x28075e,_0x5e3082){return _0x28075e==_0x5e3082;},'VQJHQ':_0x48c2('0x77a'),'mFhQc':function(_0x9ac751,_0x376dfa){return _0x9ac751==_0x376dfa;},'LUpYm':_0x48c2('0x7e5'),'gLkym':function(_0x33029f,_0x12ecb5){return _0x33029f+_0x12ecb5;},'VDgin':_0x48c2('0x7e6'),'GuCPN':_0x48c2('0x7e7'),'YuCAy':_0x48c2('0x713'),'EnsAi':_0x48c2('0xa3'),'gUcIO':_0x48c2('0x7e8'),'rLvfz':_0x48c2('0x7de')};var _0x1aaf06='4|1|2|3|0'['split']('|'),_0x394c80=0x0;while(!![]){switch(_0x1aaf06[_0x394c80++]){case'0':return[_0x314a45,Blockly[_0x48c2('0x6e1')][_0x48c2('0x6e2')]];case'1':var _0x4138b9=_0x18ef65[_0x48c2('0x6f7')](_0x31e5ca[_0x48c2('0x7e9')]);continue;case'2':var _0x314a45;continue;case'3':if(_0x31e5ca[_0x48c2('0x7ea')](_0x4138b9,_0x31e5ca[_0x48c2('0x7eb')])){if(_0x31e5ca[_0x48c2('0x7ec')](_0x2f028d,'%')){_0x314a45=_0x31e5ca['LUpYm'];}else{_0x314a45=_0x31e5ca[_0x48c2('0x7ed')](_0x31e5ca[_0x48c2('0x7ee')]+_0x2f028d,_0x48c2('0x7ef'));}}else{_0x314a45=_0x31e5ca[_0x48c2('0x7ed')](_0x31e5ca[_0x48c2('0x7ed')](_0x31e5ca[_0x48c2('0x7f0')],_0x2f028d)+'_',_0x4138b9)+_0x31e5ca[_0x48c2('0x7f1')];if([_0x31e5ca[_0x48c2('0x7f2')],_0x31e5ca[_0x48c2('0x7f3')],'%'][_0x48c2('0x61')](_0x2f028d)){_0x314a45+='*1';}}continue;case'4':var _0x2f028d=_0x18ef65[_0x48c2('0x6f7')](_0x31e5ca['rLvfz']);continue;}break;}};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x7f4'),'message0':_0x48c2('0x7f5'),'args0':[{'type':_0x48c2('0x6fd'),'name':'dropdown_tickworm20_A','options':[['History\x20(worm\x20head)',_0x48c2('0xa1')],[_0x48c2('0x7f6'),_0x48c2('0x7f7')]]},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x7f8'),'options':[['List',_0x48c2('0x77a')],[_0x48c2('0x28e'),'20'],[_0x48c2('0x288'),'19'],[_0x48c2('0x289'),'18'],[_0x48c2('0x290'),'17'],[_0x48c2('0x793'),'16'],['15th','15'],[_0x48c2('0x292'),'14'],[_0x48c2('0x28b'),'13'],[_0x48c2('0x294'),'12'],[_0x48c2('0x2b8'),'11'],[_0x48c2('0x25e'),'10'],[_0x48c2('0x28c'),'9'],[_0x48c2('0x25f'),'8'],[_0x48c2('0x272'),'7'],[_0x48c2('0x260'),'6'],['5th','5'],[_0x48c2('0x261'),'4'],['3rd','3'],[_0x48c2('0x274'),'2'],['1st','1']]}],'output':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')][_0x48c2('0x7f4')]=function(_0x4ab1f5,_0x48d39f){var _0x1e55bc={'zAVjM':function(_0x1adec9,_0x2b2411){return _0x1adec9==_0x2b2411;},'JrPtN':_0x48c2('0x77a'),'QwYQy':function(_0xc911d5,_0x1a041f){return _0xc911d5+_0x1a041f;},'fihyX':_0x48c2('0x7f9'),'WpFJE':_0x48c2('0x7fa'),'NkZuW':_0x48c2('0x713')};var _0x4ddd92=_0x48c2('0x7fb')[_0x48c2('0xe')]('|'),_0xc7a54b=0x0;while(!![]){switch(_0x4ddd92[_0xc7a54b++]){case'0':return[_0x95ff34,Blockly['JavaScript'][_0x48c2('0x6e2')]];case'1':var _0x95ff34;continue;case'2':var _0x1013ff=_0x4ab1f5['getFieldValue']('dropdown_tickworm20_A');continue;case'3':var _0x2bafd0=_0x4ab1f5['getFieldValue']('dropdown_tickworm20_B');continue;case'4':if(_0x1e55bc['zAVjM'](_0x2bafd0,_0x1e55bc[_0x48c2('0x7fc')])){_0x95ff34=_0x1e55bc[_0x48c2('0x7fd')](_0x1e55bc[_0x48c2('0x7fd')](_0x1e55bc['fihyX'],_0x1013ff),_0x48c2('0x7ef'));}else{_0x95ff34=_0x1e55bc[_0x48c2('0x7fd')](_0x1e55bc['QwYQy'](_0x1e55bc[_0x48c2('0x7fd')](_0x1e55bc[_0x48c2('0x7fe')],_0x1013ff),'_')+_0x2bafd0,_0x1e55bc[_0x48c2('0x7ff')]);}continue;}break;}};Blockly['defineBlocksWithJsonArray']([{'type':_0x48c2('0x800'),'message0':_0x48c2('0x801'),'args0':[{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x76d'),'options':[['Row#1','1'],[_0x48c2('0x764'),'2'],[_0x48c2('0x765'),'3'],[_0x48c2('0x766'),'4'],['Row#5','5'],[_0x48c2('0x767'),'6']]},{'type':_0x48c2('0x768'),'name':'ticks_nya'}],'inputsInline':!![],'previousStatement':null,'nextStatement':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')]['risevsfallsetnoofticks']=function(_0x5cb4e6,_0x5799e2){var _0x342470={'NlyuO':_0x48c2('0x769'),'hBKnx':function(_0x50538d,_0x2a619b){return _0x50538d+_0x2a619b;},'NnbRU':function(_0x178631,_0x286f29){return _0x178631+_0x286f29;},'zmLsS':function(_0x3f0733,_0xfcc9f8){return _0x3f0733+_0xfcc9f8;},'aCKzv':_0x48c2('0x76b'),'dgyUW':_0x48c2('0x76c')};var _0x6664e=_0x5cb4e6[_0x48c2('0x6f7')](_0x48c2('0x76d'));var _0x206167=_0x5799e2[_0x48c2('0x76e')](_0x5cb4e6,_0x342470[_0x48c2('0x802')],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);var _0x27d361=_0x342470[_0x48c2('0x803')](_0x342470[_0x48c2('0x804')](_0x342470[_0x48c2('0x805')](_0x48c2('0x806'),_0x6664e)+_0x342470[_0x48c2('0x807')],_0x206167),_0x342470[_0x48c2('0x808')]);return _0x27d361;};Blockly['defineBlocksWithJsonArray']([{'type':_0x48c2('0x388'),'message0':'Rise\x20VS\x20Fall:\x20%1\x20%2','args0':[{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x809'),'options':[[_0x48c2('0x763'),'1'],[_0x48c2('0x764'),'2'],[_0x48c2('0x765'),'3'],['Row#4','4'],[_0x48c2('0x777'),'5'],[_0x48c2('0x767'),'6']]},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x80a'),'options':[[_0x48c2('0x80b'),_0x48c2('0x80c')],[_0x48c2('0x80d'),_0x48c2('0x80e')]]}],'output':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')][_0x48c2('0x388')]=function(_0x445a09,_0x38b56b){var _0x2f965d={'SvwUB':_0x48c2('0x809'),'lxUap':_0x48c2('0x80a'),'DMYYh':function(_0x2215cd,_0x4dd59a){return _0x2215cd+_0x4dd59a;},'fzeqz':function(_0x4f72de,_0x347f19){return _0x4f72de+_0x347f19;},'reVui':function(_0x478ce5,_0x10b640){return _0x478ce5+_0x10b640;},'moJhN':'document.getElementById(\x22risevsfall_','HAsYN':'\x22).innerText.replaceAll(\x22%\x22,\x22\x22)*1'};var _0x56e383=_0x445a09[_0x48c2('0x6f7')](_0x2f965d[_0x48c2('0x80f')]);var _0x48c4ed=_0x445a09[_0x48c2('0x6f7')](_0x2f965d[_0x48c2('0x810')]);var _0x29a0d6=_0x2f965d[_0x48c2('0x811')](_0x2f965d['fzeqz'](_0x2f965d[_0x48c2('0x812')](_0x2f965d[_0x48c2('0x812')](_0x2f965d[_0x48c2('0x813')],_0x56e383),'_'),_0x48c4ed),_0x2f965d['HAsYN']);return[_0x29a0d6,Blockly['JavaScript']['ORDER_NONE']];};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x814'),'message0':_0x48c2('0x815'),'args0':[{'type':_0x48c2('0x6fd'),'name':'row_nya','options':[[_0x48c2('0x34c'),'1'],[_0x48c2('0x2fa'),'2'],[_0x48c2('0x2fc'),'3']]},{'type':'input_value','name':_0x48c2('0x816')}],'inputsInline':!![],'previousStatement':null,'nextStatement':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript['javascriptGenerator']['forBlock'][_0x48c2('0x814')]=function(_0x3ac292,_0x572dfa){var _0x5e4fb2={'KjRhA':'row_nya','dNNLt':'period_nya','FuhLS':function(_0x26d638,_0x415b7f){return _0x26d638+_0x415b7f;},'aNxmx':_0x48c2('0x817'),'CZLuo':_0x48c2('0x76b'),'nXrOc':_0x48c2('0x76c')};var _0x29939e=_0x3ac292[_0x48c2('0x6f7')](_0x5e4fb2[_0x48c2('0x818')]);var _0x3ba013=_0x572dfa['valueToCode'](_0x3ac292,_0x5e4fb2[_0x48c2('0x819')],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);var _0x42da65=_0x5e4fb2[_0x48c2('0x81a')](_0x5e4fb2[_0x48c2('0x81b')]+_0x29939e,_0x5e4fb2[_0x48c2('0x81c')])+_0x3ba013+_0x5e4fb2[_0x48c2('0x81d')];return _0x42da65;};Blockly[_0x48c2('0x6c8')]([{'type':'ticktrisma','message0':_0x48c2('0x81e'),'args0':[{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x81f'),'options':[['SMA#1','1'],[_0x48c2('0x2fa'),'2'],[_0x48c2('0x2fc'),'3']]},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x820'),'options':[[_0x48c2('0x755'),_0x48c2('0x77a')],[_0x48c2('0x28e'),'20'],[_0x48c2('0x288'),'19'],['18th','18'],[_0x48c2('0x290'),'17'],['16th','16'],['15th','15'],[_0x48c2('0x292'),'14'],[_0x48c2('0x28b'),'13'],[_0x48c2('0x294'),'12'],['11th','11'],[_0x48c2('0x25e'),'10'],[_0x48c2('0x28c'),'9'],[_0x48c2('0x25f'),'8'],[_0x48c2('0x272'),'7'],[_0x48c2('0x260'),'6'],[_0x48c2('0x273'),'5'],[_0x48c2('0x261'),'4'],[_0x48c2('0x262'),'3'],[_0x48c2('0x274'),'2'],[_0x48c2('0x275'),'1']]}],'output':null,'colour':'#3e3e3e','tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')][_0x48c2('0x821')]=function(_0x251f7e,_0x223290){var _0x20799c={'mpsuK':_0x48c2('0x822'),'FwDjn':_0x48c2('0x820'),'YAsup':function(_0x55b902,_0x4bb830){return _0x55b902==_0x4bb830;},'AXGCY':'list','lCbGE':function(_0xfe27aa,_0x39feca){return _0xfe27aa+_0x39feca;},'TASdH':_0x48c2('0x823'),'imhFk':function(_0x4e29d8,_0x156894){return _0x4e29d8+_0x156894;},'mWqMx':_0x48c2('0x824')};var _0x5402b2=_0x20799c[_0x48c2('0x825')]['split']('|'),_0xa69e15=0x0;while(!![]){switch(_0x5402b2[_0xa69e15++]){case'0':var _0x4beb24=_0x251f7e[_0x48c2('0x6f7')](_0x20799c[_0x48c2('0x826')]);continue;case'1':if(_0x20799c['YAsup'](_0x4beb24,_0x20799c[_0x48c2('0x827')])){_0x450380=_0x20799c[_0x48c2('0x828')](_0x20799c[_0x48c2('0x828')](_0x20799c['TASdH'],_0x2442d4),']');}else{_0x450380=_0x20799c[_0x48c2('0x829')](_0x20799c[_0x48c2('0x829')](_0x20799c[_0x48c2('0x829')](_0x20799c[_0x48c2('0x82a')],_0x2442d4),'_'),_0x4beb24)+_0x48c2('0x82b');}continue;case'2':var _0x450380;continue;case'3':return[_0x450380,Blockly[_0x48c2('0x6e1')][_0x48c2('0x6e2')]];case'4':var _0x2442d4=_0x251f7e['getFieldValue'](_0x48c2('0x81f'));continue;}break;}};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x82c'),'message0':_0x48c2('0x82d'),'args0':[{'type':'field_dropdown','name':_0x48c2('0x82e'),'options':[['1st\x20last\x20tick','1'],[_0x48c2('0x82f'),'2'],[_0x48c2('0x830'),'3']]},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x831'),'options':[[_0x48c2('0x275'),'1'],['2nd','2'],['3rd','3'],['4th','4'],[_0x48c2('0x273'),'5'],[_0x48c2('0x260'),'6'],[_0x48c2('0x272'),'7'],[_0x48c2('0x25f'),'8'],[_0x48c2('0x28c'),'9'],[_0x48c2('0x25e'),'10'],[_0x48c2('0x2b8'),'11'],[_0x48c2('0x294'),'12']]}],'output':null,'colour':'#3e3e3e','tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')][_0x48c2('0x82c')]=function(_0x5d7d60,_0x197b7b){var _0xe84885={'QRXFN':'1|0|3|2|4','eWDoH':_0x48c2('0x831'),'khSMR':function(_0x5506d8,_0x443edd){return _0x5506d8+_0x443edd;},'niVsi':function(_0x3bd874,_0x154462){return _0x3bd874+_0x154462;},'dOcSI':_0x48c2('0x3a9'),'NriQj':function(_0x3c96dc,_0x56e66f){return _0x3c96dc+_0x56e66f;},'bJeLf':_0x48c2('0x832'),'BPjdc':_0x48c2('0x713')};var _0x689cf4=_0xe84885['QRXFN'][_0x48c2('0xe')]('|'),_0x27e455=0x0;while(!![]){switch(_0x689cf4[_0x27e455++]){case'0':var _0x5f0e6d=_0x5d7d60[_0x48c2('0x6f7')](_0xe84885[_0x48c2('0x833')]);continue;case'1':var _0x34447a=_0x5d7d60['getFieldValue'](_0x48c2('0x82e'));continue;case'2':if(!isNaN(document[_0x48c2('0x2d')](_0xe84885[_0x48c2('0x834')](_0xe84885['niVsi'](_0xe84885[_0x48c2('0x835')],_0x34447a)+'_',_0x5f0e6d))[_0x48c2('0x6c')])){_0x9571d4+='*1';}continue;case'3':var _0x9571d4=_0xe84885[_0x48c2('0x836')](_0xe84885['NriQj'](_0xe84885[_0x48c2('0x837')](_0xe84885[_0x48c2('0x837')](_0xe84885['bJeLf'],_0x34447a),'_'),_0x5f0e6d),_0xe84885[_0x48c2('0x838')]);continue;case'4':return[_0x9571d4,Blockly[_0x48c2('0x6e1')][_0x48c2('0x6e2')]];}break;}};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x839'),'message0':'Get\x20Stats\x20ACCUMULATOR\x20%1\x20Market:\x20%2\x20%3\x20Growth\x20Rate\x20%\x20[1-5]:\x20%4\x20Tick\x20List\x20:\x20%5','args0':[{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x83a'),'options':arrPopulatedMarketAccu},{'type':'input_end_row'},{'type':'input_value','name':_0x48c2('0x83b')},{'type':_0x48c2('0x768'),'name':_0x48c2('0x83c'),'check':'Array'}],'inputsInline':![],'output':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript['javascriptGenerator'][_0x48c2('0x6cf')][_0x48c2('0x839')]=function(_0x2dee93,_0x568094){var _0x356234={'AbDjy':_0x48c2('0x83d'),'voxAl':_0x48c2('0x83a'),'qIufd':_0x48c2('0x83c'),'gUMbB':function(_0x8d6779,_0x70c508){return _0x8d6779==_0x70c508;},'gxhoc':_0x48c2('0x64e'),'ccryk':_0x48c2('0x83e'),'CHwye':_0x48c2('0x6e0'),'ImiHF':function(_0x3d5888,_0x244d4b){return _0x3d5888+_0x244d4b;},'zhVSR':function(_0x2c911c,_0x1b4838){return _0x2c911c+_0x1b4838;},'pjBqR':function(_0xead724,_0x5d9117){return _0xead724+_0x5d9117;},'GtrYp':'getStatAccu(','CEccg':_0x48c2('0x83b')};var _0xfb669f=_0x356234['AbDjy'][_0x48c2('0xe')]('|'),_0x54dd6a=0x0;while(!![]){switch(_0xfb669f[_0x54dd6a++]){case'0':var _0x1da6ac=_0x2dee93[_0x48c2('0x6f7')](_0x356234[_0x48c2('0x83f')]);continue;case'1':var _0x5d41b0=_0x568094[_0x48c2('0x76e')](_0x2dee93,_0x356234[_0x48c2('0x840')],javascript['Order'][_0x48c2('0x771')]);continue;case'2':var _0x2250b2=_0x356234[_0x48c2('0x841')](_0x1da6ac,_0x356234[_0x48c2('0x842')])?_0x356234[_0x48c2('0x843')]:_0x1da6ac==_0x356234[_0x48c2('0x844')]?_0x356234[_0x48c2('0x844')]:_0x356234['ImiHF'](_0x356234[_0x48c2('0x845')]('\x22',_0x1da6ac['split']('|')[0x0]),'\x22');continue;case'3':return[_0x5299eb,Blockly[_0x48c2('0x6e1')][_0x48c2('0x6e2')]];case'4':var _0x5299eb=_0x356234[_0x48c2('0x846')](_0x356234[_0x48c2('0x846')](_0x356234[_0x48c2('0x846')](_0x356234[_0x48c2('0x846')](_0x356234['zhVSR'](_0x356234[_0x48c2('0x847')](_0x356234[_0x48c2('0x848')],_0x5d41b0),','),_0x2250b2),','),_0x40a3bb),')');continue;case'5':var _0x40a3bb=_0x568094[_0x48c2('0x76e')](_0x2dee93,_0x356234[_0x48c2('0x849')],javascript['Order'][_0x48c2('0x771')]);continue;}break;}};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x84a'),'message0':'Date/Time:\x20%1','args0':[{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x84b'),'options':[['Year',_0x48c2('0x84c')],[_0x48c2('0x84d'),_0x48c2('0x84e')],[_0x48c2('0x84f'),_0x48c2('0x850')],[_0x48c2('0x851'),_0x48c2('0x852')],[_0x48c2('0x853'),_0x48c2('0x854')],[_0x48c2('0x855'),'seconds'],['Time\x20Zone',_0x48c2('0x856')],['Seconds\x20Since\x20Epoch',_0x48c2('0x857')]]}],'output':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript['javascriptGenerator'][_0x48c2('0x6cf')][_0x48c2('0x84a')]=function(_0x2dfdee,_0x263c8e){var _0x4b20f1={'NCuKH':_0x48c2('0x858'),'YiRyK':_0x48c2('0x84e'),'LTIRQ':_0x48c2('0x859'),'kncos':'date','WxOvD':'new\x20Date().getDate()','PvMQT':_0x48c2('0x852'),'yhSfZ':_0x48c2('0x85a'),'vaIIA':_0x48c2('0x854'),'bMKXl':_0x48c2('0x85b'),'uUpXY':'new\x20Date().getSeconds()','ORlDT':_0x48c2('0x856'),'wIINA':_0x48c2('0x85c'),'mLVdQ':'secondssinceepoch','FNdLr':_0x48c2('0x85d')};var _0x525b3d=_0x2dfdee['getFieldValue'](_0x48c2('0x84b'));var _0x446852;switch(_0x525b3d){case _0x48c2('0x84c'):_0x446852=_0x4b20f1[_0x48c2('0x85e')];break;case _0x4b20f1['YiRyK']:_0x446852=_0x4b20f1['LTIRQ'];break;case _0x4b20f1[_0x48c2('0x85f')]:_0x446852=_0x4b20f1[_0x48c2('0x860')];break;case _0x4b20f1[_0x48c2('0x861')]:_0x446852=_0x4b20f1[_0x48c2('0x862')];break;case _0x4b20f1[_0x48c2('0x863')]:_0x446852=_0x48c2('0x864');break;case _0x4b20f1[_0x48c2('0x865')]:_0x446852=_0x4b20f1[_0x48c2('0x866')];break;case _0x4b20f1[_0x48c2('0x867')]:_0x446852=_0x4b20f1[_0x48c2('0x868')];break;case _0x4b20f1['mLVdQ']:_0x446852=_0x4b20f1['FNdLr'];break;}return[_0x446852,Blockly['JavaScript'][_0x48c2('0x6e2')]];};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x869'),'message0':_0x48c2('0x86a'),'args0':[{'type':'field_dropdown','name':_0x48c2('0x86b'),'options':[['Digit\x20Differs',_0x48c2('0x51a')],[_0x48c2('0x86c'),_0x48c2('0x51b')]]},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6fd'),'name':'account_nya','options':arrAccount},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x83a'),'options':arrPopulatedMarket2},{'type':_0x48c2('0x6cb')},{'type':'field_dropdown','name':_0x48c2('0x86d'),'options':arrStakeAM},{'type':_0x48c2('0x768'),'name':_0x48c2('0x86e')},{'type':_0x48c2('0x768'),'name':_0x48c2('0x86f')},{'type':_0x48c2('0x768'),'name':_0x48c2('0x870')}],'inputsInline':![],'previousStatement':null,'nextStatement':null,'colour':'#3e3e3e','tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')]['forBlock'][_0x48c2('0x869')]=function(_0x19ef4b,_0x387c66){var _0x456770={'bcKhy':function(_0x14206d,_0x2dcf3f){return _0x14206d==_0x2dcf3f;},'CQwBg':_0x48c2('0x64e'),'QPpOd':_0x48c2('0x83e'),'ldFIl':_0x48c2('0x6e0'),'MqDXe':function(_0x27d0d7,_0x523035){return _0x27d0d7+_0x523035;},'tycmB':_0x48c2('0x870'),'XISaP':'market_nya','LKuVt':function(_0x4fbbc9,_0x3ffa37){return _0x4fbbc9+_0x3ffa37;},'QfkhG':function(_0x2ec818,_0x3f7aae){return _0x2ec818+_0x3f7aae;},'DtBPc':function(_0x3251e0,_0x41e275){return _0x3251e0+_0x41e275;},'hljwD':_0x48c2('0x871'),'UVbMN':_0x48c2('0x872'),'cGxmv':_0x48c2('0x873'),'fTTZS':_0x48c2('0x86b'),'mSPKk':_0x48c2('0x874'),'uJAZv':_0x48c2('0x86d')};var _0x362d9f=_0x48c2('0x875')[_0x48c2('0xe')]('|'),_0x357026=0x0;while(!![]){switch(_0x362d9f[_0x357026++]){case'0':var _0x23e442=_0x456770[_0x48c2('0x876')](_0x239dbc,_0x456770[_0x48c2('0x877')])?_0x456770['QPpOd']:_0x456770['bcKhy'](_0x239dbc,_0x456770[_0x48c2('0x878')])?_0x456770[_0x48c2('0x878')]:_0x456770[_0x48c2('0x879')](_0x456770[_0x48c2('0x879')]('\x22',_0x239dbc[_0x48c2('0xe')]('|')[0x0]),'\x22');continue;case'1':var _0x3e93aa=_0x387c66[_0x48c2('0x76e')](_0x19ef4b,_0x456770[_0x48c2('0x87a')],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);continue;case'2':;continue;case'3':var _0x239dbc=_0x19ef4b['getFieldValue'](_0x456770[_0x48c2('0x87b')]);continue;case'4':var _0x21ccb7=_0x456770[_0x48c2('0x879')](_0x456770[_0x48c2('0x879')](_0x456770[_0x48c2('0x87c')](_0x456770[_0x48c2('0x87d')](_0x456770[_0x48c2('0x87e')](_0x456770[_0x48c2('0x87e')](_0x456770[_0x48c2('0x87e')](_0x456770['DtBPc'](_0x456770['DtBPc'](_0x456770[_0x48c2('0x87f')],_0x53bc65),_0x456770[_0x48c2('0x880')])+_0xb3e93a,'\x22,'),_0x5b361f)+',\x22'+_0x16ca3c,'\x22,')+_0x23e442,','),_0x3651d7)+_0x456770[_0x48c2('0x881')],_0x3e93aa),_0x48c2('0x882'));continue;case'5':var _0x3651d7=_0x387c66[_0x48c2('0x76e')](_0x19ef4b,_0x48c2('0x86f'),javascript['Order'][_0x48c2('0x771')]);continue;case'6':var _0x5b361f=_0x387c66['valueToCode'](_0x19ef4b,'stake_nya',javascript[_0x48c2('0x770')][_0x48c2('0x771')]);continue;case'7':return _0x21ccb7;case'8':var _0x16ca3c=_0x19ef4b[_0x48c2('0x6f7')](_0x456770[_0x48c2('0x883')]);continue;case'9':if(_0x456770['bcKhy'](_0x5b361f['toString']()['length'],0x0)){_0x5b361f=0x1;}continue;case'10':var _0x53bc65=_0x19ef4b[_0x48c2('0x6f7')](_0x456770['mSPKk']);continue;case'11':var _0xb3e93a=_0x19ef4b[_0x48c2('0x6f7')](_0x456770[_0x48c2('0x884')]);continue;}break;}};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x885'),'message0':_0x48c2('0x886'),'args0':[{'type':'field_dropdown','name':_0x48c2('0x86b'),'options':[[_0x48c2('0x887'),_0x48c2('0x51f')],[_0x48c2('0x888'),_0x48c2('0x53c')]]},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x874'),'options':arrAccount},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x83a'),'options':arrPopulatedMarket2},{'type':_0x48c2('0x6cb')},{'type':'field_dropdown','name':_0x48c2('0x86d'),'options':arrStakeAM},{'type':_0x48c2('0x768'),'name':_0x48c2('0x86e')},{'type':'input_value','name':_0x48c2('0x86f')},{'type':_0x48c2('0x768'),'name':_0x48c2('0x870')}],'inputsInline':![],'previousStatement':null,'nextStatement':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')]['forBlock'][_0x48c2('0x885')]=function(_0x41d131,_0x5c3931){var _0x1590fc={'jQSEu':'9|5|6|8|1|2|10|7|4|3|0|11','MlpiB':function(_0x82af39,_0x255bb1){return _0x82af39+_0x255bb1;},'gatLf':function(_0x5c8f4e,_0x44f158){return _0x5c8f4e+_0x44f158;},'FeGdH':function(_0x29bff7,_0x20f2b2){return _0x29bff7+_0x20f2b2;},'SXeuy':function(_0x2a1848,_0x3697db){return _0x2a1848+_0x3697db;},'nlOxs':function(_0x288540,_0x4eb43d){return _0x288540+_0x4eb43d;},'EgQOt':function(_0xadedd5,_0x48e2d1){return _0xadedd5+_0x48e2d1;},'XnFlf':_0x48c2('0x871'),'jzLYW':_0x48c2('0x889'),'kGFid':_0x48c2('0x88a'),'OKnOF':'stakeAM_nya','eudeC':_0x48c2('0x86e'),'udOLg':'ldp_nya','DbEmj':_0x48c2('0x86f'),'DzoCY':function(_0x20c9c2,_0x159598){return _0x20c9c2==_0x159598;},'TTFec':_0x48c2('0x64e'),'HdVGQ':_0x48c2('0x83e'),'QVTqM':function(_0x4d8c5,_0x2f6f1f){return _0x4d8c5==_0x2f6f1f;},'xROlr':'mainMarket_continuousindices','EAFTx':function(_0x161054,_0x3147fb){return _0x161054+_0x3147fb;},'zgStq':_0x48c2('0x874'),'PYSjp':'selcontract_nya'};var _0x2161f1=_0x1590fc['jQSEu'][_0x48c2('0xe')]('|'),_0x18b44c=0x0;while(!![]){switch(_0x2161f1[_0x18b44c++]){case'0':var _0x2f300e=_0x1590fc[_0x48c2('0x88b')](_0x1590fc[_0x48c2('0x88b')](_0x1590fc['MlpiB'](_0x1590fc[_0x48c2('0x88b')](_0x1590fc['MlpiB'](_0x1590fc[_0x48c2('0x88c')](_0x1590fc[_0x48c2('0x88d')](_0x1590fc[_0x48c2('0x88e')](_0x1590fc[_0x48c2('0x88e')](_0x1590fc[_0x48c2('0x88f')](_0x1590fc[_0x48c2('0x890')](_0x1590fc[_0x48c2('0x890')](_0x1590fc['XnFlf'],_0x6b4571),_0x48c2('0x872')),_0x54a060),'\x22,'),_0x457c5a),',\x22'),_0x3a43d2),'\x22,'),_0x12167d)+',',_0x524564)+_0x1590fc[_0x48c2('0x891')],_0x3c78cc),',')+_0x3c78cc+_0x1590fc['kGFid'];continue;case'1':var _0x54a060=_0x41d131[_0x48c2('0x6f7')](_0x1590fc['OKnOF']);continue;case'2':var _0x457c5a=_0x5c3931[_0x48c2('0x76e')](_0x41d131,_0x1590fc['eudeC'],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);continue;case'3':var _0x3c78cc=_0x5c3931[_0x48c2('0x76e')](_0x41d131,_0x1590fc[_0x48c2('0x892')],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);continue;case'4':var _0x524564=_0x5c3931[_0x48c2('0x76e')](_0x41d131,_0x1590fc['DbEmj'],javascript['Order']['ATOMIC']);continue;case'5':var _0x578b2e=_0x41d131[_0x48c2('0x6f7')](_0x48c2('0x83a'));continue;case'6':var _0x12167d=_0x1590fc[_0x48c2('0x893')](_0x578b2e,_0x1590fc[_0x48c2('0x894')])?_0x1590fc[_0x48c2('0x895')]:_0x1590fc['QVTqM'](_0x578b2e,_0x1590fc[_0x48c2('0x896')])?_0x1590fc[_0x48c2('0x896')]:_0x1590fc[_0x48c2('0x890')](_0x1590fc[_0x48c2('0x897')]('\x22',_0x578b2e[_0x48c2('0xe')]('|')[0x0]),'\x22');continue;case'7':;continue;case'8':var _0x6b4571=_0x41d131[_0x48c2('0x6f7')](_0x1590fc[_0x48c2('0x898')]);continue;case'9':var _0x3a43d2=_0x41d131['getFieldValue'](_0x1590fc['PYSjp']);continue;case'10':if(_0x1590fc[_0x48c2('0x899')](_0x457c5a[_0x48c2('0x89a')]()[_0x48c2('0x12')],0x0)){_0x457c5a=0x1;}continue;case'11':return _0x2f300e;}break;}};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x89b'),'message0':_0x48c2('0x89c'),'args0':[{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x86b'),'options':[[_0x48c2('0x89d'),_0x48c2('0x89e')],[_0x48c2('0x89f'),'DIGITODD']]},{'type':'input_end_row'},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x874'),'options':arrAccount},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x83a'),'options':arrPopulatedMarket2},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6fd'),'name':'stakeAM_nya','options':arrStakeAM},{'type':_0x48c2('0x768'),'name':_0x48c2('0x86e')},{'type':_0x48c2('0x768'),'name':_0x48c2('0x86f')}],'inputsInline':![],'previousStatement':null,'nextStatement':null,'colour':'#3e3e3e','tooltip':'','helpUrl':''}]);javascript['javascriptGenerator'][_0x48c2('0x6cf')][_0x48c2('0x89b')]=function(_0x222d53,_0x4c087a){var _0xc0984={'GkXAL':_0x48c2('0x8a0'),'eJalw':'selcontract_nya','DCecT':function(_0xc2cfd1,_0x4cb8d9){return _0xc2cfd1+_0x4cb8d9;},'PvYyn':function(_0x260880,_0x1897db){return _0x260880+_0x1897db;},'NgwAt':_0x48c2('0x871'),'lYIvZ':_0x48c2('0x872'),'IuZAl':',\x22t\x22,0,0,0,0,0,0,0,0,0,0,0,0);','uZPlM':_0x48c2('0x86d'),'bMZuZ':function(_0x49aac0,_0x2482ca){return _0x49aac0==_0x2482ca;},'XHovk':_0x48c2('0x64e'),'GefHN':function(_0x5ddba4,_0x4fe4e6){return _0x5ddba4==_0x4fe4e6;},'ukwgD':function(_0x59805b,_0x11f0cc){return _0x59805b+_0x11f0cc;},'dsQIy':function(_0x137cd6,_0x24537a){return _0x137cd6+_0x24537a;},'sHAKG':_0x48c2('0x874'),'FImPP':'inpduration_nya','NJamL':_0x48c2('0x83a')};var _0x38dc44=_0xc0984[_0x48c2('0x8a1')][_0x48c2('0xe')]('|'),_0x213197=0x0;while(!![]){switch(_0x38dc44[_0x213197++]){case'0':if(_0x21e9c8['toString']()[_0x48c2('0x12')]==0x0){_0x21e9c8=0x1;}continue;case'1':var _0x3e0f4f=_0x222d53[_0x48c2('0x6f7')](_0xc0984['eJalw']);continue;case'2':var _0x2c28f7=_0xc0984['DCecT'](_0xc0984[_0x48c2('0x8a2')](_0xc0984[_0x48c2('0x8a3')](_0xc0984[_0x48c2('0x8a3')](_0xc0984[_0x48c2('0x8a3')](_0xc0984[_0x48c2('0x8a4')]+_0x3800,_0xc0984[_0x48c2('0x8a5')]),_0x8c2dba)+'\x22,'+_0x21e9c8+',\x22'+_0x3e0f4f,'\x22,'),_0x484890)+',',_0x1d7ec2)+_0xc0984['IuZAl'];continue;case'3':var _0x8c2dba=_0x222d53[_0x48c2('0x6f7')](_0xc0984['uZPlM']);continue;case'4':return _0x2c28f7;case'5':var _0x484890=_0xc0984[_0x48c2('0x8a6')](_0x358551,_0xc0984[_0x48c2('0x8a7')])?_0x48c2('0x83e'):_0xc0984[_0x48c2('0x8a8')](_0x358551,_0x48c2('0x6e0'))?_0x48c2('0x6e0'):_0xc0984[_0x48c2('0x8a9')](_0xc0984[_0x48c2('0x8aa')]('\x22',_0x358551[_0x48c2('0xe')]('|')[0x0]),'\x22');continue;case'6':var _0x3800=_0x222d53[_0x48c2('0x6f7')](_0xc0984[_0x48c2('0x8ab')]);continue;case'7':var _0x1d7ec2=_0x4c087a[_0x48c2('0x76e')](_0x222d53,_0xc0984['FImPP'],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);continue;case'8':var _0x21e9c8=_0x4c087a[_0x48c2('0x76e')](_0x222d53,'stake_nya',javascript[_0x48c2('0x770')]['ATOMIC']);continue;case'9':;continue;case'10':var _0x358551=_0x222d53[_0x48c2('0x6f7')](_0xc0984[_0x48c2('0x8ac')]);continue;}break;}};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x8ad'),'message0':_0x48c2('0x8ae'),'args0':[{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x86b'),'options':[['Rise',_0x48c2('0x516')],['Fall',_0x48c2('0x542')],[_0x48c2('0x8af'),_0x48c2('0x517')],[_0x48c2('0x8b0'),_0x48c2('0x8b1')]]},{'type':'input_end_row'},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x874'),'options':arrAccount},{'type':'input_end_row'},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x83a'),'options':arrPopulatedMarket2},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6fd'),'name':'stakeAM_nya','options':arrStakeAM},{'type':_0x48c2('0x768'),'name':'stake_nya'},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x8b2'),'options':[[_0x48c2('0x8b3'),'t'],['second(s)','s'],[_0x48c2('0x8b4'),'m'],[_0x48c2('0x8b5'),'h'],['day(s)','d']]},{'type':'input_value','name':_0x48c2('0x86f')}],'inputsInline':![],'previousStatement':null,'nextStatement':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')]['purchase_rise_fall']=function(_0x2593e0,_0x16fed6){var _0x546870={'NJpny':function(_0x61ec46,_0x1e7ed5){return _0x61ec46==_0x1e7ed5;},'TjKZu':_0x48c2('0x83e'),'SnGBU':function(_0x1c2083,_0x55cc40){return _0x1c2083+_0x55cc40;},'FNPvB':_0x48c2('0x86e'),'lCszJ':_0x48c2('0x86d'),'rIVLP':_0x48c2('0x8b2'),'cQHvW':'market_nya','XOISX':function(_0x53d863,_0x332b71){return _0x53d863+_0x332b71;},'MWhaV':function(_0x3f580c,_0x3bea61){return _0x3f580c+_0x3bea61;},'sssqm':function(_0xed53c9,_0x9b0640){return _0xed53c9+_0x9b0640;},'fBKJi':function(_0x371ca8,_0x2bf2ef){return _0x371ca8+_0x2bf2ef;},'HAsqm':function(_0x3f3671,_0x4f7ab1){return _0x3f3671+_0x4f7ab1;},'IyqaZ':_0x48c2('0x871'),'XbzKf':'\x22,\x22'};var _0x9e9854=_0x48c2('0x8b6')[_0x48c2('0xe')]('|'),_0x29c292=0x0;while(!![]){switch(_0x9e9854[_0x29c292++]){case'0':var _0x40aa1c=_0x2593e0['getFieldValue'](_0x48c2('0x874'));continue;case'1':var _0x5bf3dd=_0x546870[_0x48c2('0x8b7')](_0x369737,'activemarket')?_0x546870[_0x48c2('0x8b8')]:_0x546870[_0x48c2('0x8b7')](_0x369737,_0x48c2('0x6e0'))?_0x48c2('0x6e0'):_0x546870[_0x48c2('0x8b9')]('\x22',_0x369737[_0x48c2('0xe')]('|')[0x0])+'\x22';continue;case'2':var _0x5613ca=_0x16fed6[_0x48c2('0x76e')](_0x2593e0,_0x546870[_0x48c2('0x8ba')],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);continue;case'3':;continue;case'4':var _0x10e104=_0x2593e0[_0x48c2('0x6f7')]('selcontract_nya');continue;case'5':return _0x25fae0;case'6':var _0x30d0d3=_0x16fed6[_0x48c2('0x76e')](_0x2593e0,_0x48c2('0x86f'),javascript[_0x48c2('0x770')][_0x48c2('0x771')]);continue;case'7':var _0x320895=_0x2593e0[_0x48c2('0x6f7')](_0x546870[_0x48c2('0x8bb')]);continue;case'8':if(_0x5613ca[_0x48c2('0x89a')]()['length']==0x0){_0x5613ca=0x1;}continue;case'9':var _0x3f290d=_0x2593e0['getFieldValue'](_0x546870[_0x48c2('0x8bc')]);continue;case'10':var _0x369737=_0x2593e0[_0x48c2('0x6f7')](_0x546870[_0x48c2('0x8bd')]);continue;case'11':var _0x25fae0=_0x546870[_0x48c2('0x8b9')](_0x546870[_0x48c2('0x8b9')](_0x546870['XOISX'](_0x546870[_0x48c2('0x8be')](_0x546870['MWhaV'](_0x546870[_0x48c2('0x8be')](_0x546870['sssqm'](_0x546870[_0x48c2('0x8bf')](_0x546870[_0x48c2('0x8c0')](_0x546870[_0x48c2('0x8c1')](_0x546870['HAsqm'](_0x546870[_0x48c2('0x8c1')](_0x546870['IyqaZ']+_0x40aa1c,_0x546870[_0x48c2('0x8c2')]),_0x320895),'\x22,'),_0x5613ca),',\x22'),_0x10e104),'\x22,'),_0x5bf3dd),','),_0x30d0d3),',\x22'),_0x3f290d)+_0x48c2('0x8c3');continue;}break;}};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x8c4'),'message0':_0x48c2('0x8c5'),'args0':[{'type':_0x48c2('0x6fd'),'name':'selcontract_nya','options':[['Higher',_0x48c2('0x516')],[_0x48c2('0x8c6'),_0x48c2('0x542')]]},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x874'),'options':arrAccount},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6fd'),'name':'market_nya','options':arrPopulatedMarket2},{'type':'input_end_row'},{'type':'field_dropdown','name':_0x48c2('0x86d'),'options':arrStakeAM},{'type':'input_value','name':'stake_nya'},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x8b2'),'options':[[_0x48c2('0x8b3'),'t'],[_0x48c2('0x8c7'),'s'],[_0x48c2('0x8b4'),'m'],['hour(s)','h'],['day(s)','d']]},{'type':_0x48c2('0x768'),'name':_0x48c2('0x86f')},{'type':_0x48c2('0x768'),'name':'barrier_nya'}],'inputsInline':![],'previousStatement':null,'nextStatement':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')][_0x48c2('0x8c4')]=function(_0x3bddaf,_0x1c8ade){var _0x3b152d={'mqimR':_0x48c2('0x8c8'),'IXPRJ':_0x48c2('0x86f'),'VQJej':'stake_nya','TBwEU':'market_nya','BiZKn':function(_0x20776c,_0x2027f5){return _0x20776c==_0x2027f5;},'GVLTh':function(_0x916abc,_0x3e18c7){return _0x916abc+_0x3e18c7;},'eKxup':function(_0x1a39d1,_0x177fd4){return _0x1a39d1+_0x177fd4;},'WTXYd':function(_0x88914d,_0x2f47e0){return _0x88914d+_0x2f47e0;},'idSBk':function(_0x4c320a,_0x2b02bd){return _0x4c320a+_0x2b02bd;},'vhNtx':function(_0x1d43bf,_0x12709b){return _0x1d43bf+_0x12709b;},'bMMnq':function(_0x498a9b,_0x43658a){return _0x498a9b+_0x43658a;},'agOTU':function(_0x1b5bb0,_0x32711d){return _0x1b5bb0+_0x32711d;},'rFtta':function(_0x29fb68,_0x5819d1){return _0x29fb68+_0x5819d1;},'lBQIM':function(_0xe2994f,_0xe15477){return _0xe2994f+_0xe15477;},'jTsxg':_0x48c2('0x872'),'Eezlk':',0,0,0,0,0,0,0,0,0,0,0);','lISay':_0x48c2('0x86d'),'uxjRW':_0x48c2('0x83e'),'oxdqM':_0x48c2('0x6e0'),'AWpQN':_0x48c2('0x8c9'),'GDoHM':'account_nya','Pbjwh':_0x48c2('0x8b2')};var _0x2b0aa1=_0x3b152d['mqimR'][_0x48c2('0xe')]('|'),_0x19f2e9=0x0;while(!![]){switch(_0x2b0aa1[_0x19f2e9++]){case'0':return _0x34b549;case'1':var _0x3a728b=_0x1c8ade[_0x48c2('0x76e')](_0x3bddaf,_0x3b152d[_0x48c2('0x8ca')],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);continue;case'2':var _0x3defa9=_0x1c8ade[_0x48c2('0x76e')](_0x3bddaf,_0x3b152d[_0x48c2('0x8cb')],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);continue;case'3':var _0x1b05dc=_0x3bddaf[_0x48c2('0x6f7')](_0x3b152d[_0x48c2('0x8cc')]);continue;case'4':if(_0x3b152d[_0x48c2('0x8cd')](_0x3defa9[_0x48c2('0x89a')]()[_0x48c2('0x12')],0x0)){_0x3defa9=0x1;}continue;case'5':var _0x34b549=_0x3b152d[_0x48c2('0x8ce')](_0x3b152d[_0x48c2('0x8ce')](_0x3b152d['eKxup'](_0x3b152d[_0x48c2('0x8cf')](_0x3b152d[_0x48c2('0x8d0')](_0x3b152d[_0x48c2('0x8d1')](_0x3b152d[_0x48c2('0x8d2')](_0x3b152d[_0x48c2('0x8d2')](_0x3b152d[_0x48c2('0x8d3')](_0x3b152d['agOTU'](_0x3b152d['agOTU'](_0x3b152d[_0x48c2('0x8d4')](_0x3b152d[_0x48c2('0x8d5')](_0x48c2('0x871')+_0x51c33d,_0x3b152d[_0x48c2('0x8d6')]),_0x33b183),'\x22,'),_0x3defa9),',\x22')+_0x376994,'\x22,'),_0x398816),',')+_0x3a728b,',\x22'),_0x41dfed),'\x22,'),_0x8432a2),_0x3b152d[_0x48c2('0x8d7')]);continue;case'6':;continue;case'7':var _0x376994=_0x3bddaf[_0x48c2('0x6f7')](_0x48c2('0x86b'));continue;case'8':var _0x33b183=_0x3bddaf[_0x48c2('0x6f7')](_0x3b152d[_0x48c2('0x8d8')]);continue;case'9':var _0x398816=_0x3b152d[_0x48c2('0x8cd')](_0x1b05dc,'activemarket')?_0x3b152d[_0x48c2('0x8d9')]:_0x3b152d['BiZKn'](_0x1b05dc,_0x3b152d['oxdqM'])?_0x48c2('0x6e0'):_0x3b152d[_0x48c2('0x8d5')](_0x3b152d[_0x48c2('0x8d5')]('\x22',_0x1b05dc[_0x48c2('0xe')]('|')[0x0]),'\x22');continue;case'10':var _0x8432a2=_0x1c8ade[_0x48c2('0x76e')](_0x3bddaf,_0x3b152d[_0x48c2('0x8da')],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);continue;case'11':var _0x51c33d=_0x3bddaf['getFieldValue'](_0x3b152d[_0x48c2('0x8db')]);continue;case'12':var _0x41dfed=_0x3bddaf[_0x48c2('0x6f7')](_0x3b152d['Pbjwh']);continue;}break;}};Blockly['defineBlocksWithJsonArray']([{'type':_0x48c2('0x8dc'),'message0':'Purchase:\x20%1\x20%2\x20Account:\x20%3\x20%4\x20Market:\x20%5\x20%6\x20Stake\x20%7\x20%8\x20Duration:\x20%9\x20%10\x20Barrier\x20Offset:\x20%11','args0':[{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x86b'),'options':[[_0x48c2('0x8dd'),_0x48c2('0x518')],['Does\x20Not\x20Touch','NOTOUCH']]},{'type':_0x48c2('0x6cb')},{'type':'field_dropdown','name':_0x48c2('0x874'),'options':arrAccount},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x83a'),'options':arrPopulatedMarket2},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6fd'),'name':'stakeAM_nya','options':arrStakeAM},{'type':'input_value','name':_0x48c2('0x86e')},{'type':'field_dropdown','name':_0x48c2('0x8b2'),'options':[['tick(s)','t'],['second(s)','s'],[_0x48c2('0x8b4'),'m'],[_0x48c2('0x8b5'),'h'],[_0x48c2('0x8de'),'d']]},{'type':_0x48c2('0x768'),'name':_0x48c2('0x86f')},{'type':_0x48c2('0x768'),'name':_0x48c2('0x8c9')}],'inputsInline':![],'previousStatement':null,'nextStatement':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')][_0x48c2('0x8dc')]=function(_0x11eaa7,_0x4de3ee){var _0x5ce432={'TMaHE':_0x48c2('0x8df'),'iGlyu':_0x48c2('0x86f'),'JHLVF':function(_0x516e77,_0x18ab6e){return _0x516e77+_0x18ab6e;},'dstLc':function(_0xc80440,_0x284440){return _0xc80440+_0x284440;},'zBIVx':function(_0x4203e2,_0x4c0f5b){return _0x4203e2+_0x4c0f5b;},'fpSKj':'mainPurchase(\x22','ZRPfA':'\x22,\x22','Awkax':_0x48c2('0x8e0'),'hOaVv':'market_nya','FrqPF':_0x48c2('0x86e'),'gTnGx':'seldurationunit_nya','zxovU':_0x48c2('0x8c9'),'vlIOI':function(_0xfa50c9,_0x50ffd8){return _0xfa50c9==_0x50ffd8;},'LrPUz':_0x48c2('0x64e'),'uNSPl':_0x48c2('0x83e'),'aToTE':'mainMarket_continuousindices','YDEQJ':function(_0x21b1c3,_0x182bff){return _0x21b1c3+_0x182bff;},'wYULX':_0x48c2('0x874')};var _0x3122a4=_0x5ce432[_0x48c2('0x8e1')][_0x48c2('0xe')]('|'),_0x42391e=0x0;while(!![]){switch(_0x3122a4[_0x42391e++]){case'0':return _0x20bbb9;case'1':var _0x124432=_0x4de3ee[_0x48c2('0x76e')](_0x11eaa7,_0x5ce432['iGlyu'],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);continue;case'2':var _0x20bbb9=_0x5ce432[_0x48c2('0x8e2')](_0x5ce432[_0x48c2('0x8e2')](_0x5ce432[_0x48c2('0x8e2')](_0x5ce432[_0x48c2('0x8e3')](_0x5ce432[_0x48c2('0x8e4')](_0x5ce432['zBIVx'](_0x5ce432[_0x48c2('0x8e4')](_0x5ce432['zBIVx'](_0x5ce432[_0x48c2('0x8e4')](_0x5ce432['zBIVx'](_0x5ce432['zBIVx'](_0x5ce432['zBIVx'](_0x5ce432[_0x48c2('0x8e4')](_0x5ce432[_0x48c2('0x8e5')]+_0x5a3d7a,_0x5ce432[_0x48c2('0x8e6')]),_0x8031cc),'\x22,'),_0x565041)+',\x22',_0x261090),'\x22,'),_0x3d88a9),','),_0x124432),',\x22'),_0x6c468f),'\x22,'),_0xc76cfd)+_0x5ce432['Awkax'];continue;case'3':var _0x30a1cc=_0x11eaa7['getFieldValue'](_0x5ce432[_0x48c2('0x8e7')]);continue;case'4':var _0x565041=_0x4de3ee['valueToCode'](_0x11eaa7,_0x5ce432[_0x48c2('0x8e8')],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);continue;case'5':var _0x6c468f=_0x11eaa7[_0x48c2('0x6f7')](_0x5ce432[_0x48c2('0x8e9')]);continue;case'6':var _0xc76cfd=_0x4de3ee[_0x48c2('0x76e')](_0x11eaa7,_0x5ce432[_0x48c2('0x8ea')],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);continue;case'7':var _0x8031cc=_0x11eaa7[_0x48c2('0x6f7')](_0x48c2('0x86d'));continue;case'8':var _0x3d88a9=_0x5ce432[_0x48c2('0x8eb')](_0x30a1cc,_0x5ce432[_0x48c2('0x8ec')])?_0x5ce432[_0x48c2('0x8ed')]:_0x30a1cc=='mainMarket_continuousindices'?_0x5ce432[_0x48c2('0x8ee')]:_0x5ce432[_0x48c2('0x8e4')](_0x5ce432[_0x48c2('0x8ef')]('\x22',_0x30a1cc[_0x48c2('0xe')]('|')[0x0]),'\x22');continue;case'9':;continue;case'10':var _0x5a3d7a=_0x11eaa7[_0x48c2('0x6f7')](_0x5ce432['wYULX']);continue;case'11':var _0x261090=_0x11eaa7[_0x48c2('0x6f7')](_0x48c2('0x86b'));continue;case'12':if(_0x5ce432[_0x48c2('0x8eb')](_0x565041[_0x48c2('0x89a')]()['length'],0x0)){_0x565041=0x1;}continue;}break;}};Blockly['defineBlocksWithJsonArray']([{'type':'purchase_endsbetween_endsoutside','message0':'Purchase:\x20%1\x20%2\x20Account:\x20%3\x20%4\x20Market:\x20%5\x20%6\x20Stake\x20%7\x20%8\x20Duration:\x20%9\x20%10\x20High\x20Barrier\x20Offset:\x20%11\x20Low\x20Barrier\x20Offset:\x20%12','args0':[{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x86b'),'options':[['Ends\x20Between',_0x48c2('0x557')],[_0x48c2('0x8f0'),_0x48c2('0x524')]]},{'type':'input_end_row'},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x874'),'options':arrAccount},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6fd'),'name':'market_nya','options':arrPopulatedMarket2},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x86d'),'options':arrStakeAM},{'type':_0x48c2('0x768'),'name':_0x48c2('0x86e')},{'type':_0x48c2('0x6fd'),'name':'seldurationunit_nya','options':[['minute(s)','m'],['hour(s)','h'],[_0x48c2('0x8de'),'d']]},{'type':_0x48c2('0x768'),'name':_0x48c2('0x86f')},{'type':_0x48c2('0x768'),'name':_0x48c2('0x8f1')},{'type':_0x48c2('0x768'),'name':_0x48c2('0x8f2')}],'inputsInline':![],'previousStatement':null,'nextStatement':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')][_0x48c2('0x8f3')]=function(_0x480863,_0x143bd1){var _0x1e3126={'xknRe':_0x48c2('0x8f4'),'eyjpz':_0x48c2('0x83a'),'GGKZl':function(_0x20fa4f,_0x29fea1){return _0x20fa4f+_0x29fea1;},'hpRwM':function(_0x443e12,_0x280469){return _0x443e12+_0x280469;},'xpQyk':function(_0x2c8cd3,_0xc78b6){return _0x2c8cd3+_0xc78b6;},'nXAHC':function(_0x30ea5d,_0x5da884){return _0x30ea5d+_0x5da884;},'YFZld':function(_0x1805bb,_0x39f6b2){return _0x1805bb+_0x39f6b2;},'cMVZi':function(_0x5d4b65,_0x2c893b){return _0x5d4b65+_0x2c893b;},'EKMmP':function(_0x55a6eb,_0x33abce){return _0x55a6eb+_0x33abce;},'hvnKy':_0x48c2('0x871'),'jBifX':_0x48c2('0x872'),'UMEBr':_0x48c2('0x8f5'),'xLXMy':',0,0,0,0,0,0,0,0,0);','yNNId':_0x48c2('0x86f'),'EMxLc':_0x48c2('0x8f2'),'pBCQG':function(_0xa19306,_0x531b84){return _0xa19306==_0x531b84;},'GMiWT':'activemarket','wlDfa':'mainSymbol','WZPds':function(_0x14e3af,_0x458f73){return _0x14e3af==_0x458f73;},'HsgYT':_0x48c2('0x6e0'),'uBkdi':function(_0x36bb85,_0x5ec38c){return _0x36bb85+_0x5ec38c;},'Jxivz':_0x48c2('0x874'),'WcizY':'highbarrier_nya','EKnQN':_0x48c2('0x86d')};var _0x4228ee=_0x1e3126[_0x48c2('0x8f6')][_0x48c2('0xe')]('|'),_0x187333=0x0;while(!![]){switch(_0x4228ee[_0x187333++]){case'0':var _0x4d2dc8=_0x480863[_0x48c2('0x6f7')](_0x1e3126[_0x48c2('0x8f7')]);continue;case'1':var _0x4e5c63=_0x1e3126['GGKZl'](_0x1e3126[_0x48c2('0x8f8')](_0x1e3126[_0x48c2('0x8f9')](_0x1e3126[_0x48c2('0x8fa')](_0x1e3126[_0x48c2('0x8fb')](_0x1e3126[_0x48c2('0x8fb')](_0x1e3126[_0x48c2('0x8fb')](_0x1e3126[_0x48c2('0x8fb')](_0x1e3126[_0x48c2('0x8fb')](_0x1e3126['YFZld'](_0x1e3126[_0x48c2('0x8fc')](_0x1e3126[_0x48c2('0x8fd')](_0x1e3126['hvnKy'],_0x1e6dc5),_0x1e3126[_0x48c2('0x8fe')])+_0x39517d+'\x22,',_0x49c5d3)+',\x22',_0x2442e6),'\x22,'),_0x552a65)+',',_0x31bf0e),',\x22'),_0x95aab4),_0x1e3126[_0x48c2('0x8ff')])+_0x5c817e+',',_0x106c33),_0x1e3126[_0x48c2('0x900')]);continue;case'2':var _0x31bf0e=_0x143bd1['valueToCode'](_0x480863,_0x1e3126['yNNId'],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);continue;case'3':var _0x106c33=_0x143bd1[_0x48c2('0x76e')](_0x480863,_0x1e3126[_0x48c2('0x901')],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);continue;case'4':var _0x552a65=_0x1e3126[_0x48c2('0x902')](_0x4d2dc8,_0x1e3126[_0x48c2('0x903')])?_0x1e3126[_0x48c2('0x904')]:_0x1e3126[_0x48c2('0x905')](_0x4d2dc8,_0x1e3126[_0x48c2('0x906')])?_0x1e3126[_0x48c2('0x906')]:_0x1e3126[_0x48c2('0x907')]('\x22'+_0x4d2dc8[_0x48c2('0xe')]('|')[0x0],'\x22');continue;case'5':;continue;case'6':var _0x2442e6=_0x480863[_0x48c2('0x6f7')](_0x48c2('0x86b'));continue;case'7':var _0x95aab4=_0x480863[_0x48c2('0x6f7')](_0x48c2('0x8b2'));continue;case'8':var _0x49c5d3=_0x143bd1[_0x48c2('0x76e')](_0x480863,'stake_nya',javascript[_0x48c2('0x770')][_0x48c2('0x771')]);continue;case'9':return _0x4e5c63;case'10':var _0x1e6dc5=_0x480863['getFieldValue'](_0x1e3126['Jxivz']);continue;case'11':var _0x5c817e=_0x143bd1[_0x48c2('0x76e')](_0x480863,_0x1e3126[_0x48c2('0x908')],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);continue;case'12':if(_0x49c5d3[_0x48c2('0x89a')]()[_0x48c2('0x12')]==0x0){_0x49c5d3=0x1;}continue;case'13':var _0x39517d=_0x480863[_0x48c2('0x6f7')](_0x1e3126[_0x48c2('0x909')]);continue;}break;}};Blockly['defineBlocksWithJsonArray']([{'type':'purchase_staysbetween_goesoutside','message0':'Purchase:\x20%1\x20%2\x20Account:\x20%3\x20%4\x20Market:\x20%5\x20%6\x20Stake\x20%7\x20%8\x20Duration:\x20%9\x20%10\x20High\x20Barrier\x20Offset:\x20%11\x20Low\x20Barrier\x20Offset:\x20%12','args0':[{'type':'field_dropdown','name':'selcontract_nya','options':[[_0x48c2('0x90a'),_0x48c2('0x525')],[_0x48c2('0x90b'),_0x48c2('0x559')]]},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x874'),'options':arrAccount},{'type':_0x48c2('0x6cb')},{'type':'field_dropdown','name':_0x48c2('0x83a'),'options':arrPopulatedMarket2},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6fd'),'name':'stakeAM_nya','options':arrStakeAM},{'type':_0x48c2('0x768'),'name':_0x48c2('0x86e')},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x8b2'),'options':[[_0x48c2('0x8b4'),'m'],['hour(s)','h'],[_0x48c2('0x8de'),'d']]},{'type':'input_value','name':_0x48c2('0x86f')},{'type':'input_value','name':'highbarrier_nya'},{'type':'input_value','name':_0x48c2('0x8f2')}],'inputsInline':![],'previousStatement':null,'nextStatement':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')][_0x48c2('0x90c')]=function(_0x34a51e,_0x57b57c){var _0x6ea680={'Ukduk':'stake_nya','vMvEq':_0x48c2('0x86d'),'ClVTP':_0x48c2('0x8f1'),'ZopWu':function(_0x44ad49,_0x2f2706){return _0x44ad49+_0x2f2706;},'WkXtr':function(_0x561a8e,_0x3b460b){return _0x561a8e+_0x3b460b;},'MaVIa':function(_0x515067,_0x3f96fb){return _0x515067+_0x3f96fb;},'nQozk':function(_0x3103e3,_0x18f6db){return _0x3103e3+_0x18f6db;},'nBnTl':function(_0x8d5ea9,_0x5b83da){return _0x8d5ea9+_0x5b83da;},'JNETD':function(_0x2df78b,_0x2a01a4){return _0x2df78b+_0x2a01a4;},'bCcqW':function(_0x1c6681,_0x3e8b6e){return _0x1c6681+_0x3e8b6e;},'nsdNx':function(_0xabf906,_0x1678f9){return _0xabf906+_0x1678f9;},'TWUUZ':_0x48c2('0x872'),'JGQed':_0x48c2('0x8f5'),'JdHOj':function(_0x2e1ab3,_0x1693b6){return _0x2e1ab3==_0x1693b6;},'QOkBz':_0x48c2('0x8b2'),'MXrPU':_0x48c2('0x86b'),'zzMPQ':'lowbarrier_nya','kOIkD':_0x48c2('0x83a'),'KiFej':'mainSymbol','RQIHF':'mainMarket_continuousindices','MYrIQ':function(_0x62479c,_0x41f1ff){return _0x62479c+_0x41f1ff;}};var _0x479245=_0x48c2('0x90d')[_0x48c2('0xe')]('|'),_0x5484b5=0x0;while(!![]){switch(_0x479245[_0x5484b5++]){case'0':return _0x2f3ae4;case'1':var _0x5c88d9=_0x57b57c['valueToCode'](_0x34a51e,_0x6ea680['Ukduk'],javascript[_0x48c2('0x770')]['ATOMIC']);continue;case'2':var _0x17b03a=_0x34a51e['getFieldValue'](_0x6ea680[_0x48c2('0x90e')]);continue;case'3':;continue;case'4':var _0x4eee77=_0x57b57c[_0x48c2('0x76e')](_0x34a51e,_0x48c2('0x86f'),javascript['Order'][_0x48c2('0x771')]);continue;case'5':var _0x3c6cc5=_0x57b57c['valueToCode'](_0x34a51e,_0x6ea680[_0x48c2('0x90f')],javascript[_0x48c2('0x770')]['ATOMIC']);continue;case'6':var _0x2f3ae4=_0x6ea680['ZopWu'](_0x6ea680['ZopWu'](_0x6ea680[_0x48c2('0x910')](_0x6ea680[_0x48c2('0x911')](_0x6ea680[_0x48c2('0x912')](_0x6ea680[_0x48c2('0x913')](_0x6ea680[_0x48c2('0x913')](_0x6ea680[_0x48c2('0x914')](_0x6ea680[_0x48c2('0x914')](_0x6ea680[_0x48c2('0x914')](_0x6ea680[_0x48c2('0x915')](_0x6ea680[_0x48c2('0x916')](_0x6ea680[_0x48c2('0x916')](_0x6ea680[_0x48c2('0x917')](_0x6ea680[_0x48c2('0x917')](_0x6ea680[_0x48c2('0x917')](_0x48c2('0x871'),_0x43fe90),_0x6ea680[_0x48c2('0x918')]),_0x17b03a),'\x22,'),_0x5c88d9),',\x22'),_0x2f6eec),'\x22,'),_0xc4dfed),','),_0x4eee77)+',\x22',_0x57eccc),_0x6ea680[_0x48c2('0x919')]),_0x3c6cc5),',')+_0x7af346,_0x48c2('0x91a'));continue;case'7':if(_0x6ea680[_0x48c2('0x91b')](_0x5c88d9[_0x48c2('0x89a')]()[_0x48c2('0x12')],0x0)){_0x5c88d9=0x1;}continue;case'8':var _0x57eccc=_0x34a51e[_0x48c2('0x6f7')](_0x6ea680['QOkBz']);continue;case'9':var _0x2f6eec=_0x34a51e[_0x48c2('0x6f7')](_0x6ea680['MXrPU']);continue;case'10':var _0x7af346=_0x57b57c[_0x48c2('0x76e')](_0x34a51e,_0x6ea680[_0x48c2('0x91c')],javascript[_0x48c2('0x770')]['ATOMIC']);continue;case'11':var _0x2f5e54=_0x34a51e['getFieldValue'](_0x6ea680[_0x48c2('0x91d')]);continue;case'12':var _0xc4dfed=_0x6ea680['JdHOj'](_0x2f5e54,_0x48c2('0x64e'))?_0x6ea680['KiFej']:_0x2f5e54==_0x6ea680[_0x48c2('0x91e')]?_0x6ea680[_0x48c2('0x91e')]:_0x6ea680[_0x48c2('0x917')](_0x6ea680['MYrIQ']('\x22',_0x2f5e54[_0x48c2('0xe')]('|')[0x0]),'\x22');continue;case'13':var _0x43fe90=_0x34a51e[_0x48c2('0x6f7')](_0x48c2('0x874'));continue;}break;}};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x91f'),'message0':_0x48c2('0x920'),'args0':[{'type':'field_dropdown','name':_0x48c2('0x86b'),'options':[[_0x48c2('0x921'),_0x48c2('0x526')],[_0x48c2('0x922'),_0x48c2('0x923')]]},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6fd'),'name':'account_nya','options':arrAccount},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6fd'),'name':'market_nya','options':arrPopulatedMarket2},{'type':_0x48c2('0x6cb')},{'type':'field_dropdown','name':_0x48c2('0x86d'),'options':arrStakeAM},{'type':_0x48c2('0x768'),'name':_0x48c2('0x86e')},{'type':_0x48c2('0x768'),'name':_0x48c2('0x86f')}],'inputsInline':![],'previousStatement':null,'nextStatement':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')]['forBlock'][_0x48c2('0x91f')]=function(_0x4c4705,_0x562ca6){var _0x4446bd={'WPVYo':_0x48c2('0x924'),'ETvkD':_0x48c2('0x86d'),'UPgwd':function(_0x47734c,_0x2c7543){return _0x47734c+_0x2c7543;},'ekbsw':function(_0xf69129,_0x231aff){return _0xf69129+_0x231aff;},'sCKFh':function(_0x57d153,_0x4f1d69){return _0x57d153+_0x4f1d69;},'NYPgt':function(_0x21fb50,_0x1cd4f9){return _0x21fb50+_0x1cd4f9;},'fDgUk':function(_0x2f5049,_0xdc4f4e){return _0x2f5049+_0xdc4f4e;},'zqKua':function(_0x3bf4f2,_0x2956e7){return _0x3bf4f2+_0x2956e7;},'sclxB':function(_0x2c5214,_0x4378a8){return _0x2c5214+_0x4378a8;},'zcAyo':function(_0x3f2681,_0x1271eb){return _0x3f2681+_0x1271eb;},'gToJI':_0x48c2('0x871'),'FMaNm':_0x48c2('0x872'),'gBRUf':_0x48c2('0x925'),'AlHiL':_0x48c2('0x874'),'lBTfd':_0x48c2('0x83a'),'BQoLP':function(_0x5ac3d4,_0x85ffcb){return _0x5ac3d4==_0x85ffcb;},'iOlIT':'selcontract_nya','vVejB':function(_0x21619e,_0x1a4a3b){return _0x21619e==_0x1a4a3b;},'vFcdp':_0x48c2('0x64e'),'GIOnT':'mainSymbol','eTlXG':_0x48c2('0x6e0'),'sLboE':function(_0x1202b6,_0x5b4b94){return _0x1202b6+_0x5b4b94;},'WGOXn':function(_0x1825fa,_0x154ab1){return _0x1825fa+_0x154ab1;},'rdssP':'inpduration_nya','ZHRjR':'stake_nya'};var _0x52e4fb=_0x4446bd['WPVYo']['split']('|'),_0x5b25ad=0x0;while(!![]){switch(_0x52e4fb[_0x5b25ad++]){case'0':return _0x20ed1a;case'1':;continue;case'2':var _0x58df3f=_0x4c4705[_0x48c2('0x6f7')](_0x4446bd[_0x48c2('0x926')]);continue;case'3':var _0x20ed1a=_0x4446bd[_0x48c2('0x927')](_0x4446bd[_0x48c2('0x928')](_0x4446bd[_0x48c2('0x929')](_0x4446bd['sCKFh'](_0x4446bd[_0x48c2('0x929')](_0x4446bd[_0x48c2('0x92a')](_0x4446bd[_0x48c2('0x92b')](_0x4446bd[_0x48c2('0x92c')](_0x4446bd['zqKua'](_0x4446bd[_0x48c2('0x92d')](_0x4446bd[_0x48c2('0x92e')](_0x4446bd[_0x48c2('0x92f')],_0x7f93ba),_0x4446bd['FMaNm']),_0x58df3f)+'\x22,',_0x1f8ec1),',\x22'),_0x1a0726),'\x22,'),_0x5d0895),','),_0x315e01),_0x4446bd[_0x48c2('0x930')]);continue;case'4':var _0x7f93ba=_0x4c4705[_0x48c2('0x6f7')](_0x4446bd[_0x48c2('0x931')]);continue;case'5':var _0x22c514=_0x4c4705[_0x48c2('0x6f7')](_0x4446bd[_0x48c2('0x932')]);continue;case'6':if(_0x4446bd['BQoLP'](_0x1f8ec1[_0x48c2('0x89a')]()[_0x48c2('0x12')],0x0)){_0x1f8ec1=0x1;}continue;case'7':var _0x1a0726=_0x4c4705['getFieldValue'](_0x4446bd[_0x48c2('0x933')]);continue;case'8':var _0x5d0895=_0x4446bd[_0x48c2('0x934')](_0x22c514,_0x4446bd[_0x48c2('0x935')])?_0x4446bd['GIOnT']:_0x4446bd[_0x48c2('0x934')](_0x22c514,_0x4446bd[_0x48c2('0x936')])?_0x4446bd['eTlXG']:_0x4446bd[_0x48c2('0x937')](_0x4446bd[_0x48c2('0x938')]('\x22',_0x22c514['split']('|')[0x0]),'\x22');continue;case'9':var _0x315e01=_0x562ca6[_0x48c2('0x76e')](_0x4c4705,_0x4446bd[_0x48c2('0x939')],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);continue;case'10':var _0x1f8ec1=_0x562ca6[_0x48c2('0x76e')](_0x4c4705,_0x4446bd[_0x48c2('0x93a')],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);continue;}break;}};Blockly[_0x48c2('0x6c8')]([{'type':'purchase_highclose_closelow_highlow','message0':_0x48c2('0x93b'),'args0':[{'type':_0x48c2('0x6fd'),'name':'selcontract_nya','options':[['High-Close',_0x48c2('0x52a')],[_0x48c2('0x93c'),'LBFLOATCALL'],[_0x48c2('0x93d'),'LBHIGHLOW']]},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x874'),'options':arrAccount},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x83a'),'options':arrPopulatedMarket2},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x86d'),'options':arrStakeAM},{'type':_0x48c2('0x768'),'name':'stake_nya'},{'type':_0x48c2('0x768'),'name':_0x48c2('0x86f')},{'type':_0x48c2('0x768'),'name':'multiplier_nya'}],'inputsInline':![],'previousStatement':null,'nextStatement':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')]['forBlock'][_0x48c2('0x93e')]=function(_0x25f735,_0x36b656){var _0x22c385={'vBzMz':_0x48c2('0x86b'),'RWuob':function(_0x6fa957,_0x2f9d6b){return _0x6fa957==_0x2f9d6b;},'VvLKT':_0x48c2('0x64e'),'ZTNED':_0x48c2('0x83e'),'DxyGG':function(_0xeba130,_0x5ce3f2){return _0xeba130==_0x5ce3f2;},'IVBNO':'mainMarket_continuousindices','lUclT':_0x48c2('0x874'),'PFfTf':'stakeAM_nya','QnUmn':_0x48c2('0x86e'),'GYLky':function(_0x47ee07,_0x55959e){return _0x47ee07==_0x55959e;},'yqmXp':_0x48c2('0x86f'),'ZKXKs':'multiplier_nya','VaLuC':function(_0x2947c5,_0x330883){return _0x2947c5+_0x330883;},'BpvPe':function(_0x3d4390,_0x597fca){return _0x3d4390+_0x597fca;},'tbqNJ':function(_0x34e8c8,_0xbc40f0){return _0x34e8c8+_0xbc40f0;},'kLVme':function(_0x57a1ae,_0x254212){return _0x57a1ae+_0x254212;},'yUUIJ':function(_0x4802c1,_0xcc85b6){return _0x4802c1+_0xcc85b6;},'PcyQY':function(_0x55373f,_0x557768){return _0x55373f+_0x557768;},'vjQxV':function(_0x4d5b24,_0x54e551){return _0x4d5b24+_0x54e551;},'bxeqR':'mainPurchase(\x22','xkyaw':_0x48c2('0x872'),'BLgWB':_0x48c2('0x93f'),'uhhti':_0x48c2('0x940')};var _0x2b0e66=_0x25f735[_0x48c2('0x6f7')](_0x22c385['vBzMz']);var _0x521217=_0x25f735['getFieldValue'](_0x48c2('0x83a'));var _0x1e5611=_0x22c385[_0x48c2('0x941')](_0x521217,_0x22c385[_0x48c2('0x942')])?_0x22c385[_0x48c2('0x943')]:_0x22c385['DxyGG'](_0x521217,'mainMarket_continuousindices')?_0x22c385['IVBNO']:'\x22'+_0x521217[_0x48c2('0xe')]('|')[0x0]+'\x22';var _0x9213a1=_0x25f735['getFieldValue'](_0x22c385[_0x48c2('0x944')]);var _0x48bd4b=_0x25f735[_0x48c2('0x6f7')](_0x22c385[_0x48c2('0x945')]);var _0x3360b5=_0x36b656['valueToCode'](_0x25f735,_0x22c385[_0x48c2('0x946')],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);if(_0x22c385[_0x48c2('0x947')](_0x3360b5[_0x48c2('0x89a')]()[_0x48c2('0x12')],0x0)){_0x3360b5=0x1;};var _0x37c266=_0x36b656['valueToCode'](_0x25f735,_0x22c385[_0x48c2('0x948')],javascript['Order'][_0x48c2('0x771')]);var _0x1def26=_0x36b656[_0x48c2('0x76e')](_0x25f735,_0x22c385[_0x48c2('0x949')],javascript[_0x48c2('0x770')]['ATOMIC']);var _0x2aaed1=_0x22c385['VaLuC'](_0x22c385['VaLuC'](_0x22c385[_0x48c2('0x94a')](_0x22c385[_0x48c2('0x94a')](_0x22c385[_0x48c2('0x94b')](_0x22c385[_0x48c2('0x94c')](_0x22c385[_0x48c2('0x94d')](_0x22c385['PcyQY'](_0x22c385['PcyQY'](_0x22c385[_0x48c2('0x94e')](_0x22c385[_0x48c2('0x94e')](_0x22c385[_0x48c2('0x94f')]+_0x9213a1,_0x22c385[_0x48c2('0x950')]),_0x48bd4b),'\x22,'),_0x3360b5),',\x22'),_0x2b0e66),'\x22,'),_0x1e5611),','),_0x37c266)+_0x22c385[_0x48c2('0x951')]+_0x1def26,_0x22c385[_0x48c2('0x952')]);return _0x2aaed1;};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x953'),'message0':_0x48c2('0x8ae'),'args0':[{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x86b'),'options':[[_0x48c2('0x954'),_0x48c2('0x528')],[_0x48c2('0x955'),_0x48c2('0x529')]]},{'type':'input_end_row'},{'type':'field_dropdown','name':_0x48c2('0x874'),'options':arrAccount},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x83a'),'options':arrPopulatedMarket2},{'type':'input_end_row'},{'type':'field_dropdown','name':_0x48c2('0x86d'),'options':arrStakeAM},{'type':_0x48c2('0x768'),'name':'stake_nya'},{'type':'field_dropdown','name':_0x48c2('0x8b2'),'options':[['tick(s)','t'],[_0x48c2('0x8c7'),'s'],['minute(s)','m'],['hour(s)','h']]},{'type':_0x48c2('0x768'),'name':_0x48c2('0x86f')}],'inputsInline':![],'previousStatement':null,'nextStatement':null,'colour':'#3e3e3e','tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')]['forBlock'][_0x48c2('0x953')]=function(_0x4695be,_0x5d928b){var _0x1a3919={'kfbOY':_0x48c2('0x83a'),'ICFkY':function(_0x33f7d7,_0x763978){return _0x33f7d7==_0x763978;},'xWzZr':'activemarket','pqLmo':'mainSymbol','BUCMQ':function(_0x470a4c,_0x2ea116){return _0x470a4c==_0x2ea116;},'tJkLE':function(_0x2fd0f9,_0x2b1f5f){return _0x2fd0f9+_0x2b1f5f;},'mgkxY':_0x48c2('0x874'),'BhqHi':_0x48c2('0x86e'),'OFWjG':function(_0x4ccc86,_0x14da65){return _0x4ccc86==_0x14da65;},'MuKlR':_0x48c2('0x8b2'),'JQqiq':function(_0x11f6bd,_0x53ca52){return _0x11f6bd+_0x53ca52;},'khRLO':function(_0x2c8fcf,_0xa439e0){return _0x2c8fcf+_0xa439e0;},'AYQXU':function(_0xff90de,_0x2597dd){return _0xff90de+_0x2597dd;},'CSgam':'mainPurchase(\x22','QLULl':'\x22,\x22','djbYl':_0x48c2('0x956')};var _0x2e5c23=_0x4695be[_0x48c2('0x6f7')]('selcontract_nya');var _0x39c91a=_0x4695be[_0x48c2('0x6f7')](_0x1a3919[_0x48c2('0x957')]);var _0x3eaaaf=_0x1a3919[_0x48c2('0x958')](_0x39c91a,_0x1a3919[_0x48c2('0x959')])?_0x1a3919[_0x48c2('0x95a')]:_0x1a3919[_0x48c2('0x95b')](_0x39c91a,'mainMarket_continuousindices')?_0x48c2('0x6e0'):_0x1a3919[_0x48c2('0x95c')](_0x1a3919[_0x48c2('0x95c')]('\x22',_0x39c91a['split']('|')[0x0]),'\x22');var _0x305586=_0x4695be[_0x48c2('0x6f7')](_0x1a3919['mgkxY']);var _0x25a68e=_0x4695be[_0x48c2('0x6f7')](_0x48c2('0x86d'));var _0x11d264=_0x5d928b['valueToCode'](_0x4695be,_0x1a3919['BhqHi'],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);if(_0x1a3919[_0x48c2('0x95d')](_0x11d264[_0x48c2('0x89a')]()[_0x48c2('0x12')],0x0)){_0x11d264=0x1;};var _0x1d7fab=_0x4695be[_0x48c2('0x6f7')](_0x1a3919[_0x48c2('0x95e')]);var _0x5d1689=_0x5d928b[_0x48c2('0x76e')](_0x4695be,_0x48c2('0x86f'),javascript[_0x48c2('0x770')][_0x48c2('0x771')]);var _0x4898c2=_0x1a3919['tJkLE'](_0x1a3919[_0x48c2('0x95f')](_0x1a3919[_0x48c2('0x95f')](_0x1a3919[_0x48c2('0x95f')](_0x1a3919['JQqiq'](_0x1a3919['JQqiq'](_0x1a3919[_0x48c2('0x95f')](_0x1a3919[_0x48c2('0x960')](_0x1a3919[_0x48c2('0x960')](_0x1a3919[_0x48c2('0x961')](_0x1a3919[_0x48c2('0x961')](_0x1a3919[_0x48c2('0x961')](_0x1a3919['CSgam']+_0x305586,_0x1a3919[_0x48c2('0x962')]),_0x25a68e),'\x22,'),_0x11d264),',\x22'),_0x2e5c23),'\x22,'),_0x3eaaaf),','),_0x5d1689),',\x22'),_0x1d7fab)+_0x1a3919['djbYl'];return _0x4898c2;};Blockly[_0x48c2('0x6c8')]([{'type':'purchase_hightick_lowtick','message0':_0x48c2('0x963'),'args0':[{'type':'field_dropdown','name':_0x48c2('0x86b'),'options':[[_0x48c2('0x964'),_0x48c2('0x56d')],['Low\x20Tick',_0x48c2('0x56e')]]},{'type':'input_end_row'},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x874'),'options':arrAccount},{'type':_0x48c2('0x6cb')},{'type':'field_dropdown','name':_0x48c2('0x83a'),'options':arrPopulatedMarket2},{'type':_0x48c2('0x6cb')},{'type':'field_dropdown','name':_0x48c2('0x86d'),'options':arrStakeAM},{'type':'input_value','name':_0x48c2('0x86e')},{'type':'input_end_row'},{'type':_0x48c2('0x768'),'name':_0x48c2('0x965')}],'inputsInline':![],'previousStatement':null,'nextStatement':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')]['forBlock'][_0x48c2('0x966')]=function(_0x26db4d,_0x19d04f){var _0x46b2b2={'bErPO':_0x48c2('0x86b'),'IdUtp':_0x48c2('0x83a'),'oxcqA':function(_0xa09b2f,_0x4239b2){return _0xa09b2f==_0x4239b2;},'YiMOl':_0x48c2('0x64e'),'wsmEJ':function(_0x460812,_0x45cb19){return _0x460812==_0x45cb19;},'DIOIR':_0x48c2('0x6e0'),'vqxMW':function(_0xd26c62,_0x532d73){return _0xd26c62+_0x532d73;},'iEslE':_0x48c2('0x874'),'MUQWD':_0x48c2('0x86e'),'mbjBf':function(_0x163b7c,_0xe080e8){return _0x163b7c==_0xe080e8;},'EkAPW':_0x48c2('0x965'),'ORGhJ':function(_0x5de9e2,_0x3b457c){return _0x5de9e2+_0x3b457c;},'iuaKA':function(_0x52c657,_0x3623d8){return _0x52c657+_0x3623d8;},'AYZpu':function(_0x147578,_0x5f51e3){return _0x147578+_0x5f51e3;},'FVIbA':function(_0x3932e5,_0x13e8b2){return _0x3932e5+_0x13e8b2;},'bDlYy':_0x48c2('0x871'),'jsdlR':_0x48c2('0x872'),'KaceQ':',5,\x22t\x22,0,0,0,0,0,0,0,','Fvzje':_0x48c2('0x967')};var _0x18dcf3=_0x26db4d[_0x48c2('0x6f7')](_0x46b2b2[_0x48c2('0x968')]);var _0x549598=_0x26db4d[_0x48c2('0x6f7')](_0x46b2b2['IdUtp']);var _0x2e9e21=_0x46b2b2['oxcqA'](_0x549598,_0x46b2b2[_0x48c2('0x969')])?_0x48c2('0x83e'):_0x46b2b2[_0x48c2('0x96a')](_0x549598,_0x48c2('0x6e0'))?_0x46b2b2[_0x48c2('0x96b')]:_0x46b2b2[_0x48c2('0x96c')]('\x22'+_0x549598[_0x48c2('0xe')]('|')[0x0],'\x22');var _0x16d1c9=_0x26db4d[_0x48c2('0x6f7')](_0x46b2b2[_0x48c2('0x96d')]);var _0x53d6a1=_0x26db4d['getFieldValue'](_0x48c2('0x86d'));var _0xc333ab=_0x19d04f[_0x48c2('0x76e')](_0x26db4d,_0x46b2b2[_0x48c2('0x96e')],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);if(_0x46b2b2[_0x48c2('0x96f')](_0xc333ab[_0x48c2('0x89a')]()['length'],0x0)){_0xc333ab=0x1;};var _0xdc8e8a=_0x19d04f[_0x48c2('0x76e')](_0x26db4d,_0x46b2b2['EkAPW'],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);var _0x28a5e3=_0x46b2b2[_0x48c2('0x96c')](_0x46b2b2[_0x48c2('0x970')](_0x46b2b2[_0x48c2('0x970')](_0x46b2b2[_0x48c2('0x971')](_0x46b2b2[_0x48c2('0x971')](_0x46b2b2[_0x48c2('0x971')](_0x46b2b2[_0x48c2('0x972')](_0x46b2b2[_0x48c2('0x972')](_0x46b2b2[_0x48c2('0x972')](_0x46b2b2[_0x48c2('0x973')](_0x46b2b2[_0x48c2('0x974')],_0x16d1c9)+_0x46b2b2[_0x48c2('0x975')],_0x53d6a1)+'\x22,',_0xc333ab),',\x22'),_0x18dcf3),'\x22,'),_0x2e9e21),_0x46b2b2['KaceQ']),_0xdc8e8a),_0x46b2b2[_0x48c2('0x976')]);return _0x28a5e3;};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x977'),'message0':_0x48c2('0x978'),'args0':[{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x86b'),'options':[[_0x48c2('0x979'),'RUNHIGH'],[_0x48c2('0x97a'),_0x48c2('0x97b')]]},{'type':'input_end_row'},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x874'),'options':arrAccount},{'type':_0x48c2('0x6cb')},{'type':'field_dropdown','name':_0x48c2('0x83a'),'options':arrPopulatedMarket2},{'type':_0x48c2('0x6cb')},{'type':'field_dropdown','name':_0x48c2('0x86d'),'options':arrStakeAM},{'type':'input_value','name':_0x48c2('0x86e')},{'type':_0x48c2('0x768'),'name':_0x48c2('0x86f')}],'inputsInline':![],'previousStatement':null,'nextStatement':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript['javascriptGenerator'][_0x48c2('0x6cf')]['purchase_onlyups_onlydowns']=function(_0xa43eb1,_0x5ccf6c){var _0x1595b7={'yPXaY':_0x48c2('0x97c'),'OOXUY':'stakeAM_nya','hchNR':function(_0x240fe6,_0x1dd0ad){return _0x240fe6==_0x1dd0ad;},'PZIop':'activemarket','cicpM':_0x48c2('0x6e0'),'eGJbq':function(_0x14156c,_0x34c447){return _0x14156c+_0x34c447;},'rGpVB':_0x48c2('0x83a'),'GFamJ':_0x48c2('0x874'),'XiRvh':_0x48c2('0x86f'),'WgHIJ':function(_0x3963e3,_0x329cfe){return _0x3963e3+_0x329cfe;},'OnuIW':function(_0x18e39e,_0x3f8ae3){return _0x18e39e+_0x3f8ae3;},'TViTB':_0x48c2('0x871'),'HCuQs':_0x48c2('0x872'),'pNMdg':',\x22t\x22,0,0,0,0,0,0,0,0,0,0,0,0);','vRhwA':'selcontract_nya','DYrDE':_0x48c2('0x86e')};var _0x26c4ae=_0x1595b7[_0x48c2('0x97d')][_0x48c2('0xe')]('|'),_0x41ce90=0x0;while(!![]){switch(_0x26c4ae[_0x41ce90++]){case'0':var _0x1821ed=_0xa43eb1['getFieldValue'](_0x1595b7[_0x48c2('0x97e')]);continue;case'1':var _0x36f9c5=_0x1595b7[_0x48c2('0x97f')](_0x23a6dd,_0x1595b7[_0x48c2('0x980')])?_0x48c2('0x83e'):_0x23a6dd==_0x1595b7[_0x48c2('0x981')]?_0x1595b7['cicpM']:_0x1595b7[_0x48c2('0x982')]('\x22',_0x23a6dd[_0x48c2('0xe')]('|')[0x0])+'\x22';continue;case'2':var _0x23a6dd=_0xa43eb1['getFieldValue'](_0x1595b7[_0x48c2('0x983')]);continue;case'3':var _0x286abe=_0xa43eb1[_0x48c2('0x6f7')](_0x1595b7[_0x48c2('0x984')]);continue;case'4':var _0x6fd3ec=_0x5ccf6c['valueToCode'](_0xa43eb1,_0x1595b7[_0x48c2('0x985')],javascript['Order'][_0x48c2('0x771')]);continue;case'5':var _0x1fc005=_0x1595b7[_0x48c2('0x982')](_0x1595b7[_0x48c2('0x982')](_0x1595b7['eGJbq'](_0x1595b7[_0x48c2('0x986')](_0x1595b7[_0x48c2('0x986')](_0x1595b7[_0x48c2('0x987')](_0x1595b7[_0x48c2('0x988')]+_0x286abe+_0x1595b7[_0x48c2('0x989')],_0x1821ed)+'\x22,',_0x41350d),',\x22')+_0x4013a3,'\x22,')+_0x36f9c5,','),_0x6fd3ec)+_0x1595b7[_0x48c2('0x98a')];continue;case'6':var _0x4013a3=_0xa43eb1[_0x48c2('0x6f7')](_0x1595b7[_0x48c2('0x98b')]);continue;case'7':return _0x1fc005;case'8':;continue;case'9':if(_0x1595b7['hchNR'](_0x41350d['toString']()['length'],0x0)){_0x41350d=0x1;}continue;case'10':var _0x41350d=_0x5ccf6c[_0x48c2('0x76e')](_0xa43eb1,_0x1595b7[_0x48c2('0x98c')],javascript['Order'][_0x48c2('0x771')]);continue;}break;}};Blockly['defineBlocksWithJsonArray']([{'type':_0x48c2('0x98d'),'message0':_0x48c2('0x98e'),'args0':[{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x86b'),'options':[['Accumulator\x20Up',_0x48c2('0x574')]]},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x874'),'options':arrAccount},{'type':_0x48c2('0x6cb')},{'type':'field_dropdown','name':'market_nya','options':arrPopulatedMarket2},{'type':_0x48c2('0x6cb')},{'type':'field_dropdown','name':_0x48c2('0x86d'),'options':arrStakeAM},{'type':'input_value','name':_0x48c2('0x86e')},{'type':_0x48c2('0x768'),'name':'selaccumulate_nya'},{'type':_0x48c2('0x768'),'name':_0x48c2('0x98f')}],'inputsInline':![],'previousStatement':null,'nextStatement':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript['javascriptGenerator'][_0x48c2('0x6cf')]['purchase_accumulatorup']=function(_0x36b9ab,_0x4b962f){var _0x32769b={'tOPIY':'market_nya','UgHSu':_0x48c2('0x64e'),'Zsjka':'mainSymbol','PoiCa':function(_0x38bb3f,_0x540f3c){return _0x38bb3f==_0x540f3c;},'wPGRJ':_0x48c2('0x6e0'),'uNOhv':_0x48c2('0x86d'),'VQjnm':_0x48c2('0x86e'),'jrdCB':'selaccumulate_nya','JTzhk':'limittp_nya','RMHLY':function(_0x3e4e65,_0x48be1b){return _0x3e4e65+_0x48be1b;},'kjRRC':function(_0x4dd0bd,_0x2e34f9){return _0x4dd0bd+_0x2e34f9;},'ReJRN':function(_0x5438cd,_0x4488ae){return _0x5438cd+_0x4488ae;},'Iubrx':function(_0x251ea7,_0x465e34){return _0x251ea7+_0x465e34;},'gFvze':function(_0x484ea5,_0x143b9e){return _0x484ea5+_0x143b9e;},'Chupy':function(_0x49f31b,_0x498c3c){return _0x49f31b+_0x498c3c;},'HrlUW':function(_0xf51607,_0x48b5e0){return _0xf51607+_0x48b5e0;},'QOEKE':function(_0x306440,_0x38c9a9){return _0x306440+_0x38c9a9;},'IqTOr':function(_0x3f655c,_0x3d0e8d){return _0x3f655c+_0x3d0e8d;},'iYiav':function(_0x19a6fc,_0x172d4a){return _0x19a6fc+_0x172d4a;},'YqKkg':_0x48c2('0x871'),'QLKDe':'\x22,\x22','rDWzz':',0,','kADPr':',0);'};var _0x2d6051=_0x36b9ab[_0x48c2('0x6f7')](_0x48c2('0x86b'));var _0x5ba6de=_0x36b9ab[_0x48c2('0x6f7')](_0x32769b[_0x48c2('0x990')]);var _0x1042b4=_0x5ba6de==_0x32769b[_0x48c2('0x991')]?_0x32769b['Zsjka']:_0x32769b[_0x48c2('0x992')](_0x5ba6de,_0x32769b[_0x48c2('0x993')])?_0x48c2('0x6e0'):'\x22'+_0x5ba6de[_0x48c2('0xe')]('|')[0x0]+'\x22';var _0x7c628d=_0x36b9ab[_0x48c2('0x6f7')](_0x48c2('0x874'));var _0x5cb742=_0x36b9ab[_0x48c2('0x6f7')](_0x32769b[_0x48c2('0x994')]);var _0x3673a0=_0x4b962f['valueToCode'](_0x36b9ab,_0x32769b[_0x48c2('0x995')],javascript['Order'][_0x48c2('0x771')]);if(_0x32769b[_0x48c2('0x992')](_0x3673a0[_0x48c2('0x89a')]()[_0x48c2('0x12')],0x0)){_0x3673a0=0x1;};var _0x3d6500=_0x4b962f['valueToCode'](_0x36b9ab,_0x32769b[_0x48c2('0x996')],javascript[_0x48c2('0x770')]['ATOMIC']);var _0x4560f3=_0x4b962f[_0x48c2('0x76e')](_0x36b9ab,_0x32769b['JTzhk'],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);var _0x43c165=_0x32769b[_0x48c2('0x997')](_0x32769b['kjRRC'](_0x32769b['ReJRN'](_0x32769b['Iubrx'](_0x32769b['gFvze'](_0x32769b[_0x48c2('0x998')](_0x32769b['HrlUW'](_0x32769b[_0x48c2('0x999')](_0x32769b[_0x48c2('0x999')](_0x32769b['IqTOr'](_0x32769b[_0x48c2('0x99a')](_0x32769b[_0x48c2('0x99b')](_0x32769b[_0x48c2('0x99b')](_0x32769b[_0x48c2('0x99c')],_0x7c628d),_0x32769b['QLKDe']),_0x5cb742),'\x22,'),_0x3673a0)+',\x22',_0x2d6051),'\x22,'),_0x1042b4),_0x48c2('0x99d')),_0x3d6500),_0x32769b[_0x48c2('0x99e')]),_0x4560f3),_0x32769b[_0x48c2('0x99f')]);return _0x43c165;};Blockly[_0x48c2('0x6c8')]([{'type':'purchase_multiplyup_multiplydown','message0':_0x48c2('0x9a0'),'args0':[{'type':'field_dropdown','name':'selcontract_nya','options':[[_0x48c2('0x9a1'),_0x48c2('0x52d')],['Multiply\x20Down',_0x48c2('0x57e')]]},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x874'),'options':arrAccount},{'type':'input_end_row'},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x83a'),'options':arrPopulatedMarket2},{'type':'input_end_row'},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x86d'),'options':arrStakeAM},{'type':_0x48c2('0x768'),'name':'stake_nya'},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x9a2'),'options':[[_0x48c2('0x9a3'),'100'],[_0x48c2('0x9a4'),_0x48c2('0x9a5')],[_0x48c2('0x9a6'),'300'],[_0x48c2('0x9a7'),_0x48c2('0x9a8')],[_0x48c2('0x9a9'),_0x48c2('0x9aa')]]},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x768'),'name':_0x48c2('0x98f')},{'type':_0x48c2('0x768'),'name':_0x48c2('0x9ab')}],'inputsInline':![],'previousStatement':null,'nextStatement':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')]['forBlock'][_0x48c2('0x9ac')]=function(_0x542a43,_0x5db9ac){var _0x2479c3={'iYmFr':_0x48c2('0x9ad'),'GeTpX':'account_nya','yjHKx':function(_0x281703,_0x445f11){return _0x281703==_0x445f11;},'hvRuo':_0x48c2('0x64e'),'afSwI':_0x48c2('0x83e'),'SQQvT':_0x48c2('0x6e0'),'Akfkc':function(_0x322936,_0x5aa961){return _0x322936+_0x5aa961;},'pJBEr':function(_0x4f3b36,_0x5804f5){return _0x4f3b36+_0x5804f5;},'ITavF':_0x48c2('0x9a2'),'uBbYk':_0x48c2('0x86d'),'gpVAU':_0x48c2('0x83a'),'Lativ':function(_0x1925cf,_0x44251c){return _0x1925cf+_0x44251c;},'wYmjc':function(_0x4ba50e,_0x24f3f7){return _0x4ba50e+_0x24f3f7;},'pzhri':function(_0x77a554,_0x5e4d7e){return _0x77a554+_0x5e4d7e;},'rldiB':_0x48c2('0x871'),'qKMXK':_0x48c2('0x872')};var _0x3a6abe=_0x2479c3[_0x48c2('0x9ae')][_0x48c2('0xe')]('|'),_0x6cf478=0x0;while(!![]){switch(_0x3a6abe[_0x6cf478++]){case'0':var _0x18b56d=_0x5db9ac[_0x48c2('0x76e')](_0x542a43,'limitsl_nya',javascript['Order'][_0x48c2('0x771')]);continue;case'1':var _0x2822ae=_0x542a43[_0x48c2('0x6f7')](_0x2479c3[_0x48c2('0x9af')]);continue;case'2':var _0x3cf5d0=_0x2479c3[_0x48c2('0x9b0')](_0x567528,_0x2479c3[_0x48c2('0x9b1')])?_0x2479c3['afSwI']:_0x2479c3[_0x48c2('0x9b0')](_0x567528,_0x2479c3['SQQvT'])?_0x2479c3[_0x48c2('0x9b2')]:_0x2479c3[_0x48c2('0x9b3')](_0x2479c3[_0x48c2('0x9b4')]('\x22',_0x567528[_0x48c2('0xe')]('|')[0x0]),'\x22');continue;case'3':;continue;case'4':var _0x1b3520=_0x542a43[_0x48c2('0x6f7')](_0x48c2('0x86b'));continue;case'5':var _0x48a92b=_0x542a43[_0x48c2('0x6f7')](_0x2479c3[_0x48c2('0x9b5')]);continue;case'6':return _0x295b55;case'7':var _0x3d5464=_0x542a43[_0x48c2('0x6f7')](_0x2479c3[_0x48c2('0x9b6')]);continue;case'8':var _0x567528=_0x542a43[_0x48c2('0x6f7')](_0x2479c3[_0x48c2('0x9b7')]);continue;case'9':if(_0x659a4c[_0x48c2('0x89a')]()[_0x48c2('0x12')]==0x0){_0x659a4c=0x1;}continue;case'10':var _0x295b55=_0x2479c3[_0x48c2('0x9b8')](_0x2479c3['Lativ'](_0x2479c3[_0x48c2('0x9b8')](_0x2479c3[_0x48c2('0x9b8')](_0x2479c3[_0x48c2('0x9b8')](_0x2479c3['Lativ'](_0x2479c3[_0x48c2('0x9b8')](_0x2479c3[_0x48c2('0x9b8')](_0x2479c3['Lativ'](_0x2479c3['wYmjc'](_0x2479c3['pzhri'](_0x2479c3[_0x48c2('0x9b9')]+_0x2822ae,_0x2479c3[_0x48c2('0x9ba')]),_0x3d5464),'\x22,'),_0x659a4c),',\x22')+_0x1b3520+'\x22,',_0x3cf5d0)+_0x48c2('0x9bb'),_0x48a92b),'\x22,'),_0x2f1c17),','),_0x18b56d)+');';continue;case'11':var _0x659a4c=_0x5db9ac[_0x48c2('0x76e')](_0x542a43,_0x48c2('0x86e'),javascript['Order'][_0x48c2('0x771')]);continue;case'12':var _0x2f1c17=_0x5db9ac[_0x48c2('0x76e')](_0x542a43,_0x48c2('0x98f'),javascript['Order'][_0x48c2('0x771')]);continue;}break;}};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x9bc'),'message0':_0x48c2('0x8c5'),'args0':[{'type':_0x48c2('0x6fd'),'name':'selcontract_nya','options':[[_0x48c2('0x9bd'),_0x48c2('0x51c')],[_0x48c2('0x9be'),_0x48c2('0x51d')]]},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6fd'),'name':'account_nya','options':arrAccount},{'type':_0x48c2('0x6cb')},{'type':'field_dropdown','name':_0x48c2('0x83a'),'options':arrPopulatedMarket2},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6fd'),'name':'stakeAM_nya','options':arrStakeAM},{'type':_0x48c2('0x768'),'name':_0x48c2('0x86e')},{'type':_0x48c2('0x6fd'),'name':'seldurationunit_nya','options':[[_0x48c2('0x8b4'),'m'],[_0x48c2('0x8b5'),'h'],[_0x48c2('0x8de'),'d']]},{'type':_0x48c2('0x768'),'name':_0x48c2('0x86f')},{'type':_0x48c2('0x768'),'name':_0x48c2('0x8c9')}],'inputsInline':![],'previousStatement':null,'nextStatement':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')]['purchase_vanillalongcall_vanillalongput']=function(_0x37ab94,_0x69da7){var _0x320621={'QByRC':'market_nya','PLZcw':function(_0x5b180c,_0x232b57){return _0x5b180c==_0x232b57;},'GvWtg':_0x48c2('0x64e'),'gaYOc':_0x48c2('0x83e'),'YUNhO':_0x48c2('0x6e0'),'bKUuC':function(_0xb0df60,_0x5f5186){return _0xb0df60+_0x5f5186;},'BEyEN':'account_nya','AkwQF':'stakeAM_nya','GZlKf':_0x48c2('0x86e'),'bySSY':function(_0x1d6e22,_0x36a14d){return _0x1d6e22==_0x36a14d;},'Geidg':_0x48c2('0x86f'),'LBrsX':_0x48c2('0x8c9'),'TKvxc':function(_0x9d41f2,_0x164a1b){return _0x9d41f2+_0x164a1b;},'ktrCv':function(_0x110e76,_0x963bba){return _0x110e76+_0x963bba;},'zfeTA':function(_0x526692,_0x404b99){return _0x526692+_0x404b99;},'nckIg':_0x48c2('0x871'),'UXxni':_0x48c2('0x872'),'gZmHc':',0,0,0,0,0,0,0,0,0,0,0);'};var _0x4602c2=_0x37ab94[_0x48c2('0x6f7')]('selcontract_nya');var _0x32e564=_0x37ab94[_0x48c2('0x6f7')](_0x320621[_0x48c2('0x9bf')]);var _0x3fae6a=_0x320621[_0x48c2('0x9c0')](_0x32e564,_0x320621['GvWtg'])?_0x320621[_0x48c2('0x9c1')]:_0x320621[_0x48c2('0x9c0')](_0x32e564,_0x320621[_0x48c2('0x9c2')])?_0x320621[_0x48c2('0x9c2')]:_0x320621['bKUuC'](_0x320621[_0x48c2('0x9c3')]('\x22',_0x32e564[_0x48c2('0xe')]('|')[0x0]),'\x22');var _0x31123c=_0x37ab94[_0x48c2('0x6f7')](_0x320621[_0x48c2('0x9c4')]);var _0x45b91a=_0x37ab94[_0x48c2('0x6f7')](_0x320621[_0x48c2('0x9c5')]);var _0x7ca9ba=_0x69da7['valueToCode'](_0x37ab94,_0x320621[_0x48c2('0x9c6')],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);if(_0x320621[_0x48c2('0x9c7')](_0x7ca9ba[_0x48c2('0x89a')]()[_0x48c2('0x12')],0x0)){_0x7ca9ba=0x1;};var _0xbbd38b=_0x37ab94['getFieldValue'](_0x48c2('0x8b2'));var _0x1d7f01=_0x69da7[_0x48c2('0x76e')](_0x37ab94,_0x320621[_0x48c2('0x9c8')],javascript[_0x48c2('0x770')]['ATOMIC']);var _0x1730c0=_0x69da7[_0x48c2('0x76e')](_0x37ab94,_0x320621[_0x48c2('0x9c9')],javascript['Order'][_0x48c2('0x771')]);var _0x32f30a=_0x320621['bKUuC'](_0x320621['bKUuC'](_0x320621[_0x48c2('0x9c3')](_0x320621[_0x48c2('0x9c3')](_0x320621[_0x48c2('0x9ca')](_0x320621[_0x48c2('0x9cb')](_0x320621[_0x48c2('0x9cc')](_0x320621[_0x48c2('0x9cc')](_0x320621['zfeTA'](_0x320621['zfeTA'](_0x320621['zfeTA'](_0x320621[_0x48c2('0x9cd')]+_0x31123c,_0x320621[_0x48c2('0x9ce')]),_0x45b91a),'\x22,')+_0x7ca9ba,',\x22'),_0x4602c2),'\x22,'),_0x3fae6a)+',',_0x1d7f01),',\x22')+_0xbbd38b,'\x22,')+_0x1730c0,_0x320621['gZmHc']);return _0x32f30a;};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x9cf'),'message0':_0x48c2('0x8c5'),'args0':[{'type':'field_dropdown','name':_0x48c2('0x86b'),'options':[['Turbos\x20Long','TURBOSLONG'],[_0x48c2('0x9d0'),'TURBOSSHORT']]},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x874'),'options':arrAccount},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x83a'),'options':arrPopulatedMarket2},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6fd'),'name':'stakeAM_nya','options':arrStakeAM},{'type':_0x48c2('0x768'),'name':'stake_nya'},{'type':_0x48c2('0x6fd'),'name':'seldurationunit_nya','options':[[_0x48c2('0x8b3'),'t'],[_0x48c2('0x8c7'),'s'],[_0x48c2('0x8b4'),'m'],[_0x48c2('0x8b5'),'h'],['day(s)','d']]},{'type':_0x48c2('0x768'),'name':'inpduration_nya'},{'type':_0x48c2('0x768'),'name':_0x48c2('0x8c9')}],'inputsInline':![],'previousStatement':null,'nextStatement':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')][_0x48c2('0x9cf')]=function(_0x20ade4,_0x345976){var _0x132d08={'vdgHh':_0x48c2('0x9d1'),'vEWKk':function(_0x4f4085,_0x4f0c2e){return _0x4f4085+_0x4f0c2e;},'IVSFR':function(_0x12c3d9,_0x1494b5){return _0x12c3d9+_0x1494b5;},'IGcdf':function(_0x394335,_0x5e5fba){return _0x394335+_0x5e5fba;},'zvgoc':function(_0x39bcc4,_0x1d0262){return _0x39bcc4+_0x1d0262;},'UwxAm':function(_0x3e92aa,_0x3eaa11){return _0x3e92aa+_0x3eaa11;},'aPEop':function(_0x2629d5,_0x1c85d7){return _0x2629d5+_0x1c85d7;},'JUXxg':function(_0x3df059,_0x586498){return _0x3df059+_0x586498;},'kmCdq':function(_0x2e7268,_0x1c7501){return _0x2e7268+_0x1c7501;},'DTMJk':function(_0x3e7684,_0x2ca0d0){return _0x3e7684+_0x2ca0d0;},'TzmAf':_0x48c2('0x871'),'nAiOL':_0x48c2('0x872'),'HUVTi':_0x48c2('0x8b2'),'jOavw':_0x48c2('0x86f'),'yDyru':_0x48c2('0x86d'),'urrCl':'market_nya','gLJRV':function(_0x124f7d,_0x3e623d){return _0x124f7d==_0x3e623d;},'RkJXd':'mainSymbol','TeDTz':function(_0x51a718,_0x351492){return _0x51a718==_0x351492;},'XMGxS':'mainMarket_continuousindices','kIVAm':_0x48c2('0x8c9'),'FBRqx':'stake_nya'};var _0x180e8e=_0x132d08['vdgHh'][_0x48c2('0xe')]('|'),_0x461396=0x0;while(!![]){switch(_0x180e8e[_0x461396++]){case'0':var _0x362b33=_0x132d08['vEWKk'](_0x132d08[_0x48c2('0x9d2')](_0x132d08['IVSFR'](_0x132d08[_0x48c2('0x9d2')](_0x132d08[_0x48c2('0x9d2')](_0x132d08[_0x48c2('0x9d3')](_0x132d08[_0x48c2('0x9d4')](_0x132d08[_0x48c2('0x9d5')](_0x132d08[_0x48c2('0x9d5')](_0x132d08['aPEop'](_0x132d08[_0x48c2('0x9d6')](_0x132d08['aPEop'](_0x132d08['JUXxg'](_0x132d08[_0x48c2('0x9d7')](_0x132d08[_0x48c2('0x9d7')](_0x132d08['DTMJk'](_0x132d08[_0x48c2('0x9d8')],_0x3b8b38),_0x132d08[_0x48c2('0x9d9')]),_0x557193),'\x22,'),_0x5de311),',\x22'),_0x68c718),'\x22,'),_0xc5ee0d),','),_0x35f1f1),',\x22'),_0x3edc3b),'\x22,'),_0x25ba71),_0x48c2('0x8e0'));continue;case'1':var _0x3edc3b=_0x20ade4['getFieldValue'](_0x132d08[_0x48c2('0x9da')]);continue;case'2':var _0x35f1f1=_0x345976['valueToCode'](_0x20ade4,_0x132d08[_0x48c2('0x9db')],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);continue;case'3':var _0x68c718=_0x20ade4[_0x48c2('0x6f7')](_0x48c2('0x86b'));continue;case'4':return _0x362b33;case'5':var _0x3b8b38=_0x20ade4[_0x48c2('0x6f7')](_0x48c2('0x874'));continue;case'6':;continue;case'7':var _0x557193=_0x20ade4[_0x48c2('0x6f7')](_0x132d08[_0x48c2('0x9dc')]);continue;case'8':var _0xd3d1ff=_0x20ade4['getFieldValue'](_0x132d08[_0x48c2('0x9dd')]);continue;case'9':if(_0x132d08[_0x48c2('0x9de')](_0x5de311['toString']()['length'],0x0)){_0x5de311=0x1;}continue;case'10':var _0xc5ee0d=_0x132d08[_0x48c2('0x9de')](_0xd3d1ff,_0x48c2('0x64e'))?_0x132d08[_0x48c2('0x9df')]:_0x132d08['TeDTz'](_0xd3d1ff,_0x132d08[_0x48c2('0x9e0')])?_0x132d08[_0x48c2('0x9e0')]:'\x22'+_0xd3d1ff['split']('|')[0x0]+'\x22';continue;case'11':var _0x25ba71=_0x345976['valueToCode'](_0x20ade4,_0x132d08[_0x48c2('0x9e1')],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);continue;case'12':var _0x5de311=_0x345976[_0x48c2('0x76e')](_0x20ade4,_0x132d08[_0x48c2('0x9e2')],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);continue;}break;}};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x9e3'),'message0':_0x48c2('0x9e4'),'args0':[{'type':_0x48c2('0x6fd'),'name':'color_nya','options':[[_0x48c2('0x9e5'),''],[_0x48c2('0x39d'),_0x48c2('0x9e6')],['Red',_0x48c2('0x9e7')],[_0x48c2('0x9e8'),_0x48c2('0x9e9')],[_0x48c2('0x9ea'),_0x48c2('0x9eb')]]},{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x9ec'),'options':[[_0x48c2('0x9ed'),_0x48c2('0x9ee')],[_0x48c2('0x9ef'),_0x48c2('0x9f0')],[_0x48c2('0x9f1'),_0x48c2('0x9f2')],['Job\x20done',_0x48c2('0x9f3')],[_0x48c2('0x9f4'),_0x48c2('0x78')],[_0x48c2('0x9f5'),_0x48c2('0x9f6')]]},{'type':_0x48c2('0x768'),'name':_0x48c2('0x9f7')}],'inputsInline':![],'previousStatement':null,'nextStatement':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript['javascriptGenerator'][_0x48c2('0x6cf')]['write_log']=function(_0x464a10,_0x8fecee){var _0xac0ab2={'zVOQo':_0x48c2('0x9f8'),'OhSoH':function(_0x516778,_0x5a1fe7){return _0x516778==_0x5a1fe7;},'HzkgS':_0x48c2('0x9ee'),'Btvxs':function(_0x4aa0cc,_0x1f453f){return _0x4aa0cc+_0x1f453f;},'XSbED':_0x48c2('0x9f9'),'gAlaL':'\x22).play();','VzxRW':_0x48c2('0x9f7'),'dIzdm':'sound_nya','TybaC':function(_0x1db4a0,_0x553ecd){return _0x1db4a0+_0x553ecd;},'QYMCX':_0x48c2('0x9fa'),'TXnKs':_0x48c2('0x9fb')};var _0x3e41f2=_0xac0ab2['zVOQo'][_0x48c2('0xe')]('|'),_0x589684=0x0;while(!![]){switch(_0x3e41f2[_0x589684++]){case'0':if(_0xac0ab2[_0x48c2('0x9fc')](_0x2b7db9,_0xac0ab2[_0x48c2('0x9fd')])){_0x19f18e='';}else{_0x19f18e=_0xac0ab2[_0x48c2('0x9fe')](_0xac0ab2['XSbED']+_0x2b7db9,_0xac0ab2[_0x48c2('0x9ff')]);}continue;case'1':return _0x19f18e;case'2':var _0x230a5b=_0x8fecee[_0x48c2('0x76e')](_0x464a10,_0xac0ab2[_0x48c2('0xa00')],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);continue;case'3':var _0x2b7db9=_0x464a10['getFieldValue'](_0xac0ab2[_0x48c2('0xa01')]);continue;case'4':var _0x19f18e;continue;case'5':_0x19f18e+=_0xac0ab2[_0x48c2('0x9fe')](_0xac0ab2['Btvxs'](_0xac0ab2[_0x48c2('0xa02')](_0xac0ab2['QYMCX'],_0xeb3225),'\x22,'),_0x230a5b)+');';continue;case'6':var _0xeb3225=_0x464a10[_0x48c2('0x6f7')](_0xac0ab2['TXnKs']);continue;}break;}};let arrPopulatedMarket=[[_0x48c2('0x650'),_0x48c2('0x651')],[_0x48c2('0x652'),'R_10|Volatility\x2010\x20Index'],[_0x48c2('0x654'),'1HZ25V|Volatility\x2025\x20(1s)\x20Index'],['Continuous\x20Indices:Volatility\x2025\x20Index','R_25|Volatility\x2025\x20Index'],['Continuous\x20Indices:Volatility\x2050\x20(1s)\x20Index',_0x48c2('0x658')],['Continuous\x20Indices:Volatility\x2050\x20Index',_0x48c2('0x6c6')],[_0x48c2('0x65a'),_0x48c2('0x65b')],[_0x48c2('0x6c7'),_0x48c2('0x65c')],[_0x48c2('0x65d'),_0x48c2('0x65e')],[_0x48c2('0x65f'),_0x48c2('0x660')],[_0x48c2('0x661'),_0x48c2('0x662')],[_0x48c2('0x663'),_0x48c2('0x664')],[_0x48c2('0x665'),'RDBEAR|Bear\x20Market\x20Index'],['Daily\x20Reset\x20Indices:Bull\x20Market\x20Index',_0x48c2('0x668')],[_0x48c2('0x669'),_0x48c2('0xa03')],[_0x48c2('0xa04'),_0x48c2('0xa05')],[_0x48c2('0x66a'),_0x48c2('0xa06')],[_0x48c2('0x66b'),'JD75|Jump\x2075\x20Index'],['Jump\x20Indices:Jump\x20100\x20Index',_0x48c2('0x66d')],[_0x48c2('0xa07'),_0x48c2('0x66e')],[_0x48c2('0xa08'),'CRASH300N|Crash\x20300\x20Index'],[_0x48c2('0x670'),_0x48c2('0x671')],[_0x48c2('0x672'),_0x48c2('0x673')],[_0x48c2('0xa09'),_0x48c2('0x674')],[_0x48c2('0x675'),_0x48c2('0xa0a')],[_0x48c2('0xa0b'),'BOOM1000|Boom\x201000\x20Index'],[_0x48c2('0x677'),_0x48c2('0xa0c')],[_0x48c2('0x678'),'frxAUDUSD|AUD/USD'],[_0x48c2('0x67a'),'frxEURAUD|EUR/AUD'],[_0x48c2('0x67c'),'frxEURCHF|EUR/CHF'],[_0x48c2('0xa0d'),'frxEURGBP|EUR/GBP'],[_0x48c2('0x67f'),_0x48c2('0xa0e')],['Major\x20Pairs:EUR/USD',_0x48c2('0x681')],['Major\x20Pairs:GBP/AUD',_0x48c2('0x683')],[_0x48c2('0x684'),_0x48c2('0x685')],['Major\x20Pairs:GBP/USD',_0x48c2('0x687')],[_0x48c2('0x688'),_0x48c2('0x689')],['Major\x20Pairs:USD/CHF',_0x48c2('0xa0f')],[_0x48c2('0x68b'),'frxUSDJPY|USD/JPY'],[_0x48c2('0x68d'),'frxAUDCAD|AUD/CAD'],[_0x48c2('0xa10'),'frxAUDCHF|AUD/CHF'],[_0x48c2('0x68f'),_0x48c2('0x690')],[_0x48c2('0x691'),_0x48c2('0x692')],[_0x48c2('0x693'),_0x48c2('0x694')],[_0x48c2('0xa11'),_0x48c2('0x695')],['Minor\x20Pairs:GBP/NOK',_0x48c2('0x697')],[_0x48c2('0xa12'),_0x48c2('0xa13')],[_0x48c2('0x698'),_0x48c2('0x699')],[_0x48c2('0x69a'),_0x48c2('0x69b')],[_0x48c2('0xa14'),_0x48c2('0x69c')],[_0x48c2('0x69d'),_0x48c2('0x69e')],[_0x48c2('0x69f'),_0x48c2('0x6a0')],['Minor\x20Pairs:USD/SEK',_0x48c2('0x6a2')],[_0x48c2('0xa15'),_0x48c2('0x6a3')],[_0x48c2('0x6a4'),'OTC_HSI|Hong\x20Kong\x2050'],['Asian\x20indices:Japan\x20225',_0x48c2('0x6a7')],[_0x48c2('0x6a8'),'OTC_SX5E|Euro\x2050'],['European\x20indices:France\x2040','OTC_FCHI|France\x2040'],['European\x20indices:Germany\x2040','OTC_GDAXI|Germany\x2040'],['European\x20indices:Netherlands\x2025',_0x48c2('0x6ac')],[_0x48c2('0xa16'),'OTC_SSMI|Swiss\x2020'],[_0x48c2('0xa17'),_0x48c2('0x6ad')],[_0x48c2('0x6ae'),'OTC_SPC|US\x20500'],[_0x48c2('0x6b0'),_0x48c2('0x6b1')],[_0x48c2('0xa18'),_0x48c2('0xa19')],[_0x48c2('0x6b2'),_0x48c2('0x6b3')],[_0x48c2('0x6b4'),_0x48c2('0xa1a')],['Forex\x20Basket:GBP\x20Basket',_0x48c2('0x6b5')],[_0x48c2('0x6b6'),'WLDUSD|USD\x20Basket'],[_0x48c2('0xa1b'),_0x48c2('0x6b7')],[_0x48c2('0xa1c'),'frxXAUUSD|Gold/USD'],[_0x48c2('0x6b8'),'frxXPDUSD|Palladium/USD'],[_0x48c2('0x6b9'),_0x48c2('0x6ba')],[_0x48c2('0x6bb'),'frxXAGUSD|Silver/USD'],[_0x48c2('0x6bd'),_0x48c2('0x6be')],[_0x48c2('0x6bf'),_0x48c2('0x6c0')]];Blockly['defineBlocksWithJsonArray']([{'type':'setmarket','message0':_0x48c2('0xa1d'),'args0':[{'type':_0x48c2('0x6fd'),'name':_0x48c2('0x83a'),'options':arrPopulatedMarket}],'inputsInline':![],'previousStatement':null,'nextStatement':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript['javascriptGenerator'][_0x48c2('0x6cf')]['setmarket']=function(_0x302dec,_0x2463f9){var _0x197579={'QLYkv':_0x48c2('0x83a'),'WjZPx':function(_0x4b3b78,_0x1cc3be){return _0x4b3b78+_0x1cc3be;},'Hglkg':function(_0x343bb1,_0x56659f){return _0x343bb1+_0x56659f;},'XJPEA':function(_0x547d42,_0x2633ef){return _0x547d42+_0x2633ef;},'XyaeU':function(_0x28450a,_0x109208){return _0x28450a+_0x109208;},'Byylp':_0x48c2('0xa1e'),'IqBgx':'\x22){mainSymbol=\x22','wPDQx':_0x48c2('0xa1f'),'mgmUB':_0x48c2('0xa20')};var _0x29c6d1=_0x302dec[_0x48c2('0x6f7')](_0x197579[_0x48c2('0xa21')]);var _0x50027b=_0x197579[_0x48c2('0xa22')](_0x197579[_0x48c2('0xa23')](_0x197579[_0x48c2('0xa23')](_0x197579[_0x48c2('0xa24')](_0x197579[_0x48c2('0xa25')](_0x197579[_0x48c2('0xa25')](_0x197579[_0x48c2('0xa26')],_0x29c6d1[_0x48c2('0xe')]('|')[0x0]),_0x197579[_0x48c2('0xa27')]),_0x29c6d1[_0x48c2('0xe')]('|')[0x0]),_0x197579[_0x48c2('0xa28')]),_0x29c6d1[_0x48c2('0xe')]('|')[0x1]),_0x197579[_0x48c2('0xa29')]);return _0x50027b;};Blockly[_0x48c2('0x6c8')]([{'type':'setmoneymanagementtosmartmartingale','message0':_0x48c2('0xa2a'),'args0':[{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6ea'),'name':'check_smart_nya','checked':!![]},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x768'),'name':_0x48c2('0xa2b')},{'type':_0x48c2('0x768'),'name':_0x48c2('0xa2c')}],'inputsInline':![],'previousStatement':null,'nextStatement':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')]['setmoneymanagementtosmartmartingale']=function(_0x1fb793,_0x125dc9){var _0x4ea0fb={'MWqgv':'2|0|1|4|3','YEqLH':_0x48c2('0xa2b'),'aodSN':_0x48c2('0xa2c'),'RndJD':function(_0x33b974,_0xa6328a){return _0x33b974===_0xa6328a;},'ZSgsH':'check_smart_nya','VzfjZ':'TRUE','HkqFc':function(_0x5f11e5,_0x235bb8){return _0x5f11e5+_0x235bb8;},'jtsEz':function(_0x550714,_0x175286){return _0x550714+_0x175286;},'VSvQZ':function(_0x462b69,_0x4cce17){return _0x462b69+_0x4cce17;},'ZnOuG':_0x48c2('0xa2d'),'cWUZg':_0x48c2('0xa2e'),'gPCpD':_0x48c2('0xa2f')};var _0x1c1b5a=_0x4ea0fb['MWqgv'][_0x48c2('0xe')]('|'),_0x4d433e=0x0;while(!![]){switch(_0x1c1b5a[_0x4d433e++]){case'0':var _0x18da66=_0x125dc9[_0x48c2('0x76e')](_0x1fb793,_0x4ea0fb['YEqLH'],javascript[_0x48c2('0x770')]['ATOMIC']);continue;case'1':var _0x442cbf=_0x125dc9[_0x48c2('0x76e')](_0x1fb793,_0x4ea0fb['aodSN'],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);continue;case'2':var _0x49c7fe=_0x4ea0fb[_0x48c2('0xa30')](_0x1fb793[_0x48c2('0x6f7')](_0x4ea0fb[_0x48c2('0xa31')]),_0x4ea0fb['VzfjZ']);continue;case'3':return _0x262916;case'4':var _0x262916=_0x4ea0fb[_0x48c2('0xa32')](_0x4ea0fb[_0x48c2('0xa33')](_0x4ea0fb[_0x48c2('0xa33')](_0x4ea0fb[_0x48c2('0xa33')](_0x4ea0fb['VSvQZ'](_0x4ea0fb[_0x48c2('0xa34')],_0x18da66)+';inpMartiFactor.value=',_0x442cbf),_0x4ea0fb[_0x48c2('0xa35')]),_0x49c7fe),_0x4ea0fb['gPCpD']);continue;}break;}};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0xa36'),'message0':_0x48c2('0xa37'),'args0':[{'type':'input_end_row'},{'type':_0x48c2('0x6ea'),'name':_0x48c2('0xa38'),'checked':!![]},{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x768'),'name':_0x48c2('0xa39')}],'inputsInline':![],'previousStatement':null,'nextStatement':null,'colour':'#3e3e3e','tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')][_0x48c2('0xa36')]=function(_0x349d83,_0x4365cb){var _0x59836b={'qEUqQ':_0x48c2('0xa38'),'VcmiW':function(_0xddae01,_0x2187c4){return _0xddae01+_0x2187c4;},'bhYma':function(_0xbca951,_0x73bff1){return _0xbca951+_0x73bff1;},'vBwPX':_0x48c2('0xa3a'),'uIoSJ':';chkSmart.checked=','PELnj':';selMoneyManagementChanged();'};var _0x47df42=_0x349d83[_0x48c2('0x6f7')](_0x59836b['qEUqQ'])===_0x48c2('0x6f4');var _0x3c3aaf=_0x4365cb[_0x48c2('0x76e')](_0x349d83,_0x48c2('0xa39'),javascript[_0x48c2('0x770')][_0x48c2('0x771')]);var _0x2b77e1=_0x59836b['VcmiW'](_0x59836b[_0x48c2('0xa3b')](_0x59836b['bhYma'](_0x59836b[_0x48c2('0xa3c')],_0x3c3aaf)+_0x59836b['uIoSJ'],_0x47df42),_0x59836b['PELnj']);return _0x2b77e1;};Blockly['defineBlocksWithJsonArray']([{'type':_0x48c2('0xa3d'),'message0':'Set\x20Money\x20Management\x20to\x20Fixed\x20Stake\x20%1\x20Fixed\x20Stake:\x20%2','args0':[{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x768'),'name':'fixedstake_nya'}],'inputsInline':![],'previousStatement':null,'nextStatement':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript['javascriptGenerator'][_0x48c2('0x6cf')][_0x48c2('0xa3d')]=function(_0x5077fa,_0x4895a2){var _0x55900a={'EFPyB':_0x48c2('0xa3e'),'QFmKS':function(_0x1cde74,_0x5b1932){return _0x1cde74+_0x5b1932;},'vQisw':function(_0x299af0,_0x5b4a87){return _0x299af0+_0x5b4a87;},'CwOto':function(_0x13ef74,_0x4d7c3c){return _0x13ef74+_0x4d7c3c;},'IkIej':_0x48c2('0xa3f'),'hJbTk':_0x48c2('0xa2f')};var _0x23df99=_0x4895a2[_0x48c2('0x76e')](_0x5077fa,_0x55900a['EFPyB'],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);var _0x207383=_0x55900a[_0x48c2('0xa40')](_0x55900a['vQisw'](_0x55900a[_0x48c2('0xa41')](_0x55900a[_0x48c2('0xa42')](_0x55900a[_0x48c2('0xa43')],_0x23df99),_0x48c2('0xa44')),_0x23df99),_0x55900a[_0x48c2('0xa45')]);return _0x207383;};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0xa46'),'message0':_0x48c2('0xa47'),'args0':[{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6ea'),'name':_0x48c2('0xa48'),'checked':!![]},{'type':'input_value','name':_0x48c2('0xa49')},{'type':_0x48c2('0x6ea'),'name':_0x48c2('0xa4a'),'checked':![]},{'type':'input_value','name':_0x48c2('0xa4b')},{'type':'field_checkbox','name':_0x48c2('0xa4c'),'checked':![]},{'type':_0x48c2('0x768'),'name':_0x48c2('0xa4d')},{'type':_0x48c2('0x6ea'),'name':_0x48c2('0xa4e'),'checked':![]},{'type':_0x48c2('0x768'),'name':_0x48c2('0xa4f')},{'type':_0x48c2('0x6ea'),'name':'check_numberofruns_nya','checked':![]},{'type':_0x48c2('0x768'),'name':_0x48c2('0xa50')},{'type':_0x48c2('0x6ea'),'name':_0x48c2('0xa51'),'checked':![]},{'type':_0x48c2('0x768'),'name':_0x48c2('0xa52')},{'type':_0x48c2('0x6ea'),'name':'check_numberoflossesinarow_nya','checked':![]},{'type':'input_value','name':_0x48c2('0xa53')}],'inputsInline':![],'previousStatement':null,'nextStatement':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')]['settarget']=function(_0x6af67c,_0x162260){var _0x10bc58={'FOTKr':'8|7|12|13|15|9|6|1|4|11|5|10|2|0|3|14','lBAoZ':_0x48c2('0xa53'),'kgFFT':_0x48c2('0xa4f'),'APDiT':function(_0x998127,_0x346431){return _0x998127===_0x346431;},'RKurV':_0x48c2('0xa54'),'ssonb':_0x48c2('0x6f4'),'SOHnx':function(_0x57da94,_0x36f76b){return _0x57da94+_0x36f76b;},'otxAK':function(_0x17762a,_0x12dcbc){return _0x17762a+_0x12dcbc;},'WUvtZ':function(_0xcca038,_0x1bdaa3){return _0xcca038+_0x1bdaa3;},'GTKzS':function(_0x2d326e,_0x4e886f){return _0x2d326e+_0x4e886f;},'jRlac':function(_0x5e30d3,_0x15db6f){return _0x5e30d3+_0x15db6f;},'jgraB':function(_0x54d020,_0x4da4e2){return _0x54d020+_0x4da4e2;},'KWzPP':function(_0x3d07db,_0x20a2e9){return _0x3d07db+_0x20a2e9;},'ZuSWp':function(_0x34fec7,_0x58df57){return _0x34fec7+_0x58df57;},'SseWx':function(_0x1409bf,_0xadbf5a){return _0x1409bf+_0xadbf5a;},'LBSJH':function(_0xd323f0,_0x1ae804){return _0xd323f0+_0x1ae804;},'ltgRZ':'chkTP.checked=','kQasU':_0x48c2('0xa55'),'swVeA':';inpSL.value=','ePFmw':_0x48c2('0xa56'),'AifZf':_0x48c2('0xa57'),'DiFYS':';chkNumOfRun.checked=','iZyup':_0x48c2('0xa58'),'RXnPA':_0x48c2('0xa59'),'JmlNt':_0x48c2('0xa51'),'iHBby':'check_numberoflosses_nya','yJvvF':_0x48c2('0xa49'),'pPdWu':'check_targetprofit_nya','VLUMg':_0x48c2('0xa4d'),'fmAOe':_0x48c2('0xa52'),'pBXMz':_0x48c2('0xa50'),'fUSBx':_0x48c2('0xa4c')};var _0x330f5c=_0x10bc58['FOTKr'][_0x48c2('0xe')]('|'),_0x223b05=0x0;while(!![]){switch(_0x330f5c[_0x223b05++]){case'0':var _0x5a2581=_0x162260[_0x48c2('0x76e')](_0x6af67c,_0x10bc58[_0x48c2('0xa5a')],javascript['Order'][_0x48c2('0x771')]);continue;case'1':var _0x499662=_0x162260[_0x48c2('0x76e')](_0x6af67c,_0x10bc58[_0x48c2('0xa5b')],javascript['Order'][_0x48c2('0x771')]);continue;case'2':var _0x42c777=_0x10bc58[_0x48c2('0xa5c')](_0x6af67c[_0x48c2('0x6f7')](_0x10bc58['RKurV']),_0x10bc58[_0x48c2('0xa5d')]);continue;case'3':var _0x3a8e9c=_0x10bc58[_0x48c2('0xa5e')](_0x10bc58[_0x48c2('0xa5f')](_0x10bc58[_0x48c2('0xa60')](_0x10bc58[_0x48c2('0xa61')](_0x10bc58[_0x48c2('0xa61')](_0x10bc58['jRlac'](_0x10bc58[_0x48c2('0xa62')](_0x10bc58[_0x48c2('0xa62')](_0x10bc58['jgraB'](_0x10bc58[_0x48c2('0xa63')](_0x10bc58[_0x48c2('0xa64')](_0x10bc58[_0x48c2('0xa65')](_0x10bc58[_0x48c2('0xa65')](_0x10bc58[_0x48c2('0xa65')](_0x10bc58[_0x48c2('0xa65')](_0x10bc58[_0x48c2('0xa65')](_0x10bc58[_0x48c2('0xa65')](_0x10bc58[_0x48c2('0xa66')](_0x10bc58['LBSJH'](_0x10bc58[_0x48c2('0xa66')](_0x10bc58[_0x48c2('0xa66')](_0x10bc58['LBSJH'](_0x10bc58['ltgRZ'],_0x4887a8)+';inpTP.value='+_0x3b9570,_0x10bc58[_0x48c2('0xa67')])+_0x45500f,_0x10bc58['swVeA'])+_0x2c0fdd+_0x10bc58[_0x48c2('0xa68')],_0x5d0a9d),';inpNumOfWin.value='),_0x847074)+_0x10bc58[_0x48c2('0xa69')],_0x12b65e),_0x48c2('0xa6a')),_0x499662),_0x10bc58[_0x48c2('0xa6b')]),_0x55e9e1),_0x10bc58[_0x48c2('0xa6c')]),_0x153fbd),_0x48c2('0xa6d')),_0x44683a),_0x48c2('0xa6e')),_0x314a7e),_0x48c2('0xa6f')),_0x42c777),_0x10bc58[_0x48c2('0xa70')]),_0x5a2581),';');continue;case'4':var _0x55e9e1=_0x6af67c[_0x48c2('0x6f7')](_0x48c2('0xa71'))===_0x10bc58[_0x48c2('0xa5d')];continue;case'5':var _0x44683a=_0x6af67c[_0x48c2('0x6f7')](_0x10bc58[_0x48c2('0xa72')])===_0x48c2('0x6f4');continue;case'6':var _0x12b65e=_0x6af67c['getFieldValue'](_0x10bc58[_0x48c2('0xa73')])===_0x10bc58['ssonb'];continue;case'7':var _0x3b9570=_0x162260['valueToCode'](_0x6af67c,_0x10bc58[_0x48c2('0xa74')],javascript['Order']['ATOMIC']);continue;case'8':var _0x4887a8=_0x10bc58['APDiT'](_0x6af67c[_0x48c2('0x6f7')](_0x10bc58[_0x48c2('0xa75')]),'TRUE');continue;case'9':var _0x847074=_0x162260[_0x48c2('0x76e')](_0x6af67c,_0x10bc58[_0x48c2('0xa76')],javascript['Order']['ATOMIC']);continue;case'10':var _0x314a7e=_0x162260[_0x48c2('0x76e')](_0x6af67c,_0x10bc58[_0x48c2('0xa77')],javascript['Order'][_0x48c2('0x771')]);continue;case'11':var _0x153fbd=_0x162260[_0x48c2('0x76e')](_0x6af67c,_0x10bc58['pBXMz'],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);continue;case'12':var _0x45500f=_0x10bc58[_0x48c2('0xa5c')](_0x6af67c[_0x48c2('0x6f7')](_0x48c2('0xa4a')),_0x10bc58[_0x48c2('0xa5d')]);continue;case'13':var _0x2c0fdd=_0x162260['valueToCode'](_0x6af67c,_0x48c2('0xa4b'),javascript['Order'][_0x48c2('0x771')]);continue;case'14':return _0x3a8e9c;case'15':var _0x5d0a9d=_0x6af67c[_0x48c2('0x6f7')](_0x10bc58[_0x48c2('0xa78')])===_0x10bc58[_0x48c2('0xa5d')];continue;}break;}};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0xa79'),'message0':_0x48c2('0xa7a'),'args0':[{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x6ea'),'name':'check_virtuallose_nya','checked':!![]},{'type':_0x48c2('0x768'),'name':'virtuallose_nya'}],'inputsInline':![],'previousStatement':null,'nextStatement':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')][_0x48c2('0xa79')]=function(_0x39ac20,_0x4dbfeb){var _0x3c08f9={'MkMrY':function(_0x5a15b1,_0x3e37c6){return _0x5a15b1===_0x3e37c6;},'fdibw':'check_virtuallose_nya','ZQYgc':_0x48c2('0x6f4'),'IIqeE':_0x48c2('0xa7b'),'WoHkw':function(_0x37ab26,_0x58e0ec){return _0x37ab26+_0x58e0ec;},'qvsvc':function(_0x5b2493,_0x1b3b0b){return _0x5b2493+_0x1b3b0b;},'rpRLy':';cekValidasiSlaveToken();'};var _0x42804f=_0x3c08f9[_0x48c2('0xa7c')](_0x39ac20[_0x48c2('0x6f7')](_0x3c08f9[_0x48c2('0xa7d')]),_0x3c08f9[_0x48c2('0xa7e')]);var _0x3d4ccf=_0x4dbfeb[_0x48c2('0x76e')](_0x39ac20,_0x3c08f9[_0x48c2('0xa7f')],javascript['Order'][_0x48c2('0x771')]);var _0x1bd4bc=_0x3c08f9['WoHkw'](_0x3c08f9[_0x48c2('0xa80')](_0x48c2('0xa81')+_0x42804f+_0x48c2('0xa82'),_0x3d4ccf),_0x3c08f9[_0x48c2('0xa83')]);return _0x1bd4bc;};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0xa84'),'message0':_0x48c2('0xa85'),'args0':[{'type':'input_end_row'},{'type':_0x48c2('0x6ea'),'name':_0x48c2('0xa86'),'checked':![]},{'type':_0x48c2('0x768'),'name':_0x48c2('0xa87')},{'type':_0x48c2('0x6ea'),'name':_0x48c2('0xa88'),'checked':!![]},{'type':_0x48c2('0x768'),'name':_0x48c2('0xa89')}],'inputsInline':![],'previousStatement':null,'nextStatement':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')]['forBlock'][_0x48c2('0xa84')]=function(_0x52b975,_0x114d3a){var _0x357a70={'bXIaE':function(_0x3e68a5,_0x2627aa){return _0x3e68a5+_0x2627aa;},'FNHlp':function(_0x1be43e,_0x30281d){return _0x1be43e+_0x30281d;},'bBvWE':function(_0x4c60fd,_0x278f42){return _0x4c60fd+_0x278f42;},'hnJHK':function(_0x3b7a39,_0xd20d50){return _0x3b7a39+_0xd20d50;},'poqOs':_0x48c2('0xa8a'),'lLHFR':_0x48c2('0xa8b'),'nrbmv':_0x48c2('0xa8c'),'czYtt':function(_0x358584,_0x5baf17){return _0x358584===_0x5baf17;},'sYmiN':_0x48c2('0x6f4'),'xTsIF':function(_0x56edc5,_0xfab9ad){return _0x56edc5===_0xfab9ad;},'rdiDQ':_0x48c2('0xa88'),'dgjnC':_0x48c2('0xa89'),'qVwvk':'delayafterwin_nya'};var _0x348150=_0x48c2('0xa8d')[_0x48c2('0xe')]('|'),_0x18f804=0x0;while(!![]){switch(_0x348150[_0x18f804++]){case'0':return _0x4c96db;case'1':var _0x4c96db=_0x357a70[_0x48c2('0xa8e')](_0x357a70[_0x48c2('0xa8e')](_0x357a70[_0x48c2('0xa8f')](_0x357a70[_0x48c2('0xa8f')](_0x357a70['bBvWE'](_0x357a70['hnJHK'](_0x357a70[_0x48c2('0xa90')](_0x357a70[_0x48c2('0xa91')],_0x212531),_0x357a70['lLHFR'])+_0x5948d0,_0x357a70[_0x48c2('0xa92')]),_0x132eee),_0x48c2('0xa93')),_0x27c069),';');continue;case'2':var _0x212531=_0x357a70[_0x48c2('0xa94')](_0x52b975[_0x48c2('0x6f7')](_0x48c2('0xa86')),_0x357a70[_0x48c2('0xa95')]);continue;case'3':var _0x132eee=_0x357a70[_0x48c2('0xa96')](_0x52b975['getFieldValue'](_0x357a70['rdiDQ']),_0x357a70[_0x48c2('0xa95')]);continue;case'4':var _0x27c069=_0x52b975[_0x48c2('0x6f7')](_0x357a70['dgjnC']);continue;case'5':var _0x5948d0=_0x52b975['getFieldValue'](_0x357a70[_0x48c2('0xa97')]);continue;}break;}};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0xa98'),'message0':_0x48c2('0xa99'),'args0':[{'type':'field_dropdown','name':_0x48c2('0xa9a'),'options':[['Win','win'],[_0x48c2('0xa9b'),_0x48c2('0xa9c')],[_0x48c2('0xa9d'),_0x48c2('0xa9e')],[_0x48c2('0xa9f'),_0x48c2('0xaa0')]]}],'output':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')][_0x48c2('0xa98')]=function(_0x4fec3b,_0x11e7cb){var _0x48c6e0={'mwynV':function(_0x479a0b,_0x3fe6dc){return _0x479a0b+_0x3fe6dc;},'KEIXn':function(_0x1fa1f5,_0x1d7a54){return _0x1fa1f5+_0x1d7a54;},'kHEjt':_0x48c2('0xaa1')};var _0x52497a=_0x4fec3b[_0x48c2('0x6f7')](_0x48c2('0xa9a'));var _0x4a1755=_0x48c6e0[_0x48c2('0xaa2')](_0x48c6e0[_0x48c2('0xaa3')](_0x48c6e0['kHEjt'],_0x52497a),'\x22');return[_0x4a1755,Blockly[_0x48c2('0x6e1')][_0x48c2('0x6e2')]];};Blockly['defineBlocksWithJsonArray']([{'type':_0x48c2('0xaa4'),'message0':_0x48c2('0xaa5'),'args0':[],'previousStatement':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':'','extensions':[_0x48c2('0xaa6')]}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')][_0x48c2('0xaa4')]=function(_0x51686c,_0x248ce7){var _0x640ed5={'sngKu':_0x48c2('0xaa7')};var _0x41b116=_0x640ed5['sngKu'];return _0x41b116;};Blockly['Extensions'][_0x48c2('0xaa8')](_0x48c2('0xaa6'),function(){var _0x2b39e8={'VtVTQ':function(_0x3a4ee1,_0x405c42){return _0x3a4ee1!==_0x405c42;},'BojcD':function(_0x3ebada,_0x32e121){return _0x3ebada===_0x32e121;},'CEOtB':_0x48c2('0x6c9'),'vXVhN':_0x48c2('0xaa9')};this[_0x48c2('0xaaa')](function(_0x50ae96){if(this[_0x48c2('0xaab')]['isDragging']())return;let _0x57c824,_0x2851d2;_0x57c824=this[_0x48c2('0xaac')]();_0x2851d2=![];while(_0x2b39e8[_0x48c2('0xaad')](_0x57c824,null)){if(_0x2b39e8[_0x48c2('0xaae')](_0x57c824['type'],_0x2b39e8[_0x48c2('0xaaf')])){_0x2851d2=!![];break;};_0x57c824=_0x57c824[_0x48c2('0xaac')]();}if(!_0x2851d2){this[_0x48c2('0xab0')][_0x48c2('0xab1')]();this[_0x48c2('0xab2')](_0x2b39e8[_0x48c2('0xab3')]);}else{this[_0x48c2('0xab2')](null);}});});Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0xab4'),'message0':'Check\x20Again','args0':[],'previousStatement':null,'colour':'#3e3e3e','tooltip':'','helpUrl':'','extensions':[_0x48c2('0xab5')]}]);javascript['javascriptGenerator']['forBlock'][_0x48c2('0xab4')]=function(_0x4137d7,_0x514449){var _0x2b5256={'COLsh':'izinRun2=true;'};var _0x548e13=_0x2b5256['COLsh'];return _0x548e13;};Blockly[_0x48c2('0xab6')][_0x48c2('0xaa8')](_0x48c2('0xab5'),function(){var _0x32f984={'wNoZC':function(_0x380c62,_0x4aab1e){return _0x380c62===_0x4aab1e;},'gtwNt':_0x48c2('0x6d4'),'MsaQX':_0x48c2('0xab7')};this[_0x48c2('0xaaa')](function(_0x35499d){if(this['workspace'][_0x48c2('0xab8')]())return;let _0x500516,_0x574dec;_0x500516=this[_0x48c2('0xaac')]();_0x574dec=![];while(_0x500516!==null){if(_0x32f984[_0x48c2('0xab9')](_0x500516['type'],_0x32f984[_0x48c2('0xaba')])){_0x574dec=!![];break;};_0x500516=_0x500516[_0x48c2('0xaac')]();}if(!_0x574dec){this[_0x48c2('0xab0')][_0x48c2('0xab1')]();this[_0x48c2('0xab2')](_0x32f984[_0x48c2('0xabb')]);}else{this[_0x48c2('0xab2')](null);}});});Blockly['defineBlocksWithJsonArray']([{'type':_0x48c2('0xabc'),'message0':_0x48c2('0xabd'),'args0':[],'previousStatement':null,'colour':'#3e3e3e','tooltip':'','helpUrl':'','extensions':['tradeagain_onchange']}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')]['tradeagain']=function(_0x1d9d49,_0x6fd05d){var _0x1a0661={'ONGOu':_0x48c2('0xaa7')};var _0x5c569d=_0x1a0661[_0x48c2('0xabe')];return _0x5c569d;};Blockly['Extensions'][_0x48c2('0xaa8')](_0x48c2('0xabf'),function(){var _0x4b605b={'hyYwZ':function(_0x2bcdad,_0x5420d2){return _0x2bcdad!==_0x5420d2;},'TZMOa':function(_0x4cefbd,_0x4b3d09){return _0x4cefbd===_0x4b3d09;},'sJHHT':_0x48c2('0x725'),'rWWZb':'\x22Trade\x20Again\x22\x20must\x20inside\x20BLOCK\x204'};this['setOnChange'](function(_0x853c86){if(this[_0x48c2('0xaab')]['isDragging']())return;let _0x5b77d8,_0xbe74f3;_0x5b77d8=this[_0x48c2('0xaac')]();_0xbe74f3=![];while(_0x4b605b[_0x48c2('0xac0')](_0x5b77d8,null)){if(_0x4b605b['TZMOa'](_0x5b77d8[_0x48c2('0xac1')],_0x4b605b['sJHHT'])){_0xbe74f3=!![];break;};_0x5b77d8=_0x5b77d8['getSurroundParent']();}if(!_0xbe74f3){this[_0x48c2('0xab0')][_0x48c2('0xab1')]();this[_0x48c2('0xab2')](_0x4b605b[_0x48c2('0xac2')]);}else{this['setWarningText'](null);}});});Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0xac3'),'message0':_0x48c2('0xac4'),'args0':[],'previousStatement':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript['javascriptGenerator'][_0x48c2('0x6cf')][_0x48c2('0xac3')]=function(_0x7721a8,_0x11a867){var _0x17d186={'kmmpi':_0x48c2('0xac5')};var _0x33391c=_0x17d186[_0x48c2('0xac6')];return _0x33391c;};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0x181'),'message0':_0x48c2('0xac7'),'args0':[{'type':_0x48c2('0x6fd'),'name':_0x48c2('0xac8'),'options':[[_0x48c2('0xac9'),'number'],[_0x48c2('0xaca'),_0x48c2('0xacb')]]}],'output':null,'colour':'#3e3e3e','tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')][_0x48c2('0x181')]=function(_0x11267a,_0x441dba){var _0x40e2a9={'oeAJq':'tipe_nya','ZIwXq':function(_0x4b7ae4,_0x57bf33){return _0x4b7ae4==_0x57bf33;},'xjlcR':function(_0x447a32,_0x5d86e1){return _0x447a32+_0x5d86e1;},'glSfs':_0x48c2('0xacc')};var _0x4141bc=_0x11267a['getFieldValue'](_0x40e2a9[_0x48c2('0xacd')]);var _0x5a2227='';if(_0x40e2a9[_0x48c2('0xace')](_0x4141bc,'string')){_0x5a2227=_0x40e2a9['xjlcR']('\x22',summary_balance[_0x48c2('0x6c')][_0x48c2('0xe')]('\x20')[0x0])+'\x22';}else{_0x5a2227=_0x40e2a9[_0x48c2('0xacf')];}return[_0x5a2227,Blockly[_0x48c2('0x6e1')]['ORDER_NONE']];};Blockly[_0x48c2('0x6c8')]([{'type':'summary','message0':_0x48c2('0xad0'),'args0':[{'type':'field_dropdown','name':'data_nya','options':[[_0x48c2('0xad1'),_0x48c2('0xad2')],[_0x48c2('0xad3'),_0x48c2('0xad4')],[_0x48c2('0xad5'),_0x48c2('0xad6')],[_0x48c2('0xad7'),_0x48c2('0xad8')],[_0x48c2('0xad9'),_0x48c2('0xa9c')],[_0x48c2('0xada'),_0x48c2('0xadb')]]}],'output':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript['javascriptGenerator'][_0x48c2('0x6cf')]['summary']=function(_0x1a092e,_0x2940cd){var _0x24173f={'yoovh':function(_0x267daf,_0x484b7c){return _0x267daf+_0x484b7c;},'WqHGb':_0x48c2('0xadc'),'ZBRFt':_0x48c2('0xadd')};var _0x588e7e=_0x1a092e[_0x48c2('0x6f7')](_0x48c2('0xade'));var _0x5bfe8b=_0x24173f[_0x48c2('0xadf')](_0x24173f[_0x48c2('0xadf')](_0x24173f[_0x48c2('0xae0')],_0x588e7e),_0x24173f[_0x48c2('0xae1')]);return[_0x5bfe8b,Blockly['JavaScript'][_0x48c2('0x6e2')]];};const sleep=_0x4d381f=>{return new Promise(_0x4380c8=>setTimeout(_0x4380c8,_0x4d381f));};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0xae2'),'message0':'%1\x20Run\x20After\x20%2\x20Second(s)','args0':[{'type':'input_statement','name':_0x48c2('0xae3')},{'type':'input_value','name':'seconds_nya'}],'inputsInline':!![],'previousStatement':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')][_0x48c2('0xae2')]=function(_0x37d1bc,_0x5f3725){var _0x27f982={'uPrcL':_0x48c2('0xae4'),'euEmF':function(_0x3d97ec,_0x4c3929){return _0x3d97ec+_0x4c3929;},'pAHve':function(_0x5d3f10,_0x167661){return _0x5d3f10+_0x167661;},'hCiUi':_0x48c2('0xae5'),'sHira':_0x48c2('0xae6'),'WtTVQ':_0x48c2('0xae7')};var _0x4b5dc7=_0x5f3725[_0x48c2('0x6d8')](_0x37d1bc,_0x48c2('0xae3'));var _0x47be74=_0x5f3725['valueToCode'](_0x37d1bc,_0x27f982[_0x48c2('0xae8')],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);var _0x184dc1=_0x27f982['euEmF'](_0x27f982[_0x48c2('0xae9')](_0x27f982[_0x48c2('0xae9')](_0x27f982['hCiUi'],_0x47be74*0x3e8),_0x27f982[_0x48c2('0xaea')])+_0x4b5dc7,_0x27f982[_0x48c2('0xaeb')]);return _0x184dc1;};Blockly['defineBlocksWithJsonArray']([{'type':_0x48c2('0xaec'),'message0':_0x48c2('0xaed'),'args0':[{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x768'),'name':_0x48c2('0xaee')},{'type':'input_value','name':_0x48c2('0x816')}],'inputsInline':![],'output':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')][_0x48c2('0xaec')]=function(_0x2ed966,_0x1f20c7){var _0x2b743f={'KiHit':'inputlist_nya','bpQCU':_0x48c2('0x816'),'FoDLO':function(_0x587571,_0x2271b5){return _0x587571+_0x2271b5;},'xrthk':'calculateMovingAverage('};var _0x26f14b=_0x1f20c7[_0x48c2('0x76e')](_0x2ed966,_0x2b743f[_0x48c2('0xaef')],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);var _0x194531=_0x1f20c7[_0x48c2('0x76e')](_0x2ed966,_0x2b743f['bpQCU'],javascript['Order'][_0x48c2('0x771')]);var _0x974b54=_0x2b743f[_0x48c2('0xaf0')](_0x2b743f[_0x48c2('0xaf0')](_0x2b743f[_0x48c2('0xaf0')](_0x2b743f[_0x48c2('0xaf0')](_0x2b743f['xrthk'],_0x26f14b),','),_0x194531),')');return[_0x974b54,Blockly['JavaScript']['ORDER_NONE']];};Blockly[_0x48c2('0x6c8')]([{'type':_0x48c2('0xaf1'),'message0':_0x48c2('0xaf2'),'args0':[{'type':_0x48c2('0x6cb')},{'type':_0x48c2('0x768'),'name':'inputlist_nya'},{'type':_0x48c2('0x768'),'name':'period_nya'}],'inputsInline':![],'output':null,'colour':'#3e3e3e','tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')]['forBlock']['indicatorrsi']=function(_0x489ee3,_0x326567){var _0x25eed9={'OJtOJ':'period_nya','pTRaR':function(_0x5b58ef,_0x35bc16){return _0x5b58ef+_0x35bc16;},'jqoMJ':function(_0x494780,_0x46d3f3){return _0x494780+_0x46d3f3;},'DceeR':function(_0x27511e,_0x1be914){return _0x27511e+_0x1be914;},'vEEOe':_0x48c2('0xaf3')};var _0x214db9=_0x326567[_0x48c2('0x76e')](_0x489ee3,_0x48c2('0xaee'),javascript[_0x48c2('0x770')][_0x48c2('0x771')]);var _0x3a3ea3=_0x326567['valueToCode'](_0x489ee3,_0x25eed9['OJtOJ'],javascript['Order']['ATOMIC']);var _0x89e854=_0x25eed9[_0x48c2('0xaf4')](_0x25eed9['jqoMJ'](_0x25eed9[_0x48c2('0xaf5')](_0x25eed9[_0x48c2('0xaf6')],_0x214db9),','),_0x3a3ea3)+')';return[_0x89e854,Blockly[_0x48c2('0x6e1')][_0x48c2('0x6e2')]];};Blockly['defineBlocksWithJsonArray']([{'type':_0x48c2('0xaf7'),'message0':'Bollinger\x20Bands\x20[Upper,Middle,Lower]\x20%1\x20Input\x20List\x20%2\x20Period\x20%3\x20Standard\x20Deviation\x20%4','args0':[{'type':'input_end_row'},{'type':_0x48c2('0x768'),'name':_0x48c2('0xaee')},{'type':_0x48c2('0x768'),'name':_0x48c2('0x816')},{'type':_0x48c2('0x768'),'name':'stddev_nya'}],'inputsInline':![],'output':null,'colour':_0x48c2('0x641'),'tooltip':'','helpUrl':''}]);javascript[_0x48c2('0x6ce')][_0x48c2('0x6cf')][_0x48c2('0xaf7')]=function(_0x37cca1,_0x50f8e4){var _0x2f4d6a={'xsJlC':_0x48c2('0xaf8'),'pSlWH':_0x48c2('0xaee'),'tJWaG':function(_0x57e0b2,_0x4d7129){return _0x57e0b2+_0x4d7129;},'AzeCd':function(_0x3851a6,_0x297bf6){return _0x3851a6+_0x297bf6;},'QAmlX':function(_0x55eeca,_0x4dbe75){return _0x55eeca+_0x4dbe75;}};var _0x28632d=_0x2f4d6a[_0x48c2('0xaf9')]['split']('|'),_0x1b6555=0x0;while(!![]){switch(_0x28632d[_0x1b6555++]){case'0':var _0x39e414=_0x50f8e4['valueToCode'](_0x37cca1,_0x48c2('0xafa'),javascript[_0x48c2('0x770')][_0x48c2('0x771')]);continue;case'1':var _0x2c569a=_0x50f8e4['valueToCode'](_0x37cca1,_0x2f4d6a[_0x48c2('0xafb')],javascript[_0x48c2('0x770')][_0x48c2('0x771')]);continue;case'2':return[_0x3ccd59,Blockly[_0x48c2('0x6e1')][_0x48c2('0x6e2')]];case'3':var _0x167987=_0x50f8e4[_0x48c2('0x76e')](_0x37cca1,_0x48c2('0x816'),javascript['Order'][_0x48c2('0x771')]);continue;case'4':var _0x3ccd59=_0x2f4d6a[_0x48c2('0xafc')](_0x2f4d6a['tJWaG'](_0x2f4d6a[_0x48c2('0xafd')](_0x2f4d6a[_0x48c2('0xafe')](_0x2f4d6a['QAmlX'](_0x48c2('0xaff'),_0x2c569a),','),_0x167987),',')+_0x39e414,')');continue;}break;}};const blockly_reset=()=>{var _0x4fd2f4={'LmtJe':function(_0x175165,_0x2292d6){return _0x175165(_0x2292d6);},'QMqdw':_0x48c2('0xb00'),'KoWuO':_0x48c2('0xb01')};if(_0x4fd2f4[_0x48c2('0xb02')](confirm,_0x4fd2f4[_0x48c2('0xb03')])){Blockly[_0x48c2('0x4cf')]()['clear']();Blockly[_0x48c2('0x623')][_0x48c2('0x624')][_0x48c2('0x625')](JSON[_0x48c2('0xad')](initWorkspaceBlock),Blockly[_0x48c2('0x4cf')]());localStorage['setItem']('mainRobotName','-');spanSimpleRobotName[_0x48c2('0x6c')]=_0x4fd2f4[_0x48c2('0xb04')];}};if(localStorage[_0x48c2('0x62')](_0x48c2('0xb05'))!=null){Blockly[_0x48c2('0x623')][_0x48c2('0x624')][_0x48c2('0x625')](JSON[_0x48c2('0xad')](localStorage[_0x48c2('0x62')](_0x48c2('0xb05'))),Blockly[_0x48c2('0x4cf')]());}else{Blockly['serialization'][_0x48c2('0x624')][_0x48c2('0x625')](JSON[_0x48c2('0xad')](initWorkspaceBlock),Blockly['getMainWorkspace']());}const blockly_save=()=>{var _0x5b099c={'qlqzR':function(_0x2b8850,_0x40b7c8,_0x2e2674){return _0x2b8850(_0x40b7c8,_0x2e2674);},'zHiNu':_0x48c2('0xb06')};const _0x1830f4=Blockly[_0x48c2('0x623')]['workspaces'][_0x48c2('0xb07')](Blockly['getMainWorkspace']());_0x5b099c[_0x48c2('0xb08')](saveJsonObjToFile,_0x1830f4,_0x5b099c[_0x48c2('0xb09')]);};const blockly_workspaceChangedResponse=_0x760322=>{const _0x4eded6=Blockly[_0x48c2('0x623')]['workspaces'][_0x48c2('0xb07')](Blockly[_0x48c2('0x4cf')]());localStorage[_0x48c2('0x5f')]('blockly_workspace_state',JSON[_0x48c2('0x16a')](_0x4eded6));};const blockly_undo=()=>{Blockly[_0x48c2('0x4cf')]()['undo'](![]);};const blockly_redo=()=>{Blockly[_0x48c2('0x4cf')]()[_0x48c2('0xb0a')](!![]);};const blockly_arrange=()=>{Blockly[_0x48c2('0x4cf')]()[_0x48c2('0xb0b')]();};dragElement(document[_0x48c2('0x2d')](_0x48c2('0xb0c')));dragElement(document[_0x48c2('0x2d')](_0x48c2('0xb0d')));function dragElement(_0x147ada){var _0x37819d={'eiQtE':_0x48c2('0xb0e'),'CZBAp':function(_0x46cbc3,_0x47f881){return _0x46cbc3+_0x47f881;},'EhEvv':function(_0x390bee,_0x62e502){return _0x390bee-_0x62e502;},'LMoYV':function(_0x3829d2,_0x35af52){return _0x3829d2-_0x35af52;},'pjfkG':function(_0x58a4c9,_0xa33819){return _0x58a4c9-_0xa33819;},'gkFwM':function(_0x2abeae,_0x213ca9){return _0x2abeae<_0x213ca9;},'sxkmF':function(_0x560ca2,_0x541409){return _0x560ca2*_0x541409;},'PahzO':function(_0x2467fb,_0x215056){return _0x2467fb+_0x215056;},'xtiIZ':function(_0x1531b5,_0x1f0986){return _0x1531b5+_0x1f0986;},'ZpTzP':_0x48c2('0xb0f')};var _0x4740b6=0x0,_0x2f332e=0x0,_0x117deb=0x0,_0x13db5a=0x0;if(document[_0x48c2('0x2d')](_0x37819d[_0x48c2('0xb10')](_0x147ada['id'],_0x37819d[_0x48c2('0xb11')]))){document[_0x48c2('0x2d')](_0x147ada['id']+_0x37819d[_0x48c2('0xb11')])[_0x48c2('0xb12')]=_0x4f921b;}else{_0x147ada[_0x48c2('0xb12')]=_0x4f921b;}function _0x4f921b(_0x534250){var _0x480b24=_0x48c2('0xb13')[_0x48c2('0xe')]('|'),_0x1a52dc=0x0;while(!![]){switch(_0x480b24[_0x1a52dc++]){case'0':_0x534250=_0x534250||window[_0x48c2('0xb14')];continue;case'1':_0x117deb=_0x534250[_0x48c2('0xb15')];continue;case'2':document[_0x48c2('0xb16')]=_0x514711;continue;case'3':document[_0x48c2('0xb17')]=_0x4c1874;continue;case'4':_0x13db5a=_0x534250['clientY'];continue;case'5':_0x534250[_0x48c2('0x602')]();continue;}break;}}function _0x514711(_0x320ed9){var _0x169a36=_0x37819d[_0x48c2('0xb18')][_0x48c2('0xe')]('|'),_0xd240c5=0x0;while(!![]){switch(_0x169a36[_0xd240c5++]){case'0':_0x147ada[_0x48c2('0x7d')]['left']=_0x37819d[_0x48c2('0xb19')](_0x37819d[_0x48c2('0xb1a')](_0x147ada[_0x48c2('0xb1b')],_0x4740b6),'px');continue;case'1':_0x4740b6=_0x37819d[_0x48c2('0xb1c')](_0x117deb,_0x320ed9[_0x48c2('0xb15')]);continue;case'2':_0x320ed9=_0x320ed9||window[_0x48c2('0xb14')];continue;case'3':_0x2f332e=_0x37819d[_0x48c2('0xb1d')](_0x13db5a,_0x320ed9[_0x48c2('0xb1e')]);continue;case'4':_0x320ed9[_0x48c2('0x602')]();continue;case'5':if(_0x37819d[_0x48c2('0xb1f')](_0x147ada[_0x48c2('0xb20')],_0x37819d[_0x48c2('0xb21')](_0x147ada[_0x48c2('0xb22')],0.5))){_0x147ada[_0x48c2('0x7d')][_0x48c2('0xb23')]=_0x37819d[_0x48c2('0xb24')](_0x147ada[_0x48c2('0xb22')]*0.5,'px');}continue;case'6':_0x117deb=_0x320ed9[_0x48c2('0xb15')];continue;case'7':_0x147ada[_0x48c2('0x7d')][_0x48c2('0xb23')]=_0x37819d[_0x48c2('0xb24')](_0x147ada[_0x48c2('0xb20')]-_0x2f332e,'px');continue;case'8':if(_0x37819d[_0x48c2('0xb1f')](_0x147ada['offsetLeft'],_0x37819d[_0x48c2('0xb21')](-_0x147ada[_0x48c2('0xb25')],0.4))){_0x147ada[_0x48c2('0x7d')]['left']=_0x37819d['xtiIZ'](_0x37819d[_0x48c2('0xb21')](-_0x147ada['offsetWidth'],0.4),'px');}continue;case'9':_0x13db5a=_0x320ed9[_0x48c2('0xb1e')];continue;}break;}}function _0x4c1874(){document[_0x48c2('0xb17')]=null;document[_0x48c2('0xb16')]=null;}}const moveBoxSummaryTop=()=>{var _0x71231e={'cWnJK':_0x48c2('0xb0d'),'yVgaY':'mydivSummary'};document[_0x48c2('0x2d')](_0x71231e[_0x48c2('0xb26')])['style'][_0x48c2('0xb27')]=0x65;document[_0x48c2('0x2d')](_0x71231e['yVgaY'])[_0x48c2('0x7d')][_0x48c2('0xb27')]=0x66;};const moveBoxLogTop=()=>{var _0x3c83ca={'WebMm':_0x48c2('0xb0c'),'TGpxk':_0x48c2('0xb0d')};document[_0x48c2('0x2d')](_0x3c83ca['WebMm'])[_0x48c2('0x7d')][_0x48c2('0xb27')]=0x65;document[_0x48c2('0x2d')](_0x3c83ca[_0x48c2('0xb28')])[_0x48c2('0x7d')][_0x48c2('0xb27')]=0x66;};const clearBoxSummary=()=>{var _0x416b61={'gywHc':function(_0x1f373a,_0x3d6826){return _0x1f373a<_0x3d6826;},'zpjdW':function(_0x37cf46,_0x11c5c8){return _0x37cf46!=_0x11c5c8;},'nlKNx':_0x48c2('0xb29'),'qbENk':function(_0x5e1746,_0x34a488){return _0x5e1746(_0x34a488);},'PILGO':_0x48c2('0xb2a'),'uNQUA':'tableSummaryTBODY'};let _0x3e4f20=![];for(i=0x0;_0x416b61['gywHc'](i,prContract[_0x48c2('0x12')]);i++){if(_0x416b61['zpjdW'](prContract[i],0x0)){_0x3e4f20=!![];break;};};if(_0x3e4f20){writeLog('',_0x416b61['nlKNx']);return;}if(_0x416b61['qbENk'](confirm,_0x48c2('0xb2b'))){var _0x5cfe6c=_0x416b61[_0x48c2('0xb2c')]['split']('|'),_0xa05f7e=0x0;while(!![]){switch(_0x5cfe6c[_0xa05f7e++]){case'0':totalProfit=0x0;continue;case'1':loseContract=[];continue;case'2':document[_0x48c2('0x2d')](_0x416b61[_0x48c2('0xb2d')])[_0x48c2('0x4ee')]=_0x48c2('0xb2e');continue;case'3':summary_noofruns['innerText']=summary_totalstake[_0x48c2('0x6c')]=summary_totalpayout[_0x48c2('0x6c')]=summary_win[_0x48c2('0x6c')]=summary_loss[_0x48c2('0x6c')]=summary_totalprofitloss[_0x48c2('0x6c')]=0x0;continue;case'4':tempLossInARow=0x0;continue;case'5':winContract=[];continue;case'6':tempWinInARow=0x0;continue;}break;}}};const showBoxSummary=()=>{var _0x1b4fe={'HlQMy':_0x48c2('0xb0c'),'jzWEk':function(_0x37b511){return _0x37b511();}};document[_0x48c2('0x2d')](_0x1b4fe['HlQMy'])[_0x48c2('0x7d')][_0x48c2('0x3b1')]=_0x48c2('0x384');_0x1b4fe[_0x48c2('0xb2f')](moveBoxSummaryTop);};const closeBoxSummary=()=>{var _0x5a7a90={'LEJhe':_0x48c2('0xb0c')};document[_0x48c2('0x2d')](_0x5a7a90['LEJhe'])[_0x48c2('0x7d')][_0x48c2('0x3b1')]='none';};closeBoxSummary();const clearBoxLog=()=>{var _0x4f6719={'xsxqH':'tableLogTBODY'};document[_0x48c2('0x2d')](_0x4f6719[_0x48c2('0xb30')])[_0x48c2('0x4ee')]=_0x48c2('0xb31');};const showBoxLog=()=>{var _0x223376={'OhHaQ':_0x48c2('0xb32'),'LawVs':function(_0x26ce85){return _0x26ce85();}};document['getElementById'](_0x48c2('0xb0d'))[_0x48c2('0x7d')][_0x48c2('0x3b1')]=_0x223376[_0x48c2('0xb33')];_0x223376[_0x48c2('0xb34')](moveBoxLogTop);};const closeBoxLog=()=>{var _0x33446a={'xceQu':_0x48c2('0x357')};document[_0x48c2('0x2d')]('mydivLog')['style'][_0x48c2('0x3b1')]=_0x33446a['xceQu'];};closeBoxLog();const hideshowsidebar=()=>{var _0x4db24d={'nVYNj':function(_0x564acd,_0x31d9b0){return _0x564acd===_0x31d9b0;},'BNQhz':_0x48c2('0xb35'),'LClxH':_0x48c2('0xb36'),'pvuGi':_0x48c2('0xb37'),'bAMgo':_0x48c2('0xb38'),'ynkwO':'0%\x200%\x20auto','YIuNr':_0x48c2('0xb39'),'DmOPq':_0x48c2('0xb3a'),'xULow':function(_0x231077,_0x4edba5,_0x17837e){return _0x231077(_0x4edba5,_0x17837e);}};if(_0x4db24d[_0x48c2('0xb3b')](document[_0x48c2('0x2d')](_0x48c2('0xb36'))[_0x48c2('0x3ab')][_0x48c2('0xe')]('/')['pop'](),_0x4db24d[_0x48c2('0xb3c')])){document['getElementById'](_0x4db24d[_0x48c2('0xb3d')])[_0x48c2('0x3ab')]=_0x4db24d[_0x48c2('0xb3e')];document[_0x48c2('0x2d')](_0x4db24d[_0x48c2('0xb3f')])[_0x48c2('0x7d')]['gridTemplateColumns']=_0x4db24d[_0x48c2('0xb40')];}else{document[_0x48c2('0x2d')](_0x4db24d[_0x48c2('0xb3d')])[_0x48c2('0x3ab')]=_0x4db24d[_0x48c2('0xb41')];document[_0x48c2('0x2d')](_0x4db24d['bAMgo'])['style']['gridTemplateColumns']=_0x4db24d[_0x48c2('0xb42')];}_0x4db24d[_0x48c2('0xb43')](setTimeout,()=>{Blockly['svgResize'](Blockly[_0x48c2('0x4cf')]());},0x258);};const hideshowdatabox=()=>{var _0x5dc8cb={'uaFaA':function(_0x43be2c,_0x2b8cf2){return _0x43be2c===_0x2b8cf2;},'nSpaX':'btn_hideshowdatabox','ekmZX':_0x48c2('0xb44'),'fQptB':_0x48c2('0xb38'),'cmaal':_0x48c2('0xb45'),'iODOy':_0x48c2('0xb46')};if(_0x5dc8cb[_0x48c2('0xb47')](document[_0x48c2('0x2d')](_0x5dc8cb[_0x48c2('0xb48')])[_0x48c2('0x3ab')][_0x48c2('0xe')]('/')[_0x48c2('0x3ac')](),_0x48c2('0xb49'))){document[_0x48c2('0x2d')]('btn_hideshowdatabox')[_0x48c2('0x3ab')]=_0x5dc8cb[_0x48c2('0xb4a')];document['getElementById'](_0x5dc8cb[_0x48c2('0xb4b')])[_0x48c2('0x7d')][_0x48c2('0xb4c')]='7%\x2093%\x200%';}else{document['getElementById'](_0x5dc8cb['nSpaX'])[_0x48c2('0x3ab')]=_0x5dc8cb[_0x48c2('0xb4d')];document[_0x48c2('0x2d')](_0x5dc8cb[_0x48c2('0xb4b')])[_0x48c2('0x7d')][_0x48c2('0xb4c')]=_0x5dc8cb[_0x48c2('0xb4e')];}setTimeout(()=>{Blockly['svgResize'](Blockly[_0x48c2('0x4cf')]());},0x258);};const hideshowtoolbox=()=>{var _0x3f8ea6={'AthrR':_0x48c2('0xb4f'),'OfcxJ':'icon_hidetoolbox.png','BzqlC':_0x48c2('0xb50')};if(document[_0x48c2('0x2d')](_0x3f8ea6[_0x48c2('0xb51')])[_0x48c2('0x3ab')][_0x48c2('0xe')]('/')[_0x48c2('0x3ac')]()===_0x3f8ea6[_0x48c2('0xb52')]){document[_0x48c2('0x2d')](_0x3f8ea6[_0x48c2('0xb51')])[_0x48c2('0x3ab')]=_0x3f8ea6[_0x48c2('0xb53')];Blockly['getMainWorkspace']()['getToolbox']()['setVisible'](![]);}else{document['getElementById'](_0x3f8ea6['AthrR'])[_0x48c2('0x3ab')]=_0x48c2('0xb54');Blockly[_0x48c2('0x4cf')]()[_0x48c2('0xb55')]()[_0x48c2('0xb56')](!![]);}setTimeout(()=>{Blockly[_0x48c2('0xb57')](Blockly['getMainWorkspace']());},0x0);};const switchtosimplemode=()=>{var _0x796b94={'OKsJx':_0x48c2('0xb58'),'ErtOu':function(_0xcb6d97,_0x5a0756,_0x50972a){return _0xcb6d97(_0x5a0756,_0x50972a);},'nphPj':'initStateMode','FOwAj':_0x48c2('0xb59')};document['getElementById']('body_main')[_0x48c2('0x7d')]['gridTemplateColumns']=_0x796b94[_0x48c2('0xb5a')];_0x796b94[_0x48c2('0xb5b')](setTimeout,()=>{Blockly['svgResize'](Blockly[_0x48c2('0x4cf')]());},0x258);localStorage[_0x48c2('0x5f')](_0x796b94[_0x48c2('0xb5c')],_0x796b94['FOwAj']);};const switchtoadvancedmode=()=>{var _0x321b91={'uATMb':_0x48c2('0xb3a'),'llbiy':function(_0x445ec9,_0x2f33a2,_0x509bff){return _0x445ec9(_0x2f33a2,_0x509bff);},'QacYm':'initStateMode','mtiuT':_0x48c2('0xb5d')};document['getElementById'](_0x48c2('0xb38'))[_0x48c2('0x7d')]['gridTemplateColumns']=_0x321b91[_0x48c2('0xb5e')];_0x321b91[_0x48c2('0xb5f')](setTimeout,()=>{Blockly[_0x48c2('0xb57')](Blockly[_0x48c2('0x4cf')]());},0x258);localStorage[_0x48c2('0x5f')](_0x321b91[_0x48c2('0xb60')],_0x321b91[_0x48c2('0xb61')]);};const updateStatusBotRunning=_0x34738c=>{document[_0x48c2('0x2d')](_0x48c2('0xb62'))[_0x48c2('0x6c')]=_0x34738c;};const selMoneyManagementChanged=()=>{var _0x55a315={'vUDZw':function(_0xaba7a9,_0x23d89c){return _0xaba7a9==_0x23d89c;},'nlQJa':'smartcyclestake','nrXMU':_0x48c2('0xb63')};if(selMoneyManagement['value']==_0x48c2('0x5ab')){var _0x53abd2='3|2|0|1|4'[_0x48c2('0xe')]('|'),_0x4409da=0x0;while(!![]){switch(_0x53abd2[_0x4409da++]){case'0':divInpMartiFactor[_0x48c2('0x4d5')]=![];continue;case'1':divInpCycleStake[_0x48c2('0x4d5')]=!![];continue;case'2':divInpInitStake[_0x48c2('0x4d5')]=![];continue;case'3':lblInpInitStake[_0x48c2('0x6c')]=_0x48c2('0xb64');continue;case'4':divChkSmart[_0x48c2('0x4d5')]=![];continue;}break;}}else if(_0x55a315[_0x48c2('0xb65')](selMoneyManagement[_0x48c2('0xb')],_0x55a315[_0x48c2('0xb66')])){divInpInitStake[_0x48c2('0x4d5')]=!![];divInpMartiFactor[_0x48c2('0x4d5')]=!![];divInpCycleStake[_0x48c2('0x4d5')]=![];divChkSmart[_0x48c2('0x4d5')]=![];}else if(_0x55a315['vUDZw'](selMoneyManagement[_0x48c2('0xb')],_0x55a315[_0x48c2('0xb67')])){lblInpInitStake[_0x48c2('0x6c')]='Fixed\x20stake';divInpInitStake[_0x48c2('0x4d5')]=![];divInpMartiFactor[_0x48c2('0x4d5')]=!![];divInpCycleStake[_0x48c2('0x4d5')]=!![];divChkSmart['hidden']=!![];}};selMoneyManagementChanged();const getStakeBegin=()=>{var _0x53ca0b={'HMMoK':function(_0x327412,_0x1ad989){return _0x327412==_0x1ad989;},'WTXXS':_0x48c2('0x587')};tempLossInARow=0x0;if(_0x53ca0b['HMMoK'](selMoneyManagement[_0x48c2('0xb')],'smartmartingale')){return inpInitStake[_0x48c2('0xb')];}else if(selMoneyManagement[_0x48c2('0xb')]==_0x53ca0b[_0x48c2('0xb68')]){posCycleStake=0x0;return inpCycleStake[_0x48c2('0xb')]['split'](',')[posCycleStake];}else if(_0x53ca0b['HMMoK'](selMoneyManagement['value'],'fixedstake')){return inpInitStake['value'];}};const getStakeAfterLose=_0x368e04=>{var _0x2022ab={'NgldK':function(_0x96a12f,_0x5b461f){return _0x96a12f==_0x5b461f;},'gYyZo':'smartmartingale','uejzC':function(_0x522784,_0x168b30){return _0x522784*_0x168b30;},'sqSqX':_0x48c2('0x587'),'tFjfw':function(_0x5a487b,_0x359dc2){return _0x5a487b<_0x359dc2;},'sFDXC':function(_0x531ee7,_0x3922e6){return _0x531ee7-_0x3922e6;},'GhaRb':function(_0x1fa7fe,_0x27554e){return _0x1fa7fe==_0x27554e;},'eAYXb':_0x48c2('0xb63')};if(_0x2022ab[_0x48c2('0xb69')](selMoneyManagement[_0x48c2('0xb')],_0x2022ab[_0x48c2('0xb6a')])){return _0x2022ab[_0x48c2('0xb6b')](_0x368e04,inpMartiFactor[_0x48c2('0xb')]);}else if(selMoneyManagement[_0x48c2('0xb')]==_0x2022ab[_0x48c2('0xb6c')]){if(_0x2022ab[_0x48c2('0xb6d')](posCycleStake,_0x2022ab[_0x48c2('0xb6e')](inpCycleStake[_0x48c2('0xb')][_0x48c2('0xe')](',')[_0x48c2('0x12')],0x1))){posCycleStake++;}else{posCycleStake=0x0;}return inpCycleStake[_0x48c2('0xb')][_0x48c2('0xe')](',')[posCycleStake];}else if(_0x2022ab['GhaRb'](selMoneyManagement[_0x48c2('0xb')],_0x2022ab['eAYXb'])){return inpInitStake['value'];}};const loadStrategy=_0xd20d5=>{var _0x463895={'OJYwm':function(_0x1b48df,_0x40b5e1){return _0x1b48df==_0x40b5e1;},'PaiXq':'selectstrategy','YKCNW':_0x48c2('0xb6f'),'QMHiw':function(_0x2b1c05,_0x5d7f7d){return _0x2b1c05(_0x5d7f7d);},'iFhYz':_0x48c2('0xb70'),'xvJsI':_0x48c2('0xb71'),'zDXzb':function(_0x467e2f,_0x3afa5f){return _0x467e2f+_0x3afa5f;},'OMARH':_0x48c2('0xb72'),'DusMg':'.block','ypxXT':_0x48c2('0xb73')};if(_0x463895['OJYwm'](_0xd20d5,_0x463895['PaiXq']))return;if(_0xd20d5==_0x463895[_0x48c2('0xb74')]){_0x463895[_0x48c2('0xb75')](alert,_0x463895[_0x48c2('0xb76')]);return;}if(confirm(_0x463895[_0x48c2('0xb77')])){localStorage;$[_0x48c2('0xb78')](_0x463895[_0x48c2('0xb79')](_0x463895['zDXzb'](_0x463895[_0x48c2('0xb7a')],_0xd20d5),_0x463895['DusMg']),function(_0x34c2c6){Blockly[_0x48c2('0x623')][_0x48c2('0x624')][_0x48c2('0x625')](_0x34c2c6,Blockly[_0x48c2('0x4cf')]());});}else{document[_0x48c2('0x2d')](_0x463895[_0x48c2('0xb7b')])[_0x48c2('0xb')]=_0x463895[_0x48c2('0xb7c')];}};const loadRobot=(_0x18013c,_0x232873)=>{var _0x148a1d={'OIRUi':_0x48c2('0xb7d'),'DZxqQ':_0x48c2('0xb7e'),'arcDr':_0x48c2('0x508'),'YdLAX':function(_0x5eefa9,_0x5d86e5){return _0x5eefa9+_0x5d86e5;},'rOczZ':function(_0x737003,_0x151d82){return _0x737003+_0x151d82;},'RHpiN':_0x48c2('0xb7f'),'pwAiJ':'divPopupRobot','IvuvF':_0x48c2('0x357'),'IQaQf':_0x48c2('0x507')};if(confirm(_0x148a1d[_0x48c2('0xb80')])){var _0x5695a5=_0x148a1d[_0x48c2('0xb81')][_0x48c2('0xe')]('|'),_0x317328=0x0;while(!![]){switch(_0x5695a5[_0x317328++]){case'0':localStorage;continue;case'1':localStorage[_0x48c2('0x5f')](_0x148a1d[_0x48c2('0xb82')],_0x18013c);continue;case'2':$['getJSON'](_0x148a1d[_0x48c2('0xb83')](_0x148a1d[_0x48c2('0xb84')](_0x48c2('0xb85'),_0x232873),_0x148a1d[_0x48c2('0xb86')]),function(_0x4d7439){Blockly['serialization']['workspaces'][_0x48c2('0x625')](_0x4d7439,Blockly[_0x48c2('0x4cf')]());});continue;case'3':document[_0x48c2('0x2d')](_0x148a1d[_0x48c2('0xb87')])[_0x48c2('0x7d')][_0x48c2('0x3b1')]=_0x148a1d[_0x48c2('0xb88')];continue;case'4':spanSimpleRobotName[_0x48c2('0x6c')]=_0x148a1d['IQaQf']+_0x18013c;continue;}break;}}else{}};const rgbToHex=_0x497a8a=>{var _0x4c16e7={'aRsCc':function(_0x5b5150,_0x2d18a5){return _0x5b5150==_0x2d18a5;},'PrtLj':function(_0x29995a,_0x256893,_0x179d20){return _0x29995a(_0x256893,_0x179d20);},'txjzM':function(_0x326b6d,_0x2ef40d){return _0x326b6d==_0x2ef40d;},'QTiFv':_0x48c2('0xb89'),'ZCIKr':function(_0x53ac8a,_0x42081b){return _0x53ac8a==_0x42081b;},'KCoTO':function(_0x4655d8,_0x4d66e3){return _0x4655d8+_0x4d66e3;}};if(_0x4c16e7[_0x48c2('0xb8a')](_0x497a8a[_0x48c2('0x485')](0x0),'r')){var _0x39ee12=_0x48c2('0xb8b')[_0x48c2('0xe')]('|'),_0x509916=0x0;while(!![]){switch(_0x39ee12[_0x509916++]){case'0':var _0x136eda=_0x4c16e7[_0x48c2('0xb8c')](parseInt,_0x497a8a[0x1],0xa)['toString'](0x10);continue;case'1':_0x136eda=_0x4c16e7['txjzM'](_0x136eda[_0x48c2('0x12')],0x1)?'0'+_0x136eda:_0x136eda;continue;case'2':var _0x2f7cd4=_0x4c16e7[_0x48c2('0xb8c')](parseInt,_0x497a8a[0x0],0xa)[_0x48c2('0x89a')](0x10);continue;case'3':var _0x3b6056=parseInt(_0x497a8a[0x2],0xa)[_0x48c2('0x89a')](0x10);continue;case'4':_0x497a8a=_0x497a8a[_0x48c2('0x8b')](_0x4c16e7[_0x48c2('0xb8d')],'')[_0x48c2('0x8b')](')','')[_0x48c2('0xe')](',');continue;case'5':_0x3b6056=_0x3b6056[_0x48c2('0x12')]==0x1?'0'+_0x3b6056:_0x3b6056;continue;case'6':return _0xa07378;case'7':_0x2f7cd4=_0x4c16e7[_0x48c2('0xb8e')](_0x2f7cd4[_0x48c2('0x12')],0x1)?_0x4c16e7['KCoTO']('0',_0x2f7cd4):_0x2f7cd4;continue;case'8':var _0xa07378='#'+_0x2f7cd4+_0x136eda+_0x3b6056;continue;}break;}}};const fillDataLastCont=(_0x2c5093,_0x5b261a,_0x56d895,_0x104bfd,_0x9644a2,_0xdfe7d8,_0x26b8df,_0x58c79b,_0x2111f0,_0x2fb083,_0x1d15af,_0x31a3a0,_0x2e6324)=>{var _0x1a3c0f={'fNwzf':_0x48c2('0xb8f'),'yxTyx':function(_0x266fcc,_0x299c66){return _0x266fcc*_0x299c66;},'VTUCp':function(_0x3adf31,_0x188c5b){return _0x3adf31>=_0x188c5b;},'BTQNp':function(_0x448ed3,_0x497715){return _0x448ed3>=_0x497715;},'fDYcM':_0x48c2('0xa9c')};var _0x49d47b=_0x1a3c0f[_0x48c2('0xb90')][_0x48c2('0xe')]('|'),_0xbc9b8=0x0;while(!![]){switch(_0x49d47b[_0xbc9b8++]){case'0':lastCont_entryvalue=_0xdfe7d8;continue;case'1':lastCont_askprice=_0x2c5093;continue;case'2':lastCont_profit=_0x56d895;continue;case'3':lastCont_exitvalue=_0x2111f0;continue;case'4':lastCont_payout=_0x5b261a;continue;case'5':lastCont_exittime=new Date(_0x1a3c0f[_0x48c2('0xb91')](_0x58c79b,0x3e8));continue;case'6':lastCont_barrier=_0x1d15af;continue;case'7':lastCont_result=_0x2e6324?_0x1a3c0f[_0x48c2('0xb92')](_0x56d895,0x0)?'virtualwin':_0x48c2('0xaa0'):_0x1a3c0f['BTQNp'](_0x56d895,0x0)?_0x48c2('0xad8'):_0x1a3c0f[_0x48c2('0xb93')];continue;case'8':lastCont_entryvaluestring=_0x26b8df;continue;case'9':lastCont_contracttype=_0x104bfd;continue;case'10':lastCont_entrytime=new Date(_0x1a3c0f[_0x48c2('0xb91')](_0x9644a2,0x3e8));continue;case'11':lastCont_exitvaluestring=_0x2fb083;continue;}break;}};$(document)['ready'](function(){var _0x452376={'QbxIK':function(_0x2b338a,_0x8b6e09){return _0x2b338a(_0x8b6e09);},'mWGGp':function(_0x15ce36,_0x1054ec){return _0x15ce36>_0x1054ec;},'LcMCW':function(_0xd62da7,_0x508c50){return _0xd62da7(_0x508c50);},'HedDn':function(_0xe06450,_0x515e2b){return _0xe06450(_0x515e2b);},'PPXTY':function(_0x308795,_0x353d48){return _0x308795(_0x353d48);},'bACDL':function(_0x21a13e,_0x3d9977){return _0x21a13e(_0x3d9977);},'GZQeW':_0x48c2('0xb94')};_0x452376[_0x48c2('0xb95')]($,_0x452376[_0x48c2('0xb96')])['on']('keyup',function(){var _0x4dba6e=_0x452376[_0x48c2('0xb97')]($,this)['val']()[_0x48c2('0x63')]();_0x452376['PPXTY']($,_0x48c2('0xb98'))[_0x48c2('0xb99')](function(){_0x452376[_0x48c2('0xb9a')]($,this)[_0x48c2('0xb9b')](_0x452376[_0x48c2('0xb9c')](_0x452376[_0x48c2('0xb9d')]($,this)[_0x48c2('0x504')]()[_0x48c2('0x63')]()[_0x48c2('0x1c')](_0x4dba6e),-0x1));});});});const injectFunctionRobotTable=()=>{var _0x4e25c3={'IOgEw':function(_0x10a795,_0x102b68,_0x480883){return _0x10a795(_0x102b68,_0x480883);},'gtiBm':_0x48c2('0xb9e'),'ImqoA':function(_0x11ae8b,_0x3cfeaa){return _0x11ae8b<_0x3cfeaa;},'Snngx':_0x48c2('0xb9f')};var _0x4033ef=document[_0x48c2('0x2d')](_0x4e25c3[_0x48c2('0xba0')]);var _0x4519a2=_0x4033ef['getElementsByTagName']('tr');for(let _0x5b6a2e=0x0;_0x4e25c3['ImqoA'](_0x5b6a2e,_0x4519a2['length']);_0x5b6a2e++){let _0x125678=_0x4033ef[_0x48c2('0xba1')][_0x5b6a2e];_0x125678[_0x48c2('0xba2')]=()=>{_0x4e25c3[_0x48c2('0xba3')](loadRobot,_0x125678[_0x48c2('0x19c')][0x1]['innerText'],_0x125678[_0x48c2('0x19c')][0x0][_0x48c2('0x6c')]);};}document['getElementById'](_0x4e25c3[_0x48c2('0xba4')])['innerText']=document[_0x48c2('0x2d')](_0x4e25c3[_0x48c2('0xba0')])['rows']['length'];};injectFunctionRobotTable();const cekValidasiSlaveToken=()=>{var _0x856f51={'Ziiie':function(_0x27b779,_0x28b483){return _0x27b779>_0x28b483;},'xcTPu':function(_0x4fb0ce,_0x1292c8){return _0x4fb0ce==_0x1292c8;},'HicaT':function(_0x185ee9,_0x3f142f){return _0x185ee9===_0x3f142f;},'AYkEy':_0x48c2('0x37a'),'ZKgQv':function(_0x29fc60,_0x277e15){return _0x29fc60(_0x277e15);},'ltMzS':_0x48c2('0xba5')};if(chkVLose[_0x48c2('0x64')]&&_0x856f51[_0x48c2('0xba6')](inpVLose[_0x48c2('0xb')],0x0)&&_0x856f51[_0x48c2('0xba7')](inpSToken['value'][_0x48c2('0x12')],0x0)){if(_0x856f51[_0x48c2('0xba8')](btn_run[_0x48c2('0x3ab')][_0x48c2('0xe')]('/')[_0x48c2('0x3ac')](),_0x856f51[_0x48c2('0xba9')])){btn_run['click']();}chkVLose[_0x48c2('0x64')]=![];document[_0x48c2('0x2d')](_0x48c2('0xbaa'))[_0x48c2('0x7d')]['display']=_0x48c2('0x357');document['getElementById'](_0x48c2('0x4c3'))[_0x48c2('0x7d')][_0x48c2('0x3b1')]='block';inpSToken[_0x48c2('0x4cc')]();_0x856f51[_0x48c2('0xbab')](alert,_0x856f51[_0x48c2('0xbac')]);return;}};function getStatAccu(_0x44d2c0,_0x2d5d43,_0x5b8c39){var _0x158a7f={'fAvGx':function(_0x2958fc,_0x4b15a3){return _0x2958fc-_0x4b15a3;},'DGydU':'R_10','qWZnz':_0x48c2('0x25'),'UnStq':_0x48c2('0xbad'),'cOMLz':_0x48c2('0x93'),'KfytS':_0x48c2('0x91'),'zxUcT':_0x48c2('0xbae'),'zHfUg':_0x48c2('0x27'),'eJbjK':function(_0x1c3198,_0x2125c6){return _0x1c3198/_0x2125c6;},'LctbC':function(_0x273b79,_0x320e84){return _0x273b79-_0x320e84;},'sWlRp':function(_0x13756e,_0x5878f9){return _0x13756e+_0x5878f9;},'gBVTY':function(_0x2f9967,_0x479e5b){return _0x2f9967<_0x479e5b;},'oIYcQ':function(_0x4ec6f5,_0x25f462){return _0x4ec6f5>_0x25f462;},'AvGbq':function(_0x2f783b,_0x23287e){return _0x2f783b*_0x23287e;}};let _0x473d1c,_0x54d4ff;_0x54d4ff=_0x158a7f[_0x48c2('0xbaf')](_0x5b8c39*0x1,0x1);switch(_0x2d5d43){case _0x48c2('0xef'):_0x473d1c=[0.00433,0.00405,0.0038,0.00361,0.00344][_0x54d4ff];break;case _0x158a7f['DGydU']:_0x473d1c=[0.00613,0.00573,0.00537,0.00511,0.00486][_0x54d4ff];break;case _0x158a7f[_0x48c2('0xbb0')]:_0x473d1c=[0.01083,0.01012,0.00949,0.00903,0.0086][_0x54d4ff];break;case _0x48c2('0x26'):_0x473d1c=[0.01531,0.01431,0.01342,0.01277,0.01216][_0x54d4ff];break;case _0x158a7f[_0x48c2('0xbb1')]:_0x473d1c=[0.02166,0.02024,0.01898,0.01806,0.01719][_0x54d4ff];break;case _0x158a7f[_0x48c2('0xbb2')]:_0x473d1c=[0.03063,0.02863,0.02685,0.02554,0.02431][_0x54d4ff];break;case _0x158a7f[_0x48c2('0xbb3')]:_0x473d1c=[0.03249,0.03036,0.02847,0.02709,0.02579][_0x54d4ff];break;case _0x48c2('0xfb'):_0x473d1c=[0.04594,0.04294,0.04027,0.03831,0.03647][_0x54d4ff];break;case _0x158a7f[_0x48c2('0xbb4')]:_0x473d1c=[0.04331,0.04048,0.03797,0.03612,0.03438][_0x54d4ff];break;case _0x158a7f[_0x48c2('0xbb5')]:_0x473d1c=[0.06126,0.05725,0.05369,0.05109,0.04863][_0x54d4ff];break;default:break;}let _0x2ce523,_0x59b7f9,_0xe1ed99,_0x4dabfc;_0x4dabfc=0x0;for(i=_0x158a7f['fAvGx'](_0x44d2c0['length'],0x1);i>0x0;i--){_0x2ce523=_0x158a7f[_0x48c2('0xbb6')](_0x44d2c0[_0x158a7f[_0x48c2('0xbb7')](i,0x1)]*_0x473d1c,0x64);_0x59b7f9=_0x158a7f[_0x48c2('0xbb8')](_0x44d2c0[_0x158a7f[_0x48c2('0xbb7')](i,0x1)],_0x2ce523);_0xe1ed99=_0x158a7f[_0x48c2('0xbb7')](_0x44d2c0[_0x158a7f[_0x48c2('0xbb7')](i,0x1)],_0x2ce523);if(_0x158a7f['gBVTY'](_0x44d2c0[i],_0x59b7f9)&&_0x158a7f[_0x48c2('0xbb9')](_0x44d2c0[i],_0xe1ed99)){_0x4dabfc++;}else{break;}}return _0x158a7f[_0x48c2('0xbba')](_0x4dabfc,0x1);}const continuousindices_show=_0x1d24d1=>{var _0x5022ab={'vadeK':function(_0x553cd5,_0x61685){return _0x553cd5+_0x61685;},'xipGY':function(_0x2d4c17,_0xa4b816){return _0x2d4c17+_0xa4b816;},'OjVsb':_0x48c2('0x4a'),'xQiGT':_0x48c2('0x488'),'xvPAz':function(_0x300ad2,_0x5136dd){return _0x300ad2+_0x5136dd;},'CbsTi':function(_0x3f1697,_0x7acfe0){return _0x3f1697+_0x7acfe0;},'KGznd':_0x48c2('0x493'),'AIohX':function(_0x594a9f,_0x4ed83a){return _0x594a9f+_0x4ed83a;},'jxeOO':function(_0x391376,_0x115f9e){return _0x391376+_0x115f9e;},'yDLip':function(_0x49d5c4,_0x2276f1){return _0x49d5c4+_0x2276f1;}};document[_0x48c2('0x2d')](_0x5022ab[_0x48c2('0xbbb')](_0x5022ab[_0x48c2('0xbbc')](_0x5022ab[_0x48c2('0xbbd')],_0x1d24d1),_0x5022ab[_0x48c2('0xbbe')]))[_0x48c2('0xb')]=document[_0x48c2('0x2d')](_0x5022ab[_0x48c2('0xbbf')](_0x5022ab[_0x48c2('0xbc0')](_0x5022ab[_0x48c2('0xbbd')],_0x1d24d1),_0x5022ab['KGznd']))[_0x48c2('0xb')]='';document[_0x48c2('0x2d')](_0x5022ab[_0x48c2('0xbc1')](_0x5022ab['AIohX'](_0x48c2('0x4a'),_0x1d24d1),_0x5022ab['xQiGT']))['hidden']=document[_0x48c2('0x2d')](_0x5022ab[_0x48c2('0xbc2')](_0x5022ab[_0x48c2('0xbc3')](_0x5022ab['OjVsb'],_0x1d24d1),_0x5022ab[_0x48c2('0xbc4')]))[_0x48c2('0x4d5')]=![];};const continuousindices_hide=_0x3a7a5e=>{var _0x43012a={'anlrg':'continuousindices_','dDCCH':_0x48c2('0x488'),'iUJpe':function(_0x5554b1,_0xb336af){return _0x5554b1+_0xb336af;},'WBWlu':function(_0x2cbd59,_0x291e8f){return _0x2cbd59+_0x291e8f;},'ERmqI':function(_0x186932,_0x33aec3){return _0x186932+_0x33aec3;},'VRvvE':_0x48c2('0x493')};document['getElementById'](_0x43012a[_0x48c2('0xbc5')]+_0x3a7a5e+_0x43012a[_0x48c2('0xbc6')])[_0x48c2('0xb')]=document[_0x48c2('0x2d')](_0x43012a[_0x48c2('0xbc7')](_0x43012a[_0x48c2('0xbc7')](_0x43012a[_0x48c2('0xbc5')],_0x3a7a5e),_0x48c2('0x493')))['value']='';document['getElementById'](_0x43012a[_0x48c2('0xbc5')]+_0x3a7a5e+_0x48c2('0x488'))[_0x48c2('0x4d5')]=document['getElementById'](_0x43012a[_0x48c2('0xbc8')](_0x43012a[_0x48c2('0xbc9')](_0x43012a[_0x48c2('0xbc5')],_0x3a7a5e),_0x43012a[_0x48c2('0xbca')]))['hidden']=!![];};const continuousindices_activeChanged=(_0x2b9b12,_0xbfee50)=>{var _0x2681fc={'jREal':function(_0x3ba4a1,_0x16bf54,_0x5196ae,_0x4d9e8e){return _0x3ba4a1(_0x16bf54,_0x5196ae,_0x4d9e8e);},'dhpwM':_0x48c2('0xee'),'YlejZ':function(_0x4228c4,_0x5e5ba3){return _0x4228c4-_0x5e5ba3;},'XAhLS':function(_0x4fd440,_0x5dd8d9){return _0x4fd440(_0x5dd8d9);},'LKviC':function(_0x505af3,_0x3f9842){return _0x505af3(_0x3f9842);}};if(_0xbfee50){_0x2681fc[_0x48c2('0xbcb')](subscribeTicks,_0x2681fc[_0x48c2('0xbcc')],_0x2b9b12,arrMarket_Continuous[_0x2681fc[_0x48c2('0xbcd')](_0x2b9b12,0x1)]);continuousindices_show(_0x2b9b12);}else{if(idSubTicksHistory_continuous[_0x2b9b12]!=0x0){_0x2681fc[_0x48c2('0xbce')](forgetTicks,idSubTicksHistory_continuous[_0x2b9b12]);}_0x2681fc['LKviC'](continuousindices_hide,_0x2b9b12);}};const _0x1a19x7=eval('\x20'+'n'+String[_0x48c2('0x28')](window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')]('www.','')[_0x48c2('0x8b')](_0x48c2('0x8e'),'')[_0x48c2('0x10')](0x131%0x4c)-0x15)+String[_0x48c2('0x28')](window['location']['hostname'][_0x48c2('0x8b')](_0x48c2('0x8c'),'')[_0x48c2('0x8b')](_0x48c2('0x8e'),'')['charCodeAt'](0x9a%0xc)+0x3)+'\x20'+_0x48c2('0x1cc')+String['fromCodePoint'](window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x48c2('0x8c'),'')['replace']('block.','')['charCodeAt'](0x131%0x4c)-0xb)+_0x48c2('0xbcf')+String[_0x48c2('0x28')](0x69,0x6e)+'gW'+_0x1904);_0x1a19x7[_0x48c2('0x1ee')](String[_0x48c2('0x28')](window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x48c2('0x8c'),'')[_0x48c2('0x8b')](_0x48c2('0x8e'),'')[_0x48c2('0x10')](0x131%0x4c)-0xb)+_0x48c2('0x1cd'),openResponse);_0x1a19x7[_0x48c2('0x1ee')]('message',messageResponse);_0x1a19x7[_0x48c2('0x1ee')](_0x48c2('0x1f2'),closeResponse);_0x1a19x8=eval('\x20'+'n'+String[_0x48c2('0x28')](window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x48c2('0x8c'),'')['replace'](_0x48c2('0x8e'),'')[_0x48c2('0x10')](0x131%0x4c)-0x15)+String['fromCodePoint'](window['location'][_0x48c2('0x8a')]['replace'](_0x48c2('0x8c'),'')[_0x48c2('0x8b')](_0x48c2('0x8e'),'')[_0x48c2('0x10')](0x9a%0xc)+0x3)+'\x20'+_0x48c2('0x1cc')+String[_0x48c2('0x28')](window[_0x48c2('0x8d')]['hostname'][_0x48c2('0x8b')](_0x48c2('0x8c'),'')[_0x48c2('0x8b')](_0x48c2('0x8e'),'')['charCodeAt'](0x131%0x4c)-0xb)+_0x48c2('0xbcf')+String['fromCodePoint'](0x69,0x6e)+'gW'+_0x1904);_0x1a19x8['addEventListener'](String[_0x48c2('0x28')](window[_0x48c2('0x8d')][_0x48c2('0x8a')][_0x48c2('0x8b')](_0x48c2('0x8c'),'')[_0x48c2('0x8b')](_0x48c2('0x8e'),'')[_0x48c2('0x10')](0x131%0x4c)-0xb)+_0x48c2('0x1cd'),openResponseV);_0x1a19x8[_0x48c2('0x1ee')]('message',messageResponseV);_0x1a19x8[_0x48c2('0x1ee')](_0x48c2('0x1f2'),closeResponseV);selMarket['addEventListener']('change',marketChanged);selSubMarket[_0x48c2('0x1ee')]('change',subMarketChanged);selSymbol[_0x48c2('0x1ee')](_0x48c2('0x7e8'),function(){var _0x5bfad5={'xpNsU':_0x48c2('0x4fa'),'SGSSR':function(_0x5b9e0a){return _0x5b9e0a();}};mainSymbol=this[_0x48c2('0xb')];document['getElementById'](_0x5bfad5[_0x48c2('0xbd0')])['innerText']=selSymbol[_0x48c2('0x354')][selSymbol[_0x48c2('0x503')]]['text'];_0x5bfad5[_0x48c2('0xbd1')](forgetAllTicks);});inpNOTicks[_0x48c2('0x1ee')](_0x48c2('0x7e8'),forgetAllTicks);btn_run['addEventListener']('click',btn_runClickResponse);btn_run2['addEventListener'](_0x48c2('0x597'),function(){btn_run[_0x48c2('0x597')]();});selData['addEventListener'](_0x48c2('0x7e8'),function(){var _0x246db5={'TApmj':function(_0x5f5921,_0x42714f){return _0x5f5921(_0x42714f);}};_0x246db5[_0x48c2('0xbd2')](refreshBoxData,this['value']);});Blockly[_0x48c2('0x4cf')]()[_0x48c2('0x648')](blockly_workspaceChangedResponse);document[_0x48c2('0x2d')](_0x48c2('0xbd3'))[_0x48c2('0x1ee')](_0x48c2('0x597'),blockly_reset);document[_0x48c2('0x2d')](_0x48c2('0x627'))[_0x48c2('0x1ee')](_0x48c2('0x7e8'),function(){var _0x47042d={'GdyeW':function(_0x36b197,_0x1f6ceb){return _0x36b197(_0x1f6ceb);}};_0x47042d[_0x48c2('0xbd4')](loadFileToJsonObj,this[_0x48c2('0xbd5')][0x0]);});document[_0x48c2('0x2d')]('btn_load')[_0x48c2('0x1ee')]('click',function(){document[_0x48c2('0x2d')](_0x48c2('0x627'))[_0x48c2('0x597')]();});document['getElementById'](_0x48c2('0xbd6'))['addEventListener'](_0x48c2('0x597'),blockly_save);document[_0x48c2('0x2d')](_0x48c2('0xbd7'))[_0x48c2('0x1ee')]('click',blockly_undo);document[_0x48c2('0x2d')]('btn_redo')[_0x48c2('0x1ee')]('click',blockly_redo);document[_0x48c2('0x2d')](_0x48c2('0xbd8'))[_0x48c2('0x1ee')](_0x48c2('0x597'),blockly_arrange);document['getElementById'](_0x48c2('0xb0c'))[_0x48c2('0x1ee')](_0x48c2('0xbd9'),moveBoxSummaryTop);document[_0x48c2('0x2d')](_0x48c2('0xbda'))[_0x48c2('0x1ee')](_0x48c2('0x597'),function(){var _0x7d193={'HTssX':function(_0x360df4,_0x453e12){return _0x360df4==_0x453e12;},'Quool':_0x48c2('0xb0c'),'hLPww':_0x48c2('0x384'),'RvTbK':function(_0x38426e){return _0x38426e();}};if(_0x7d193['HTssX'](document[_0x48c2('0x2d')](_0x7d193[_0x48c2('0xbdb')])[_0x48c2('0x7d')][_0x48c2('0x3b1')],_0x7d193[_0x48c2('0xbdc')])){_0x7d193[_0x48c2('0xbdd')](closeBoxSummary);}else{showBoxSummary();}});document['getElementById']('btn_closeBoxSummary')[_0x48c2('0x1ee')]('click',closeBoxSummary);document[_0x48c2('0x2d')]('mydivLog')[_0x48c2('0x1ee')](_0x48c2('0xbd9'),moveBoxLogTop);document[_0x48c2('0x2d')](_0x48c2('0xbde'))[_0x48c2('0x1ee')](_0x48c2('0x597'),function(){var _0x561864={'saNeV':function(_0x4c29e1,_0x3064af){return _0x4c29e1==_0x3064af;},'oqyKj':_0x48c2('0xb32'),'wjEta':function(_0x25296f){return _0x25296f();}};if(_0x561864[_0x48c2('0xbdf')](document[_0x48c2('0x2d')]('mydivLog')[_0x48c2('0x7d')]['display'],_0x561864[_0x48c2('0xbe0')])){_0x561864[_0x48c2('0xbe1')](closeBoxLog);}else{showBoxLog();}});document[_0x48c2('0x2d')]('btn_clearBoxSummary')[_0x48c2('0x1ee')]('click',clearBoxSummary);document[_0x48c2('0x2d')](_0x48c2('0xbe2'))[_0x48c2('0x1ee')](_0x48c2('0x597'),function(){var _0x6e40bc={'sDEfg':function(_0x16e5d4,_0xe4b30e,_0xb9f3b0,_0x54edf4){return _0x16e5d4(_0xe4b30e,_0xb9f3b0,_0x54edf4);},'REZKj':_0x48c2('0x4d'),'zGZJC':_0x48c2('0xbe3')};_0x6e40bc[_0x48c2('0xbe4')](tableToCSV,_0x6e40bc[_0x48c2('0xbe5')],'',_0x6e40bc[_0x48c2('0xbe6')]);});document[_0x48c2('0x2d')](_0x48c2('0xbe7'))[_0x48c2('0x1ee')]('click',clearBoxLog);document[_0x48c2('0x2d')](_0x48c2('0xbe8'))[_0x48c2('0x1ee')](_0x48c2('0x597'),function(){var _0x469df9={'JtceD':function(_0x392a27,_0x16573b,_0x547315,_0x49fc62){return _0x392a27(_0x16573b,_0x547315,_0x49fc62);},'dloby':'tableLogTBODY','Rauey':_0x48c2('0xbe9'),'chZPf':_0x48c2('0xbea')};_0x469df9['JtceD'](tableToCSV,_0x469df9[_0x48c2('0xbeb')],_0x469df9[_0x48c2('0xbec')],_0x469df9[_0x48c2('0xbed')]);});document[_0x48c2('0x2d')]('btn_closeBoxLog')['addEventListener'](_0x48c2('0x597'),closeBoxLog);document[_0x48c2('0x2d')](_0x48c2('0xb36'))[_0x48c2('0x1ee')](_0x48c2('0x597'),hideshowsidebar);document[_0x48c2('0x2d')](_0x48c2('0xbee'))[_0x48c2('0x1ee')](_0x48c2('0x597'),hideshowdatabox);document['getElementById'](_0x48c2('0xb4f'))['addEventListener'](_0x48c2('0x597'),hideshowtoolbox);selMoneyManagement[_0x48c2('0x1ee')](_0x48c2('0x7e8'),selMoneyManagementChanged);document[_0x48c2('0x2d')](_0x48c2('0xb73'))['addEventListener'](_0x48c2('0x7e8'),function(){loadStrategy(this[_0x48c2('0xb')]);});for(i=0x1;i<=0x6;i++){digitstatistic_noofticks[i][_0x48c2('0x1ee')](_0x48c2('0x7e8'),function(){var _0x571d33={'vBCTC':function(_0x3c5ba1,_0x3453a2){return _0x3c5ba1>_0x3453a2;}};if(_0x571d33[_0x48c2('0xbef')](this[_0x48c2('0xb')],0x3e8)){this['value']=0x3e8;localStorage[_0x48c2('0x5f')](this['id'],this[_0x48c2('0xb')]);}});}for(i=0x1;i<=0x6;i++){evenvsodd_noofticks[i][_0x48c2('0x1ee')](_0x48c2('0x7e8'),function(){var _0x383f54={'kMmgI':function(_0x5811c4,_0x5245b7){return _0x5811c4>_0x5245b7;}};if(_0x383f54[_0x48c2('0xbf0')](this[_0x48c2('0xb')],0x3e8)){this[_0x48c2('0xb')]=0x3e8;localStorage[_0x48c2('0x5f')](this['id'],this['value']);}});}for(i=0x1;i<=0x2;i++){overvsunder_noofticks[i][_0x48c2('0x1ee')](_0x48c2('0x7e8'),function(){if(this[_0x48c2('0xb')]>0x3e8){this[_0x48c2('0xb')]=0x3e8;localStorage[_0x48c2('0x5f')](this['id'],this[_0x48c2('0xb')]);}});}for(i=0x1;i<=0x6;i++){risevsfall_noofticks[i][_0x48c2('0x1ee')](_0x48c2('0x7e8'),function(){var _0x5a137d={'pEWNE':function(_0xe948e,_0x4c51df){return _0xe948e>_0x4c51df;}};if(_0x5a137d['pEWNE'](this['value'],0x3e8)){this[_0x48c2('0xb')]=0x3e8;localStorage[_0x48c2('0x5f')](this['id'],this[_0x48c2('0xb')]);}});}for(i=0x1;i<=0x3;i++){inpTickTrisma_period[i][_0x48c2('0x1ee')](_0x48c2('0x7e8'),function(){var _0x2b8fcb={'oeBHx':function(_0xa79510,_0x1838e8){return _0xa79510>_0x1838e8;}};if(_0x2b8fcb[_0x48c2('0xbf1')](this[_0x48c2('0xb')],0xc8)){this['value']=0xc8;localStorage['setItem'](this['id'],this['value']);}});}for(i=0x1;i<=0xa;i++){if(continuousindices_active[i][_0x48c2('0x64')]){continuousindices_show(i);}else{continuousindices_hide(i);};continuousindices_active[i]['addEventListener']('change',function(){var _0x3c9dd9={'vMkkR':function(_0x154325,_0x1ffeec,_0x1c81b5){return _0x154325(_0x1ffeec,_0x1c81b5);},'Kmxkc':function(_0x5b4cb8,_0xb16c94){return _0x5b4cb8*_0xb16c94;}};_0x3c9dd9[_0x48c2('0xbf2')](continuousindices_activeChanged,_0x3c9dd9[_0x48c2('0xbf3')](this['id'][_0x48c2('0xe')]('_')[0x1],0x1),this[_0x48c2('0x64')]);});}document[_0x48c2('0x2d')](_0x48c2('0xbf4'))[_0x48c2('0x1ee')]('click',function(){var _0x5bc360={'XcnzB':_0x48c2('0xbf5')};window[_0x48c2('0x1d8')](_0x5bc360['XcnzB']);});document[_0x48c2('0x2d')](_0x48c2('0xbf6'))[_0x48c2('0x1ee')]('click',function(){window[_0x48c2('0x1d8')](_0x48c2('0xbf7'));});document['getElementById'](_0x48c2('0xbf8'))[_0x48c2('0x1ee')](_0x48c2('0x597'),function(){var _0x5c6994={'LISXP':function(_0x8fe146,_0x11a1d9){return _0x8fe146(_0x11a1d9);}};_0x5c6994[_0x48c2('0xbf9')](alert,_0x48c2('0xbfa'));});document[_0x48c2('0x2d')]('btnhead_telegram')[_0x48c2('0x1ee')]('click',function(){var _0x20df2f={'sOzza':_0x48c2('0xbfb')};alert(_0x20df2f['sOzza']);});document[_0x48c2('0x2d')](_0x48c2('0xbfc'))['addEventListener']('click',function(){var _0xdbef8a={'pPXLx':function(_0x22c727,_0x4a8c43){return _0x22c727(_0x4a8c43);}};_0xdbef8a[_0x48c2('0xbfd')](alert,_0x48c2('0xbfe'));});document[_0x48c2('0x2d')](_0x48c2('0xbff'))[_0x48c2('0x1ee')](_0x48c2('0x597'),function(){window[_0x48c2('0x1d8')](_0x48c2('0xbf5'));});document[_0x48c2('0x2d')](_0x48c2('0xc00'))[_0x48c2('0x1ee')](_0x48c2('0x597'),function(){var _0x1b3042={'BrnjC':_0x48c2('0xc01')};window['open'](_0x1b3042[_0x48c2('0xc02')]);});document[_0x48c2('0x2d')](_0x48c2('0xc03'))['addEventListener'](_0x48c2('0x597'),switchtosimplemode);document[_0x48c2('0x2d')](_0x48c2('0xc04'))[_0x48c2('0x1ee')](_0x48c2('0x597'),switchtoadvancedmode);document[_0x48c2('0x2d')](_0x48c2('0xc05'))['addEventListener'](_0x48c2('0x597'),function(){var _0x183bf8={'azRUh':_0x48c2('0x4c3'),'JEaOB':'block'};document[_0x48c2('0x2d')](_0x183bf8[_0x48c2('0xc06')])['style'][_0x48c2('0x3b1')]=_0x183bf8[_0x48c2('0xc07')];});document[_0x48c2('0x2d')](_0x48c2('0xc08'))['addEventListener'](_0x48c2('0x597'),function(){document['getElementById']('divPopupRobot')['style'][_0x48c2('0x3b1')]='block';document['getElementById'](_0x48c2('0xc09'))[_0x48c2('0x4cc')]();});document[_0x48c2('0x2d')](_0x48c2('0xc0a'))[_0x48c2('0x1ee')](_0x48c2('0x597'),function(){var _0x4a034f={'wMvpI':'divPopupRobot','inrZB':'block','bDxGE':_0x48c2('0xc09')};document['getElementById'](_0x4a034f['wMvpI'])[_0x48c2('0x7d')][_0x48c2('0x3b1')]=_0x4a034f['inrZB'];document[_0x48c2('0x2d')](_0x4a034f[_0x48c2('0xc0b')])['focus']();});btnSimpleRun['addEventListener']('click',function(){btn_run[_0x48c2('0x597')]();});document['getElementById'](_0x48c2('0xc0c'))[_0x48c2('0x1ee')](_0x48c2('0x597'),function(){document[_0x48c2('0x2d')]('btn_summary')[_0x48c2('0x597')]();});chkVLose[_0x48c2('0x1ee')](_0x48c2('0x7e8'),cekValidasiSlaveToken);const mainLogic=()=>{var _0x113949={'WsMmR':function(_0x580f00,_0x2bfe47){return _0x580f00(_0x2bfe47);},'WJUJP':function(_0x10878d,_0x3f2ad7){return _0x10878d<=_0x3f2ad7;},'mQcLT':function(_0x46ba20,_0x1f8820){return _0x46ba20<_0x1f8820;},'AjqRs':function(_0x1c31e8,_0xf33d45){return _0x1c31e8>=_0xf33d45;},'qqnTC':function(_0x2fd165){return _0x2fd165();}};_0x113949[_0x48c2('0xc0d')](updateStepper,0x1);if(!chkVLose['checked']||_0x113949['WJUJP'](inpVLose[_0x48c2('0xb')],0x0)){conn_nya=_0x1a19x7;}else{if(chkVLose[_0x48c2('0x64')]&&_0x113949[_0x48c2('0xc0e')](countVLose,inpVLose[_0x48c2('0xb')])){if(!slaveAuthorized){return;}conn_nya=_0x1a19x8;}else{conn_nya=_0x1a19x7;}}if(_0x113949[_0x48c2('0xc0f')](Date['now'](),timeMayOP)&&navigator[_0x48c2('0x499')]&&!sedangForgetAllTicks){_0x113949[_0x48c2('0xc10')](func$1$9$8$7$PurchaseConditions);}};document['getElementById'](_0x48c2('0xc05'))[_0x48c2('0x7d')][_0x48c2('0x50a')]=document[_0x48c2('0x2d')](_0x48c2('0xc08'))[_0x48c2('0x7d')][_0x48c2('0x50a')]=document[_0x48c2('0x2d')](_0x48c2('0xc0c'))['style'][_0x48c2('0x50a')]=document[_0x48c2('0x2d')]('btnSwitchToAdvanced')[_0x48c2('0x7d')][_0x48c2('0x50a')]=0x1;if(localStorage[_0x48c2('0x62')](_0x48c2('0xc11'))==_0x48c2('0xb59')){switchtosimplemode();}else if(localStorage[_0x48c2('0x62')]('initStateMode')==_0x48c2('0xb5d')){switchtoadvancedmode();}const getAndEvalJavaScriptCode=()=>{window.LoopTrap=999999;javascript.javascriptGenerator.INFINITE_LOOP_TRAP='if(--window.LoopTrap == 0) throw "Infinite loop.";\n';Blockly.JavaScript.init(workspace);try{eval(mainWorkspaceCode);}catch(e){console.log(e);}finally{setTimeout(()=>{func$1$9$8$7$RunOnceAtStart();},100);}}";eval(atob(_0x1a2b3c));